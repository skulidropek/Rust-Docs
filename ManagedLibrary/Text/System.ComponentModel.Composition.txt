Сборка: System.ComponentModel.Composition.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoCorlibVersion
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  string FxVersion
  string FxFileVersion
  string EnvironmentVersion
  string VsVersion
  string VsFileVersion
  string PublicKeyToken
  string AssemblyI18N
  string AssemblyMicrosoft_JScript
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_2_0
  string AssemblySystemCore_3_5
  string AssemblySystem_Core
  string WindowsBase_3_0
  string AssemblyWindowsBase
  string AssemblyPresentationCore_3_5
  string AssemblyPresentationCore_4_0
  string AssemblyPresentationFramework_3_5
  string AssemblySystemServiceModel_3_0
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Internal.Assumes
Наследуется от: object
Поля:
Свойства:
Методы:
  void NotNull(T value)
  void NotNull(T1 value1, T2 value2)
  void NotNull(T1 value1, T2 value2, T3 value3)
  void NotNullOrEmpty(string value)
  void IsTrue(bool condition)
  void IsTrue(bool condition, string message)
  T NotReachable()
  Exception UncatchableException(string message)
--------------------------------------------------
Класс: Microsoft.Internal.AttributeServices
Наследуется от: object
Поля:
Свойства:
Методы:
  T[] GetAttributes(ICustomAttributeProvider attributeProvider)
  T[] GetAttributes(ICustomAttributeProvider attributeProvider, bool inherit)
  T GetFirstAttribute(ICustomAttributeProvider attributeProvider)
  T GetFirstAttribute(ICustomAttributeProvider attributeProvider, bool inherit)
  bool IsAttributeDefined(ICustomAttributeProvider attributeProvider)
  bool IsAttributeDefined(ICustomAttributeProvider attributeProvider, bool inherit)
--------------------------------------------------
Класс: Microsoft.Internal.ContractServices
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TryCast(Type contractType, object value, Object& result)
--------------------------------------------------
Класс: Microsoft.Internal.GenerationServices
Наследуется от: object
Поля:
  MethodInfo _typeGetTypeFromHandleMethod
  Type TypeType
  Type StringType
  Type CharType
  Type BooleanType
  Type ByteType
  Type SByteType
  Type Int16Type
  Type UInt16Type
  Type Int32Type
  Type UInt32Type
  Type Int64Type
  Type UInt64Type
  Type DoubleType
  Type SingleType
  Type IEnumerableTypeofT
  Type IEnumerableType
  MethodInfo ExceptionGetData
  MethodInfo DictionaryAdd
  ConstructorInfo ObjectCtor
Свойства:
Методы:
  ILGenerator CreateGeneratorForPublicConstructor(TypeBuilder typeBuilder, Type[] ctrArgumentTypes)
  void LoadValue(ILGenerator ilGenerator, object value)
  void AddItemToLocalDictionary(ILGenerator ilGenerator, LocalBuilder dictionary, object key, object value)
  void AddLocalToLocalDictionary(ILGenerator ilGenerator, LocalBuilder dictionary, object key, LocalBuilder value)
  void GetExceptionDataAndStoreInLocal(ILGenerator ilGenerator, LocalBuilder exception, LocalBuilder dataStore)
  void LoadEnumerable(ILGenerator ilGenerator, IEnumerable enumerable)
  bool IsBoxingRequiredForValue(object value)
  void LoadNull(ILGenerator ilGenerator)
  void LoadString(ILGenerator ilGenerator, string s)
  void LoadInt(ILGenerator ilGenerator, int value)
  void LoadLong(ILGenerator ilGenerator, long value)
  void LoadFloat(ILGenerator ilGenerator, float value)
  void LoadDouble(ILGenerator ilGenerator, double value)
  void LoadTypeOf(ILGenerator ilGenerator, Type type)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.Internal.LazyServices
Наследуется от: object
Поля:
Свойства:
Методы:
  T GetNotNullValue(Lazy`1<T> lazy, string argument)
--------------------------------------------------
Класс: Microsoft.Internal.ReadLock
Наследуется от: ValueType
Поля:
  Lock _lock
  int _isDisposed
Свойства:
Методы:
  void .ctor(Lock lock)
  void Dispose()
--------------------------------------------------
Класс: Microsoft.Internal.WriteLock
Наследуется от: ValueType
Поля:
  Lock _lock
  int _isDisposed
Свойства:
Методы:
  void .ctor(Lock lock)
  void Dispose()
--------------------------------------------------
Класс: Microsoft.Internal.Lock
Наследуется от: object
Поля:
  ReaderWriterLockSlim _thisLock
  int _isDisposed
Свойства:
Методы:
  void EnterReadLock()
  void EnterWriteLock()
  void ExitReadLock()
  void ExitWriteLock()
  void Dispose()
  void .ctor()
--------------------------------------------------
Класс: Microsoft.Internal.ReflectionInvoke
Наследуется от: object
Поля:
Свойства:
Методы:
  object SafeCreateInstance(Type type, Object[] arguments)
  object SafeInvoke(ConstructorInfo constructor, Object[] arguments)
  object SafeInvoke(MethodInfo method, object instance, Object[] arguments)
  object SafeGetValue(FieldInfo field, object instance)
  void SafeSetValue(FieldInfo field, object instance, object value)
  void DemandMemberAccessIfNeeded(MethodInfo method)
  void DemandMemberAccessIfNeeded(ConstructorInfo constructor)
  void DemandMemberAccessIfNeeded(FieldInfo field)
  void DemandMemberAccessIfNeeded(Type type)
--------------------------------------------------
Класс: Microsoft.Internal.ReflectionServices
Наследуется от: object
Поля:
Свойства:
Методы:
  Assembly Assembly(MemberInfo member)
  bool IsVisible(ConstructorInfo constructor)
  bool IsVisible(FieldInfo field)
  bool IsVisible(MethodInfo method)
  string GetDisplayName(Type declaringType, string name)
  string GetDisplayName(MemberInfo member)
  bool TryGetGenericInterfaceType(Type instanceType, Type targetOpenInterfaceType, Type& targetClosedInterfaceType)
  IEnumerable`1<PropertyInfo> GetAllProperties(Type type)
  IEnumerable`1<MethodInfo> GetAllMethods(Type type)
  IEnumerable`1<MethodInfo> GetDeclaredMethods(Type type)
  IEnumerable`1<FieldInfo> GetAllFields(Type type)
  IEnumerable`1<FieldInfo> GetDeclaredFields(Type type)
--------------------------------------------------
Класс: Microsoft.Internal.Requires
Наследуется от: object
Поля:
Свойства:
Методы:
  void NotNull(T value, string parameterName)
  void NotNullOrEmpty(string value, string parameterName)
  void NotNullOrNullElements(IEnumerable`1<T> values, string parameterName)
  void NullOrNotNullElements(IEnumerable`1<KeyValuePair`2<TKey, TValue>> values, string parameterName)
  void NullOrNotNullElements(IEnumerable`1<T> values, string parameterName)
  void NotNullElements(IEnumerable`1<T> values, string parameterName)
  void NotNullElements(IEnumerable`1<KeyValuePair`2<TKey, TValue>> values, string parameterName)
  void IsInMembertypeSet(MemberTypes value, string parameterName, MemberTypes enumFlagSet)
--------------------------------------------------
Класс: Microsoft.Internal.StringComparers
Наследуется от: object
Поля:
Свойства:
  StringComparer ContractName
  StringComparer MetadataKeyNames
Методы:
  StringComparer get_ContractName()
  StringComparer get_MetadataKeyNames()
--------------------------------------------------
Класс: Microsoft.Internal.Strings
Наследуется от: object
Поля:
  ResourceManager resourceMan
  CultureInfo resourceCulture
Свойства:
  ResourceManager ResourceManager
  CultureInfo Culture
  string Argument_AssemblyReflectionOnly
  string Argument_ElementReflectionOnlyType
  string Argument_ExportsEmpty
  string Argument_ExportsTooMany
  string Argument_NullElement
  string Argument_ReflectionContextReturnsReflectionOnlyType
  string ArgumentException_EmptyString
  string ArgumentOutOfRange_InvalidEnum
  string ArgumentOutOfRange_InvalidEnumInSet
  string ArgumentValueType
  string AssemblyFileNotFoundOrWrongType
  string AtomicComposition_AlreadyCompleted
  string AtomicComposition_AlreadyNested
  string AtomicComposition_PartOfAnotherAtomicComposition
  string CardinalityMismatch_NoExports
  string CardinalityMismatch_TooManyExports
  string CatalogMutation_Invalid
  string CompositionElement_UnknownOrigin
  string CompositionException_ChangesRejected
  string CompositionException_ElementPrefix
  string CompositionException_ErrorPrefix
  string CompositionException_MetadataViewInvalidConstructor
  string CompositionException_MultipleErrorsWithMultiplePaths
  string CompositionException_OriginFormat
  string CompositionException_OriginSeparator
  string CompositionException_PathsCountSeparator
  string CompositionException_ReviewErrorProperty
  string CompositionException_SingleErrorWithMultiplePaths
  string CompositionException_SingleErrorWithSinglePath
  string CompositionTrace_Discovery_AssemblyLoadFailed
  string CompositionTrace_Discovery_DefinitionContainsNoExports
  string CompositionTrace_Discovery_DefinitionMarkedWithPartNotDiscoverableAttribute
  string CompositionTrace_Discovery_DefinitionMismatchedExportArity
  string CompositionTrace_Discovery_MemberMarkedWithMultipleImportAndImportMany
  string CompositionTrace_Rejection_DefinitionRejected
  string CompositionTrace_Rejection_DefinitionResurrected
  string ContractMismatch_ExportedValueCannotBeCastToT
  string ContractMismatch_InvalidCastOnMetadataField
  string ContractMismatch_MetadataViewImplementationCanNotBeNull
  string ContractMismatch_MetadataViewImplementationDoesNotImplementViewInterface
  string ContractMismatch_NullReferenceOnMetadataField
  string DirectoryNotFound
  string Discovery_DuplicateMetadataNameValues
  string Discovery_MetadataContainsValueWithInvalidType
  string Discovery_ReservedMetadataNameUsed
  string ExportDefinitionNotOnThisComposablePart
  string ExportFactory_TooManyGenericParameters
  string ExportNotValidOnIndexers
  string ImportDefinitionNotOnThisComposablePart
  string ImportEngine_ComposeTookTooManyIterations
  string ImportEngine_InvalidStateForRecomposition
  string ImportEngine_PartCannotActivate
  string ImportEngine_PartCannotGetExportedValue
  string ImportEngine_PartCannotSetImport
  string ImportEngine_PartCycle
  string ImportEngine_PreventedByExistingImport
  string ImportNotSetOnPart
  string ImportNotValidOnIndexers
  string InternalExceptionMessage
  string InvalidArgument_ReflectionContext
  string InvalidMetadataValue
  string InvalidMetadataView
  string InvalidOperation_DefinitionCannotBeRecomposed
  string InvalidOperation_GetExportedValueBeforePrereqImportSet
  string InvalidOperationReentrantCompose
  string InvalidPartCreationPolicyOnImport
  string InvalidPartCreationPolicyOnPart
  string InvalidSetterOnMetadataField
  string LazyMemberInfo_AccessorsNull
  string LazyMemberInfo_InvalidAccessorOnSimpleMember
  string LazyMemberinfo_InvalidEventAccessors_AccessorType
  string LazyMemberInfo_InvalidEventAccessors_Cardinality
  string LazyMemberinfo_InvalidPropertyAccessors_AccessorType
  string LazyMemberInfo_InvalidPropertyAccessors_Cardinality
  string LazyMemberInfo_NoAccessors
  string LazyServices_LazyResolvesToNull
  string MetadataItemNotSupported
  string NotImplemented_NotOverriddenByDerived
  string NotSupportedCatalogChanges
  string NotSupportedInterfaceMetadataView
  string NotSupportedReadOnlyDictionary
  string ObjectAlreadyInitialized
  string ObjectMustBeInitialized
  string ReentrantCompose
  string ReflectionContext_Requires_DefaultConstructor
  string ReflectionContext_Type_Required
  string ReflectionModel_ExportNotReadable
  string ReflectionModel_ExportThrewException
  string ReflectionModel_ImportCollectionAddThrewException
  string ReflectionModel_ImportCollectionClearThrewException
  string ReflectionModel_ImportCollectionConstructionThrewException
  string ReflectionModel_ImportCollectionGetThrewException
  string ReflectionModel_ImportCollectionIsReadOnlyThrewException
  string ReflectionModel_ImportCollectionNotWritable
  string ReflectionModel_ImportCollectionNull
  string ReflectionModel_ImportManyOnParameterCanOnlyBeAssigned
  string ReflectionModel_ImportNotAssignableFromExport
  string ReflectionModel_ImportNotWritable
  string ReflectionModel_ImportThrewException
  string ReflectionModel_InvalidExportDefinition
  string ReflectionModel_InvalidImportDefinition
  string ReflectionModel_InvalidMemberImportDefinition
  string ReflectionModel_InvalidParameterImportDefinition
  string ReflectionModel_InvalidPartDefinition
  string ReflectionModel_PartConstructorMissing
  string ReflectionModel_PartConstructorThrewException
  string ReflectionModel_PartOnImportsSatisfiedThrewException
  string TypeCatalog_DisplayNameFormat
  string TypeCatalog_Empty
Методы:
  void .ctor()
  ResourceManager get_ResourceManager()
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  string get_Argument_AssemblyReflectionOnly()
  string get_Argument_ElementReflectionOnlyType()
  string get_Argument_ExportsEmpty()
  string get_Argument_ExportsTooMany()
  string get_Argument_NullElement()
  string get_Argument_ReflectionContextReturnsReflectionOnlyType()
  string get_ArgumentException_EmptyString()
  string get_ArgumentOutOfRange_InvalidEnum()
  string get_ArgumentOutOfRange_InvalidEnumInSet()
  string get_ArgumentValueType()
  string get_AssemblyFileNotFoundOrWrongType()
  string get_AtomicComposition_AlreadyCompleted()
  string get_AtomicComposition_AlreadyNested()
  string get_AtomicComposition_PartOfAnotherAtomicComposition()
  string get_CardinalityMismatch_NoExports()
  string get_CardinalityMismatch_TooManyExports()
  string get_CatalogMutation_Invalid()
  string get_CompositionElement_UnknownOrigin()
  string get_CompositionException_ChangesRejected()
  string get_CompositionException_ElementPrefix()
  string get_CompositionException_ErrorPrefix()
  string get_CompositionException_MetadataViewInvalidConstructor()
  string get_CompositionException_MultipleErrorsWithMultiplePaths()
  string get_CompositionException_OriginFormat()
  string get_CompositionException_OriginSeparator()
  string get_CompositionException_PathsCountSeparator()
  string get_CompositionException_ReviewErrorProperty()
  string get_CompositionException_SingleErrorWithMultiplePaths()
  string get_CompositionException_SingleErrorWithSinglePath()
  string get_CompositionTrace_Discovery_AssemblyLoadFailed()
  string get_CompositionTrace_Discovery_DefinitionContainsNoExports()
  string get_CompositionTrace_Discovery_DefinitionMarkedWithPartNotDiscoverableAttribute()
  string get_CompositionTrace_Discovery_DefinitionMismatchedExportArity()
  string get_CompositionTrace_Discovery_MemberMarkedWithMultipleImportAndImportMany()
  string get_CompositionTrace_Rejection_DefinitionRejected()
  string get_CompositionTrace_Rejection_DefinitionResurrected()
  string get_ContractMismatch_ExportedValueCannotBeCastToT()
  string get_ContractMismatch_InvalidCastOnMetadataField()
  string get_ContractMismatch_MetadataViewImplementationCanNotBeNull()
  string get_ContractMismatch_MetadataViewImplementationDoesNotImplementViewInterface()
  string get_ContractMismatch_NullReferenceOnMetadataField()
  string get_DirectoryNotFound()
  string get_Discovery_DuplicateMetadataNameValues()
  string get_Discovery_MetadataContainsValueWithInvalidType()
  string get_Discovery_ReservedMetadataNameUsed()
  string get_ExportDefinitionNotOnThisComposablePart()
  string get_ExportFactory_TooManyGenericParameters()
  string get_ExportNotValidOnIndexers()
  string get_ImportDefinitionNotOnThisComposablePart()
  string get_ImportEngine_ComposeTookTooManyIterations()
  string get_ImportEngine_InvalidStateForRecomposition()
  string get_ImportEngine_PartCannotActivate()
  string get_ImportEngine_PartCannotGetExportedValue()
  string get_ImportEngine_PartCannotSetImport()
  string get_ImportEngine_PartCycle()
  string get_ImportEngine_PreventedByExistingImport()
  string get_ImportNotSetOnPart()
  string get_ImportNotValidOnIndexers()
  string get_InternalExceptionMessage()
  string get_InvalidArgument_ReflectionContext()
  string get_InvalidMetadataValue()
  string get_InvalidMetadataView()
  string get_InvalidOperation_DefinitionCannotBeRecomposed()
  string get_InvalidOperation_GetExportedValueBeforePrereqImportSet()
  string get_InvalidOperationReentrantCompose()
  string get_InvalidPartCreationPolicyOnImport()
  string get_InvalidPartCreationPolicyOnPart()
  string get_InvalidSetterOnMetadataField()
  string get_LazyMemberInfo_AccessorsNull()
  string get_LazyMemberInfo_InvalidAccessorOnSimpleMember()
  string get_LazyMemberinfo_InvalidEventAccessors_AccessorType()
  string get_LazyMemberInfo_InvalidEventAccessors_Cardinality()
  string get_LazyMemberinfo_InvalidPropertyAccessors_AccessorType()
  string get_LazyMemberInfo_InvalidPropertyAccessors_Cardinality()
  string get_LazyMemberInfo_NoAccessors()
  string get_LazyServices_LazyResolvesToNull()
  string get_MetadataItemNotSupported()
  string get_NotImplemented_NotOverriddenByDerived()
  string get_NotSupportedCatalogChanges()
  string get_NotSupportedInterfaceMetadataView()
  string get_NotSupportedReadOnlyDictionary()
  string get_ObjectAlreadyInitialized()
  string get_ObjectMustBeInitialized()
  string get_ReentrantCompose()
  string get_ReflectionContext_Requires_DefaultConstructor()
  string get_ReflectionContext_Type_Required()
  string get_ReflectionModel_ExportNotReadable()
  string get_ReflectionModel_ExportThrewException()
  string get_ReflectionModel_ImportCollectionAddThrewException()
  string get_ReflectionModel_ImportCollectionClearThrewException()
  string get_ReflectionModel_ImportCollectionConstructionThrewException()
  string get_ReflectionModel_ImportCollectionGetThrewException()
  string get_ReflectionModel_ImportCollectionIsReadOnlyThrewException()
  string get_ReflectionModel_ImportCollectionNotWritable()
  string get_ReflectionModel_ImportCollectionNull()
  string get_ReflectionModel_ImportManyOnParameterCanOnlyBeAssigned()
  string get_ReflectionModel_ImportNotAssignableFromExport()
  string get_ReflectionModel_ImportNotWritable()
  string get_ReflectionModel_ImportThrewException()
  string get_ReflectionModel_InvalidExportDefinition()
  string get_ReflectionModel_InvalidImportDefinition()
  string get_ReflectionModel_InvalidMemberImportDefinition()
  string get_ReflectionModel_InvalidParameterImportDefinition()
  string get_ReflectionModel_InvalidPartDefinition()
  string get_ReflectionModel_PartConstructorMissing()
  string get_ReflectionModel_PartConstructorThrewException()
  string get_ReflectionModel_PartOnImportsSatisfiedThrewException()
  string get_TypeCatalog_DisplayNameFormat()
  string get_TypeCatalog_Empty()
--------------------------------------------------
Класс: Microsoft.Internal.Runtime.Serialization.SerializationServices
Наследуется от: object
Поля:
Свойства:
Методы:
  T GetValue(SerializationInfo info, string name)
--------------------------------------------------
Класс: Microsoft.Internal.Collections.CollectionServices
Наследуется от: object
Поля:
  Type StringType
  Type IEnumerableType
  Type IEnumerableOfTType
  Type ICollectionOfTType
Свойства:
Методы:
  ICollection`1<object> GetCollectionWrapper(Type itemType, object collectionObject)
  bool IsEnumerableOfT(Type type)
  Type GetEnumerableElementType(Type type)
  Type GetCollectionElementType(Type type)
  ReadOnlyCollection`1<T> ToReadOnlyCollection(IEnumerable`1<T> source)
  IEnumerable`1<T> ConcatAllowingNull(IEnumerable`1<T> source, IEnumerable`1<T> second)
  ICollection`1<T> ConcatAllowingNull(ICollection`1<T> source, ICollection`1<T> second)
  List`1<T> FastAppendToListAllowNulls(List`1<T> source, IEnumerable`1<T> second)
  void ForEach(IEnumerable`1<T> source, Action`1<T> action)
  EnumerableCardinality GetCardinality(IEnumerable`1<T> source)
  bool FastAny(IEnumerable`1<T> source)
  Stack`1<T> Copy(Stack`1<T> stack)
  T[] AsArray(IEnumerable`1<T> enumerable)
  List`1<T> AsList(IEnumerable`1<T> enumerable)
  bool IsArrayEqual(T[] thisArray, T[] thatArray)
  bool IsCollectionEqual(IList`1<T> thisList, IList`1<T> thatList)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.Internal.Collections.EnumerableCardinality
Наследуется от: Enum
Поля:
  int value__
  EnumerableCardinality Zero
  EnumerableCardinality One
  EnumerableCardinality TwoOrMore
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Internal.Collections.WeakReferenceCollection`1
Наследуется от: object
Поля:
  List`1<WeakReference> _items
Свойства:
Методы:
  void Add(T item)
  void Remove(T item)
  bool Contains(T item)
  void Clear()
  int IndexOf(T item)
  void CleanupDeadReferences()
  List`1<T> AliveItemsToList()
  void .ctor()
--------------------------------------------------
Класс: System.Lazy`2
Наследуется от: Lazy`1<T>
Поля:
  TMetadata _metadata
Свойства:
  TMetadata Metadata
Методы:
  void .ctor(Func`1<T> valueFactory, TMetadata metadata)
  void .ctor(TMetadata metadata)
  void .ctor(TMetadata metadata, bool isThreadSafe)
  void .ctor(Func`1<T> valueFactory, TMetadata metadata, bool isThreadSafe)
  void .ctor(TMetadata metadata, LazyThreadSafetyMode mode)
  void .ctor(Func`1<T> valueFactory, TMetadata metadata, LazyThreadSafetyMode mode)
  TMetadata get_Metadata()
--------------------------------------------------
Класс: System.ComponentModel.LocalizableAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(bool isLocalizable)
--------------------------------------------------
Класс: System.ComponentModel.Composition.AttributedModelServices
Наследуется от: object
Поля:
Свойства:
Методы:
  TMetadataView GetMetadataView(IDictionary`2<string, object> metadata)
  ComposablePart CreatePart(object attributedPart)
  ComposablePart CreatePart(object attributedPart, ReflectionContext reflectionContext)
  ComposablePart CreatePart(ComposablePartDefinition partDefinition, object attributedPart)
  ComposablePartDefinition CreatePartDefinition(Type type, ICompositionElement origin)
  ComposablePartDefinition CreatePartDefinition(Type type, ICompositionElement origin, bool ensureIsDiscoverable)
  string GetTypeIdentity(Type type)
  string GetTypeIdentity(MethodInfo method)
  string GetContractName(Type type)
  ComposablePart AddExportedValue(CompositionBatch batch, T exportedValue)
  void ComposeExportedValue(CompositionContainer container, T exportedValue)
  ComposablePart AddExportedValue(CompositionBatch batch, string contractName, T exportedValue)
  void ComposeExportedValue(CompositionContainer container, string contractName, T exportedValue)
  ComposablePart AddPart(CompositionBatch batch, object attributedPart)
  void ComposeParts(CompositionContainer container, Object[] attributedParts)
  ComposablePart SatisfyImportsOnce(ICompositionService compositionService, object attributedPart)
  ComposablePart SatisfyImportsOnce(ICompositionService compositionService, object attributedPart, ReflectionContext reflectionContext)
  bool Exports(ComposablePartDefinition part, Type contractType)
  bool Exports(ComposablePartDefinition part)
  bool Imports(ComposablePartDefinition part, Type contractType)
  bool Imports(ComposablePartDefinition part)
  bool Imports(ComposablePartDefinition part, Type contractType, ImportCardinality importCardinality)
  bool Imports(ComposablePartDefinition part, ImportCardinality importCardinality)
--------------------------------------------------
Класс: System.ComponentModel.Composition.CatalogReflectionContextAttribute
Наследуется от: Attribute
Поля:
  Type _reflectionContextType
Свойства:
Методы:
  void .ctor(Type reflectionContextType)
  ReflectionContext CreateReflectionContext()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ChangeRejectedException
Наследуется от: CompositionException
Поля:
Свойства:
  string Message
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(IEnumerable`1<CompositionError> errors)
  string get_Message()
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionContractMismatchException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionError
Наследуется от: object
Поля:
  CompositionErrorId _id
  string _description
  Exception _exception
  ICompositionElement _element
Свойства:
  ICompositionElement Element
  string Description
  Exception Exception
  CompositionErrorId Id
  Exception InnerException
Методы:
  void .ctor(string message)
  void .ctor(string message, ICompositionElement element)
  void .ctor(string message, Exception exception)
  void .ctor(string message, ICompositionElement element, Exception exception)
  void .ctor(CompositionErrorId id, string description, ICompositionElement element, Exception exception)
  ICompositionElement get_Element()
  string get_Description()
  Exception get_Exception()
  CompositionErrorId get_Id()
  Exception get_InnerException()
  string ToString()
  CompositionError Create(CompositionErrorId id, string format, Object[] parameters)
  CompositionError Create(CompositionErrorId id, ICompositionElement element, string format, Object[] parameters)
  CompositionError Create(CompositionErrorId id, ICompositionElement element, Exception exception, string format, Object[] parameters)
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionErrorDebuggerProxy
Наследуется от: object
Поля:
  CompositionError _error
Свойства:
  string Description
  Exception Exception
  ICompositionElement Element
Методы:
  void .ctor(CompositionError error)
  string get_Description()
  Exception get_Exception()
  ICompositionElement get_Element()
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionErrorId
Наследуется от: Enum
Поля:
  int value__
  CompositionErrorId Unknown
  CompositionErrorId InvalidExportMetadata
  CompositionErrorId ImportNotSetOnPart
  CompositionErrorId ImportEngine_ComposeTookTooManyIterations
  CompositionErrorId ImportEngine_ImportCardinalityMismatch
  CompositionErrorId ImportEngine_PartCycle
  CompositionErrorId ImportEngine_PartCannotSetImport
  CompositionErrorId ImportEngine_PartCannotGetExportedValue
  CompositionErrorId ImportEngine_PartCannotActivate
  CompositionErrorId ImportEngine_PreventedByExistingImport
  CompositionErrorId ImportEngine_InvalidStateForRecomposition
  CompositionErrorId ReflectionModel_ImportThrewException
  CompositionErrorId ReflectionModel_ImportNotAssignableFromExport
  CompositionErrorId ReflectionModel_ImportCollectionNull
  CompositionErrorId ReflectionModel_ImportCollectionNotWritable
  CompositionErrorId ReflectionModel_ImportCollectionConstructionThrewException
  CompositionErrorId ReflectionModel_ImportCollectionGetThrewException
  CompositionErrorId ReflectionModel_ImportCollectionIsReadOnlyThrewException
  CompositionErrorId ReflectionModel_ImportCollectionClearThrewException
  CompositionErrorId ReflectionModel_ImportCollectionAddThrewException
  CompositionErrorId ReflectionModel_ImportManyOnParameterCanOnlyBeAssigned
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionException
Наследуется от: Exception
Поля:
  string ErrorsKey
  ReadOnlyCollection`1<CompositionError> _errors
Свойства:
  ReadOnlyCollection`1<CompositionError> Errors
  string Message
  ReadOnlyCollection`1<Exception> RootCauses
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(CompositionError error)
  void .ctor(IEnumerable`1<CompositionError> errors)
  void .ctor(string message, Exception innerException, IEnumerable`1<CompositionError> errors)
  ReadOnlyCollection`1<CompositionError> get_Errors()
  string get_Message()
  string BuildDefaultMessage()
  void WriteHeader(StringBuilder writer, int errorsCount, int pathCount)
  void WritePaths(StringBuilder writer, IEnumerable`1<IEnumerable`1<CompositionError>> paths)
  void WritePath(StringBuilder writer, IEnumerable`1<CompositionError> path, int ordinal)
  void WriteError(StringBuilder writer, CompositionError error)
  void WriteElementGraph(StringBuilder writer, ICompositionElement element)
  IEnumerable`1<IEnumerable`1<CompositionError>> CalculatePaths(CompositionException exception)
  void VisitCompositionException(CompositionException exception, VisitContext context)
  void VisitError(CompositionError error, VisitContext context)
  void VisitException(Exception exception, VisitContext context)
  void <.ctor>b__8_0(object exception, SafeSerializationEventArgs eventArgs)
  ReadOnlyCollection`1<Exception> get_RootCauses()
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionExceptionDebuggerProxy
Наследуется от: object
Поля:
  CompositionException _exception
Свойства:
  ReadOnlyCollection`1<Exception> Exceptions
  string Message
  ReadOnlyCollection`1<Exception> RootCauses
Методы:
  void .ctor(CompositionException exception)
  ReadOnlyCollection`1<Exception> get_Exceptions()
  string get_Message()
  ReadOnlyCollection`1<Exception> get_RootCauses()
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionResult
Наследуется от: ValueType
Поля:
  CompositionResult SucceededResult
  IEnumerable`1<CompositionError> _errors
Свойства:
  bool Succeeded
  IEnumerable`1<CompositionError> Errors
Методы:
  void .ctor(CompositionError[] errors)
  void .ctor(IEnumerable`1<CompositionError> errors)
  bool get_Succeeded()
  IEnumerable`1<CompositionError> get_Errors()
  CompositionResult MergeResult(CompositionResult result)
  CompositionResult MergeError(CompositionError error)
  CompositionResult MergeErrors(IEnumerable`1<CompositionError> errors)
  CompositionResult`1<T> ToResult(T value)
  void ThrowOnErrors()
  void ThrowOnErrors(AtomicComposition atomicComposition)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.CompositionResult`1
Наследуется от: ValueType
Поля:
  IEnumerable`1<CompositionError> _errors
  T _value
Свойства:
  bool Succeeded
  IEnumerable`1<CompositionError> Errors
  T Value
Методы:
  void .ctor(T value)
  void .ctor(CompositionError[] errors)
  void .ctor(IEnumerable`1<CompositionError> errors)
  void .ctor(T value, IEnumerable`1<CompositionError> errors)
  bool get_Succeeded()
  IEnumerable`1<CompositionError> get_Errors()
  T get_Value()
  CompositionResult`1<TValue> ToResult()
  CompositionResult ToResult()
  void ThrowOnErrors()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ConstraintServices
Наследуется от: object
Поля:
  PropertyInfo _exportDefinitionContractNameProperty
  PropertyInfo _exportDefinitionMetadataProperty
  MethodInfo _metadataContainsKeyMethod
  MethodInfo _metadataItemMethod
  MethodInfo _metadataEqualsMethod
  MethodInfo _typeIsInstanceOfTypeMethod
Свойства:
Методы:
  Expression`1<Func`2<ExportDefinition, bool>> CreateConstraint(string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, CreationPolicy requiredCreationPolicy)
  Expression CreateContractConstraintBody(string contractName, ParameterExpression parameter)
  Expression CreateMetadataConstraintBody(IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ParameterExpression parameter)
  Expression CreateCreationPolicyContraint(CreationPolicy policy, ParameterExpression parameter)
  Expression CreateTypeIdentityContraint(string requiredTypeIdentity, ParameterExpression parameter)
  Expression CreateMetadataContainsKeyExpression(ParameterExpression parameter, string constantKey)
  Expression CreateMetadataOfTypeExpression(ParameterExpression parameter, string constantKey, Type constantType)
  Expression CreateMetadataValueEqualsExpression(ParameterExpression parameter, object constantValue, string metadataName)
  Expression`1<Func`2<ExportDefinition, bool>> CreatePartCreatorConstraint(Expression`1<Func`2<ExportDefinition, bool>> baseConstraint, ImportDefinition productImportDefinition)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ContractNameServices
Наследуется от: object
Поля:
  char NamespaceSeparator
  char ArrayOpeningBracket
  char ArrayClosingBracket
  char ArraySeparator
  char PointerSymbol
  char ReferenceSymbol
  char GenericArityBackQuote
  char NestedClassSeparator
  char ContractNameGenericOpeningBracket
  char ContractNameGenericClosingBracket
  char ContractNameGenericArgumentSeparator
  char CustomModifiersSeparator
  char GenericFormatOpeningBracket
  char GenericFormatClosingBracket
  Dictionary`2<Type, string> typeIdentityCache
Свойства:
  Dictionary`2<Type, string> TypeIdentityCache
Методы:
  Dictionary`2<Type, string> get_TypeIdentityCache()
  string GetTypeIdentity(Type type)
  string GetTypeIdentity(Type type, bool formatGenericName)
  string GetTypeIdentityFromMethod(MethodInfo method)
  string GetTypeIdentityFromMethod(MethodInfo method, bool formatGenericName)
  void WriteTypeWithNamespace(StringBuilder typeName, Type type, bool formatGenericName)
  void WriteType(StringBuilder typeName, Type type, bool formatGenericName)
  void WriteNonGenericType(StringBuilder typeName, Type type, bool formatGenericName)
  void WriteArrayType(StringBuilder typeName, Type type, bool formatGenericName)
  void WritePointerType(StringBuilder typeName, Type type, bool formatGenericName)
  void WriteByRefType(StringBuilder typeName, Type type, bool formatGenericName)
  void WriteArrayTypeDimensions(StringBuilder typeName, Type type)
  void WriteGenericType(StringBuilder typeName, Type type, bool isDefinition, Queue`1<Type> genericTypeArguments, bool formatGenericName)
  void WriteGenericTypeName(StringBuilder typeName, Type type, bool isDefinition, Queue`1<Type> genericTypeArguments, bool formatGenericName)
  void WriteTypeArgumentsString(StringBuilder typeName, int argumentsCount, bool isDefinition, Queue`1<Type> genericTypeArguments, bool formatGenericName)
  void WriteTypeArgument(StringBuilder typeName, bool isDefinition, Type genericTypeArgument, bool formatGenericName)
  void WriteCustomModifiers(StringBuilder typeName, string customKeyword, Type[] types, bool formatGenericName)
  Type FindArrayElementType(Type type)
  string FindGenericTypeName(string genericName)
  int GetGenericArity(Type type)
--------------------------------------------------
Класс: System.ComponentModel.Composition.CreationPolicy
Наследуется от: Enum
Поля:
  int value__
  CreationPolicy Any
  CreationPolicy Shared
  CreationPolicy NonShared
  CreationPolicy NewScope
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.ErrorBuilder
Наследуется от: object
Поля:
Свойства:
Методы:
  CompositionError PreventedByExistingImport(ComposablePart part, ImportDefinition import)
  CompositionError InvalidStateForRecompposition(ComposablePart part)
  CompositionError ComposeTookTooManyIterations(int maximumNumberOfCompositionIterations)
  CompositionError CreateImportCardinalityMismatch(ImportCardinalityMismatchException exception, ImportDefinition definition)
  CompositionError CreatePartCannotActivate(ComposablePart part, Exception innerException)
  CompositionError CreatePartCannotSetImport(ComposablePart part, ImportDefinition definition, Exception innerException)
  CompositionError CreateCannotGetExportedValue(ComposablePart part, ExportDefinition definition, Exception innerException)
  CompositionError CreatePartCycle(ComposablePart part)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExceptionBuilder
Наследуется от: object
Поля:
Свойства:
Методы:
  Exception CreateDiscoveryException(string messageFormat, String[] arguments)
  ArgumentException CreateContainsNullElement(string parameterName)
  ObjectDisposedException CreateObjectDisposed(object instance)
  NotImplementedException CreateNotOverriddenByDerived(string memberName)
  ArgumentException CreateExportDefinitionNotOnThisComposablePart(string parameterName)
  ArgumentException CreateImportDefinitionNotOnThisComposablePart(string parameterName)
  CompositionException CreateCannotGetExportedValue(ComposablePart part, ExportDefinition definition, Exception innerException)
  ArgumentException CreateReflectionModelInvalidPartDefinition(string parameterName, Type partDefinitionType)
  ArgumentException ExportFactory_TooManyGenericParameters(string typeName)
  string Format(string format, String[] arguments)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExportAttribute
Наследуется от: Attribute
Поля:
  string <ContractName>k__BackingField
  Type <ContractType>k__BackingField
Свойства:
  string ContractName
  Type ContractType
Методы:
  void .ctor()
  void .ctor(Type contractType)
  void .ctor(string contractName)
  void .ctor(string contractName, Type contractType)
  string get_ContractName()
  void set_ContractName(string value)
  Type get_ContractType()
  void set_ContractType(Type value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExportCardinalityCheckResult
Наследуется от: Enum
Поля:
  int value__
  ExportCardinalityCheckResult Match
  ExportCardinalityCheckResult NoExports
  ExportCardinalityCheckResult TooManyExports
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExportFactory`1
Наследуется от: object
Поля:
  Func`1<Tuple`2<T, Action>> _exportLifetimeContextCreator
Свойства:
Методы:
  void .ctor(Func`1<Tuple`2<T, Action>> exportLifetimeContextCreator)
  ExportLifetimeContext`1<T> CreateExport()
  bool IncludeInScopedCatalog(ComposablePartDefinition composablePartDefinition)
  bool OnFilterScopedCatalog(ComposablePartDefinition composablePartDefinition)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExportFactory`2
Наследуется от: ExportFactory`1<T>
Поля:
  TMetadata _metadata
Свойства:
  TMetadata Metadata
Методы:
  void .ctor(Func`1<Tuple`2<T, Action>> exportLifetimeContextCreator, TMetadata metadata)
  TMetadata get_Metadata()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExportLifetimeContext`1
Наследуется от: object
Поля:
  T _value
  Action _disposeAction
Свойства:
  T Value
Методы:
  void .ctor(T value, Action disposeAction)
  T get_Value()
  void Dispose()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExportMetadataAttribute
Наследуется от: Attribute
Поля:
  string <Name>k__BackingField
  object <Value>k__BackingField
  bool <IsMultiple>k__BackingField
Свойства:
  string Name
  object Value
  bool IsMultiple
Методы:
  void .ctor(string name, object value)
  string get_Name()
  void set_Name(string value)
  object get_Value()
  void set_Value(object value)
  bool get_IsMultiple()
  void set_IsMultiple(bool value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ExportServices
Наследуется от: object
Поля:
  MethodInfo _createStronglyTypedLazyOfTM
  MethodInfo _createStronglyTypedLazyOfT
  MethodInfo _createSemiStronglyTypedLazy
  Type DefaultMetadataViewType
  Type DefaultExportedValueType
Свойства:
Методы:
  bool IsDefaultMetadataViewType(Type metadataViewType)
  bool IsDictionaryConstructorViewType(Type metadataViewType)
  Func`2<Export, object> CreateStronglyTypedLazyFactory(Type exportType, Type metadataViewType)
  Func`2<Export, Lazy`2<object, object>> CreateSemiStronglyTypedLazyFactory(Type exportType, Type metadataViewType)
  Lazy`2<T, M> CreateStronglyTypedLazyOfTM(Export export)
  Lazy`1<T> CreateStronglyTypedLazyOfT(Export export)
  Lazy`2<object, object> CreateSemiStronglyTypedLazy(Export export)
  T GetCastedExportedValue(Export export)
  T CastExportedValue(ICompositionElement element, object exportedValue)
  ExportCardinalityCheckResult CheckCardinality(ImportDefinition definition, IEnumerable`1<T> enumerable)
  ExportCardinalityCheckResult MatchCardinality(EnumerableCardinality actualCardinality, ImportCardinality importCardinality)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.IAttributedImport
Поля:
Свойства:
  string ContractName
  Type ContractType
  bool AllowRecomposition
  CreationPolicy RequiredCreationPolicy
  ImportCardinality Cardinality
  ImportSource Source
Методы:
  string get_ContractName()
  Type get_ContractType()
  bool get_AllowRecomposition()
  CreationPolicy get_RequiredCreationPolicy()
  ImportCardinality get_Cardinality()
  ImportSource get_Source()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ICompositionService
Поля:
Свойства:
Методы:
  void SatisfyImportsOnce(ComposablePart part)
--------------------------------------------------
Класс: System.ComponentModel.Composition.IPartImportsSatisfiedNotification
Поля:
Свойства:
Методы:
  void OnImportsSatisfied()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ImportAttribute
Наследуется от: Attribute
Поля:
  string <ContractName>k__BackingField
  Type <ContractType>k__BackingField
  bool <AllowDefault>k__BackingField
  bool <AllowRecomposition>k__BackingField
  CreationPolicy <RequiredCreationPolicy>k__BackingField
  ImportSource <Source>k__BackingField
Свойства:
  string ContractName
  Type ContractType
  bool AllowDefault
  bool AllowRecomposition
  CreationPolicy RequiredCreationPolicy
  ImportSource Source
  ImportCardinality System.ComponentModel.Composition.IAttributedImport.Cardinality
Методы:
  void .ctor()
  void .ctor(Type contractType)
  void .ctor(string contractName)
  void .ctor(string contractName, Type contractType)
  string get_ContractName()
  void set_ContractName(string value)
  Type get_ContractType()
  void set_ContractType(Type value)
  bool get_AllowDefault()
  void set_AllowDefault(bool value)
  bool get_AllowRecomposition()
  void set_AllowRecomposition(bool value)
  CreationPolicy get_RequiredCreationPolicy()
  void set_RequiredCreationPolicy(CreationPolicy value)
  ImportSource get_Source()
  void set_Source(ImportSource value)
  ImportCardinality System.ComponentModel.Composition.IAttributedImport.get_Cardinality()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ImportCardinalityMismatchException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ImportCardinalityMismatchExceptionDebuggerProxy
Наследуется от: object
Поля:
  ImportCardinalityMismatchException _exception
Свойства:
  Exception InnerException
  string Message
Методы:
  void .ctor(ImportCardinalityMismatchException exception)
  Exception get_InnerException()
  string get_Message()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ImportManyAttribute
Наследуется от: Attribute
Поля:
  string <ContractName>k__BackingField
  Type <ContractType>k__BackingField
  bool <AllowRecomposition>k__BackingField
  CreationPolicy <RequiredCreationPolicy>k__BackingField
  ImportSource <Source>k__BackingField
Свойства:
  string ContractName
  Type ContractType
  bool AllowRecomposition
  CreationPolicy RequiredCreationPolicy
  ImportSource Source
  ImportCardinality System.ComponentModel.Composition.IAttributedImport.Cardinality
Методы:
  void .ctor()
  void .ctor(Type contractType)
  void .ctor(string contractName)
  void .ctor(string contractName, Type contractType)
  string get_ContractName()
  void set_ContractName(string value)
  Type get_ContractType()
  void set_ContractType(Type value)
  bool get_AllowRecomposition()
  void set_AllowRecomposition(bool value)
  CreationPolicy get_RequiredCreationPolicy()
  void set_RequiredCreationPolicy(CreationPolicy value)
  ImportSource get_Source()
  void set_Source(ImportSource value)
  ImportCardinality System.ComponentModel.Composition.IAttributedImport.get_Cardinality()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ImportSource
Наследуется от: Enum
Поля:
  int value__
  ImportSource Any
  ImportSource Local
  ImportSource NonLocal
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.ImportingConstructorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.InheritedExportAttribute
Наследуется от: ExportAttribute
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(Type contractType)
  void .ctor(string contractName)
  void .ctor(string contractName, Type contractType)
--------------------------------------------------
Класс: System.ComponentModel.Composition.MetadataAttributeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.MetadataServices
Наследуется от: object
Поля:
  IDictionary`2<string, object> EmptyMetadata
Свойства:
Методы:
  IDictionary`2<string, object> AsReadOnly(IDictionary`2<string, object> metadata)
  T GetValue(IDictionary`2<string, object> metadata, string key)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.MetadataViewGenerator
Наследуется от: object
Поля:
  string MetadataViewType
  string MetadataItemKey
  string MetadataItemTargetType
  string MetadataItemSourceType
  string MetadataItemValue
  Lock _lock
  Dictionary`2<Type, Type> _proxies
  AssemblyName ProxyAssemblyName
  ModuleBuilder transparentProxyModuleBuilder
  Type[] CtorArgumentTypes
  MethodInfo _mdvDictionaryTryGet
  MethodInfo ObjectGetType
Свойства:
Методы:
  AssemblyBuilder CreateProxyAssemblyBuilder(ConstructorInfo constructorInfo)
  ModuleBuilder GetProxyModuleBuilder(bool requiresCritical)
  Type GenerateView(Type viewType)
  void GenerateLocalAssignmentFromDefaultAttribute(ILGenerator IL, DefaultValueAttribute[] attrs, LocalBuilder local)
  void GenerateFieldAssignmentFromLocalValue(ILGenerator IL, LocalBuilder local, FieldBuilder field)
  void GenerateLocalAssignmentFromFlag(ILGenerator IL, LocalBuilder local, bool flag)
  Type GenerateInterfaceViewProxyType(Type viewType)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.MetadataViewImplementationAttribute
Наследуется от: Attribute
Поля:
  Type <ImplementationType>k__BackingField
Свойства:
  Type ImplementationType
Методы:
  void .ctor(Type implementationType)
  Type get_ImplementationType()
  void set_ImplementationType(Type value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.MetadataViewProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  TMetadataView GetMetadataView(IDictionary`2<string, object> metadata)
  bool IsViewTypeValid(Type metadataViewType)
--------------------------------------------------
Класс: System.ComponentModel.Composition.PartCreationPolicyAttribute
Наследуется от: Attribute
Поля:
  PartCreationPolicyAttribute Default
  PartCreationPolicyAttribute Shared
  CreationPolicy <CreationPolicy>k__BackingField
Свойства:
  CreationPolicy CreationPolicy
Методы:
  void .ctor(CreationPolicy creationPolicy)
  CreationPolicy get_CreationPolicy()
  void set_CreationPolicy(CreationPolicy value)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.PartMetadataAttribute
Наследуется от: Attribute
Поля:
  string <Name>k__BackingField
  object <Value>k__BackingField
Свойства:
  string Name
  object Value
Методы:
  void .ctor(string name, object value)
  string get_Name()
  void set_Name(string value)
  object get_Value()
  void set_Value(object value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.PartNotDiscoverableAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.DisposableReflectionComposablePart
Наследуется от: ReflectionComposablePart
Поля:
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
Свойства:
Методы:
  void .ctor(ReflectionComposablePartDefinition definition)
  void ReleaseInstanceIfNecessary(object instance)
  void EnsureRunning()
  void System.IDisposable.Dispose()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ExportFactoryCreator
Наследуется от: object
Поля:
  MethodInfo _createStronglyTypedExportFactoryOfT
  MethodInfo _createStronglyTypedExportFactoryOfTM
  Type _exportFactoryType
Свойства:
Методы:
  void .ctor(Type exportFactoryType)
  Func`2<Export, object> CreateStronglyTypedExportFactoryFactory(Type exportType, Type metadataViewType)
  object CreateStronglyTypedExportFactoryOfT(Export export)
  object CreateStronglyTypedExportFactoryOfTM(Export export)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ExportingMember
Наследуется от: object
Поля:
  ExportDefinition _definition
  ReflectionMember _member
  object _cachedValue
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isValueCached
Свойства:
  bool RequiresInstance
  ExportDefinition Definition
Методы:
  void .ctor(ExportDefinition definition, ReflectionMember member)
  bool get_RequiresInstance()
  ExportDefinition get_Definition()
  object GetExportedValue(object instance, object lock)
  void EnsureReadable()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.GenericServices
Наследуется от: object
Поля:
Свойства:
Методы:
  IList`1<Type> GetPureGenericParameters(Type type)
  int GetPureGenericArity(Type type)
  void TraverseGenericType(Type type, Action`1<Type> onType)
  Int32[] GetGenericParametersOrder(Type type)
  string GetGenericName(string originalGenericName, Int32[] genericParametersOrder, int genericArity)
  T[] Reorder(T[] original, Int32[] genericParametersOrder)
  IEnumerable`1<Type> CreateTypeSpecializations(Type[] types, Type[] specializationTypes)
  Type CreateTypeSpecialization(Type type, Type[] specializationTypes)
  bool CanSpecialize(Type type, IEnumerable`1<Type> constraints, GenericParameterAttributes attributes)
  bool CanSpecialize(Type type, IEnumerable`1<Type> constraintTypes)
  bool CanSpecialize(Type type, GenericParameterAttributes attributes)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.GenericSpecializationPartCreationInfo
Наследуется от: object
Поля:
  IReflectionPartCreationInfo _originalPartCreationInfo
  ReflectionComposablePartDefinition _originalPart
  Type[] _specialization
  String[] _specializationIdentities
  IEnumerable`1<ExportDefinition> _exports
  IEnumerable`1<ImportDefinition> _imports
  Lazy`1<Type> _lazyPartType
  List`1<LazyMemberInfo> _members
  List`1<Lazy`1<ParameterInfo>> _parameters
  Dictionary`2<LazyMemberInfo, MemberInfo[]> _membersTable
  Dictionary`2<Lazy`1<ParameterInfo>, ParameterInfo> _parametersTable
  ConstructorInfo _constructor
  object _lock
Свойства:
  ReflectionComposablePartDefinition OriginalPart
  bool IsDisposalRequired
  string DisplayName
  ICompositionElement Origin
Методы:
  void .ctor(IReflectionPartCreationInfo originalPartCreationInfo, ReflectionComposablePartDefinition originalPart, Type[] specialization)
  ReflectionComposablePartDefinition get_OriginalPart()
  Type GetPartType()
  Lazy`1<Type> GetLazyPartType()
  ConstructorInfo GetConstructor()
  IDictionary`2<string, object> GetMetadata()
  MemberInfo[] GetAccessors(LazyMemberInfo originalLazyMember)
  ParameterInfo GetParameter(Lazy`1<ParameterInfo> originalParameter)
  void BuildTables()
  Dictionary`2<LazyMemberInfo, MemberInfo[]> BuildMembersTable(List`1<LazyMemberInfo> members)
  Dictionary`2<Lazy`1<ParameterInfo>, ParameterInfo> BuildParametersTable(List`1<Lazy`1<ParameterInfo>> parameters)
  List`1<ImportDefinition> PopulateImports(List`1<LazyMemberInfo> members, List`1<Lazy`1<ParameterInfo>> parameters)
  ImportDefinition TranslateImport(ReflectionImportDefinition reflectionImport, List`1<LazyMemberInfo> members, List`1<Lazy`1<ParameterInfo>> parameters)
  List`1<ExportDefinition> PopulateExports(List`1<LazyMemberInfo> members)
  ExportDefinition TranslateExpot(ReflectionMemberExportDefinition reflectionExport, List`1<LazyMemberInfo> members)
  string Translate(string originalValue, Int32[] genericParametersOrder)
  string Translate(string originalValue)
  IDictionary`2<string, object> TranslateImportMetadata(ContractBasedImportDefinition originalImport)
  IDictionary`2<string, object> TranslateExportMetadata(ReflectionMemberExportDefinition originalExport)
  void PopulateImportsAndExports()
  IEnumerable`1<ExportDefinition> GetExports()
  IEnumerable`1<ImportDefinition> GetImports()
  bool get_IsDisposalRequired()
  string get_DisplayName()
  ICompositionElement get_Origin()
  bool Equals(object obj)
  int GetHashCode()
  bool CanSpecialize(IDictionary`2<string, object> partMetadata, Type[] specialization)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.IReflectionPartCreationInfo
Поля:
Свойства:
  bool IsDisposalRequired
Методы:
  Type GetPartType()
  Lazy`1<Type> GetLazyPartType()
  ConstructorInfo GetConstructor()
  IDictionary`2<string, object> GetMetadata()
  IEnumerable`1<ExportDefinition> GetExports()
  IEnumerable`1<ImportDefinition> GetImports()
  bool get_IsDisposalRequired()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ImportType
Наследуется от: object
Поля:
  Type LazyOfTType
  Type LazyOfTMType
  Type ExportFactoryOfTType
  Type ExportFactoryOfTMType
  Type _type
  bool _isAssignableCollectionType
  Type _contractType
  Func`2<Export, object> _castSingleValue
  bool _isOpenGeneric
  Type <ElementType>k__BackingField
  bool <IsPartCreator>k__BackingField
  Type <MetadataViewType>k__BackingField
Свойства:
  bool IsAssignableCollectionType
  Type ElementType
  Type ActualType
  bool IsPartCreator
  Type ContractType
  Func`2<Export, object> CastExport
  Type MetadataViewType
Методы:
  void .ctor(Type type, ImportCardinality cardinality)
  bool get_IsAssignableCollectionType()
  Type get_ElementType()
  void set_ElementType(Type value)
  Type get_ActualType()
  bool get_IsPartCreator()
  void set_IsPartCreator(bool value)
  Type get_ContractType()
  Func`2<Export, object> get_CastExport()
  Type get_MetadataViewType()
  void set_MetadataViewType(Type value)
  Type CheckForCollection(Type type)
  bool IsGenericDescendentOf(Type type, Type baseGenericTypeDefinition)
  bool IsDescendentOf(Type type, Type baseType)
  Type CheckForLazyAndPartCreator(Type type)
  bool IsTypeAssignableCollectionType(Type type)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ImportingItem
Наследуется от: object
Поля:
  ContractBasedImportDefinition _definition
  ImportType _importType
Свойства:
  ContractBasedImportDefinition Definition
  ImportType ImportType
Методы:
  void .ctor(ContractBasedImportDefinition definition, ImportType importType)
  ContractBasedImportDefinition get_Definition()
  ImportType get_ImportType()
  object CastExportsToImportType(Export[] exports)
  object CastExportsToCollectionImportType(Export[] exports)
  object CastExportsToSingleImportType(Export[] exports)
  object CastSingleExportToImportType(Type type, Export export)
  object Cast(Type type, Export export)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ImportingMember
Наследуется от: ImportingItem
Поля:
  ReflectionWritableMember _member
Свойства:
Методы:
  void .ctor(ContractBasedImportDefinition definition, ReflectionWritableMember member, ImportType importType)
  void SetExportedValue(object instance, object value)
  bool RequiresCollectionNormalization()
  void SetSingleMemberValue(object instance, object value)
  void EnsureWritable()
  void SetCollectionMemberValue(object instance, IEnumerable values)
  ICollection`1<object> GetNormalizedCollection(Type itemType, object instance)
  void EnsureCollectionIsWritable(ICollection`1<object> collection)
  void PopulateCollection(ICollection`1<object> collection, IEnumerable values)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ImportingParameter
Наследуется от: ImportingItem
Поля:
Свойства:
Методы:
  void .ctor(ContractBasedImportDefinition definition, ImportType importType)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo
Наследуется от: ValueType
Поля:
  MemberTypes _memberType
  MemberInfo[] _accessors
  Func`1<MemberInfo[]> _accessorsCreator
Свойства:
  MemberTypes MemberType
Методы:
  void .ctor(MemberInfo member)
  void .ctor(MemberTypes memberType, MemberInfo[] accessors)
  void .ctor(MemberTypes memberType, Func`1<MemberInfo[]> accessorsCreator)
  MemberTypes get_MemberType()
  MemberInfo[] GetAccessors()
  int GetHashCode()
  bool Equals(object obj)
  bool op_Equality(LazyMemberInfo left, LazyMemberInfo right)
  bool op_Inequality(LazyMemberInfo left, LazyMemberInfo right)
  void EnsureSupportedMemberType(MemberTypes memberType, string argument)
  bool AreAccessorsValid(MemberTypes memberType, MemberInfo[] accessors, String& errorMessage)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.PartCreatorExportDefinition
Наследуется от: ExportDefinition
Поля:
  ExportDefinition _productDefinition
  IDictionary`2<string, object> _metadata
Свойства:
  string ContractName
  IDictionary`2<string, object> Metadata
Методы:
  void .ctor(ExportDefinition productDefinition)
  string get_ContractName()
  IDictionary`2<string, object> get_Metadata()
  bool IsProductConstraintSatisfiedBy(ImportDefinition productImportDefinition, ExportDefinition exportDefinition)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.PartCreatorMemberImportDefinition
Наследуется от: ReflectionMemberImportDefinition
Поля:
  ContractBasedImportDefinition _productImportDefinition
Свойства:
  ContractBasedImportDefinition ProductImportDefinition
  Expression`1<Func`2<ExportDefinition, bool>> Constraint
Методы:
  void .ctor(LazyMemberInfo importingLazyMember, ICompositionElement origin, ContractBasedImportDefinition productImportDefinition)
  ContractBasedImportDefinition get_ProductImportDefinition()
  bool IsConstraintSatisfiedBy(ExportDefinition exportDefinition)
  Expression`1<Func`2<ExportDefinition, bool>> get_Constraint()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.PartCreatorParameterImportDefinition
Наследуется от: ReflectionParameterImportDefinition
Поля:
  ContractBasedImportDefinition _productImportDefinition
Свойства:
  ContractBasedImportDefinition ProductImportDefinition
  Expression`1<Func`2<ExportDefinition, bool>> Constraint
Методы:
  void .ctor(Lazy`1<ParameterInfo> importingLazyParameter, ICompositionElement origin, ContractBasedImportDefinition productImportDefinition)
  ContractBasedImportDefinition get_ProductImportDefinition()
  bool IsConstraintSatisfiedBy(ExportDefinition exportDefinition)
  Expression`1<Func`2<ExportDefinition, bool>> get_Constraint()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePart
Наследуется от: ComposablePart
Поля:
  ReflectionComposablePartDefinition _definition
  Dictionary`2<ImportDefinition, object> _importValues
  Dictionary`2<ImportDefinition, ImportingItem> _importsCache
  Dictionary`2<int, ExportingMember> _exportsCache
  bool _invokeImportsSatisfied
  bool _invokingImportsSatisfied
  bool _initialCompositionComplete
  Object modreq(System.Runtime.CompilerServices.IsVolatile) _cachedInstance
  object _lock
Свойства:
  object CachedInstance
  ReflectionComposablePartDefinition Definition
  IDictionary`2<string, object> Metadata
  IEnumerable`1<ImportDefinition> ImportDefinitions
  IEnumerable`1<ExportDefinition> ExportDefinitions
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
Методы:
  void .ctor(ReflectionComposablePartDefinition definition)
  void .ctor(ReflectionComposablePartDefinition definition, object attributedPart)
  void EnsureRunning()
  void RequiresRunning()
  void ReleaseInstanceIfNecessary(object instance)
  object get_CachedInstance()
  ReflectionComposablePartDefinition get_Definition()
  IDictionary`2<string, object> get_Metadata()
  IEnumerable`1<ImportDefinition> get_ImportDefinitions()
  IEnumerable`1<ExportDefinition> get_ExportDefinitions()
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
  object GetExportedValue(ExportDefinition definition)
  void SetImport(ImportDefinition definition, IEnumerable`1<Export> exports)
  void Activate()
  string ToString()
  object GetExportedValue(ExportingMember member)
  void SetImport(ImportingItem item, Export[] exports)
  object GetInstanceActivatingIfNeeded()
  Object[] GetConstructorArguments()
  bool RequiresActivation()
  void EnsureGettable()
  void EnsureSettable(ImportDefinition definition)
  void EnsureCardinality(ImportDefinition definition, Export[] exports)
  object CreateInstance(ConstructorInfo constructor, Object[] arguments)
  void SetNonPrerequisiteImports()
  void SetPrerequisiteImports()
  void SetExportedValueForImport(ImportingItem import, ImportDefinition definition, object value)
  void UseImportedValues(IEnumerable`1<TImportDefinition> definitions, Action`3<ImportingItem, TImportDefinition, object> useImportValue, bool errorIfMissing)
  bool TryGetImportValue(ImportDefinition definition, Object& value)
  void NotifyImportSatisfied()
  ExportingMember GetExportingMemberFromDefinition(ExportDefinition definition)
  ImportingItem GetImportingItemFromDefinition(ImportDefinition definition)
  ImportingItem GetImportingItem(ImportDefinition definition)
  ExportingMember GetExportingMember(ExportDefinition definition)
  string GetDisplayName()
  bool <RequiresActivation>b__36_0(ExportDefinition definition)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionComposablePartDefinition
Наследуется от: ComposablePartDefinition
Поля:
  IReflectionPartCreationInfo _creationInfo
  IEnumerable`1 modreq(System.Runtime.CompilerServices.IsVolatile) _imports
  IEnumerable`1 modreq(System.Runtime.CompilerServices.IsVolatile) _exports
  IDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _metadata
  ConstructorInfo modreq(System.Runtime.CompilerServices.IsVolatile) _constructor
  object _lock
Свойства:
  IEnumerable`1<ExportDefinition> ExportDefinitions
  IEnumerable`1<ImportDefinition> ImportDefinitions
  IDictionary`2<string, object> Metadata
  bool IsDisposalRequired
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
Методы:
  void .ctor(IReflectionPartCreationInfo creationInfo)
  Type GetPartType()
  Lazy`1<Type> GetLazyPartType()
  ConstructorInfo GetConstructor()
  IEnumerable`1<ExportDefinition> get_ExportDefinitions()
  IEnumerable`1<ImportDefinition> get_ImportDefinitions()
  IDictionary`2<string, object> get_Metadata()
  bool get_IsDisposalRequired()
  ComposablePart CreatePart()
  ComposablePartDefinition GetGenericPartDefinition()
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  IEnumerable`1<Type[]> GetCandidateParameters(Type[] genericParameters)
  bool TryGetGenericTypeParameters(IEnumerable`1<object> genericParameters, Type[]& genericTypeParameters)
  bool TryMakeGenericPartDefinition(Type[] genericTypeParameters, ComposablePartDefinition& genericPartDefinition)
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
  string ToString()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ReflectionMember ToReflectionMember(LazyMemberInfo lazyMember)
  LazyMemberInfo ToLazyMember(MemberInfo member)
  ReflectionWritableMember ToReflectionWriteableMember(LazyMemberInfo lazyMember)
  ReflectionProperty ToReflectionProperty(PropertyInfo property)
  ReflectionProperty CreateReflectionProperty(MethodInfo getMethod, MethodInfo setMethod)
  ReflectionParameter ToReflectionParameter(ParameterInfo parameter)
  ReflectionMethod ToReflectionMethod(MethodInfo method)
  ReflectionField ToReflectionField(FieldInfo field)
  ReflectionType ToReflectionType(Type type)
  ReflectionWritableMember ToReflectionWritableMember(MemberInfo member)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionField
Наследуется от: ReflectionWritableMember
Поля:
  FieldInfo _field
Свойства:
  FieldInfo UndelyingField
  MemberInfo UnderlyingMember
  bool CanRead
  bool CanWrite
  bool RequiresInstance
  Type ReturnType
  ReflectionItemType ItemType
Методы:
  void .ctor(FieldInfo field)
  FieldInfo get_UndelyingField()
  MemberInfo get_UnderlyingMember()
  bool get_CanRead()
  bool get_CanWrite()
  bool get_RequiresInstance()
  Type get_ReturnType()
  ReflectionItemType get_ItemType()
  object GetValue(object instance)
  void SetValue(object instance, object value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionImportDefinition
Наследуется от: ContractBasedImportDefinition
Поля:
  ICompositionElement _origin
Свойства:
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
Методы:
  void .ctor(string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, CreationPolicy requiredCreationPolicy, IDictionary`2<string, object> metadata, ICompositionElement origin)
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
  ImportingItem ToImportingItem()
  string GetDisplayName()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionItem
Наследуется от: object
Поля:
Свойства:
  string Name
  Type ReturnType
  ReflectionItemType ItemType
Методы:
  string get_Name()
  string GetDisplayName()
  Type get_ReturnType()
  ReflectionItemType get_ItemType()
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionItemType
Наследуется от: Enum
Поля:
  int value__
  ReflectionItemType Parameter
  ReflectionItemType Field
  ReflectionItemType Property
  ReflectionItemType Method
  ReflectionItemType Type
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionMember
Наследуется от: ReflectionItem
Поля:
Свойства:
  bool CanRead
  Type DeclaringType
  string Name
  bool RequiresInstance
  MemberInfo UnderlyingMember
Методы:
  bool get_CanRead()
  Type get_DeclaringType()
  string get_Name()
  string GetDisplayName()
  bool get_RequiresInstance()
  MemberInfo get_UnderlyingMember()
  object GetValue(object instance)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionMemberExportDefinition
Наследуется от: ExportDefinition
Поля:
  LazyMemberInfo _member
  ExportDefinition _exportDefinition
  ICompositionElement _origin
  IDictionary`2<string, object> _metadata
Свойства:
  string ContractName
  LazyMemberInfo ExportingLazyMember
  IDictionary`2<string, object> Metadata
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
Методы:
  void .ctor(LazyMemberInfo member, ExportDefinition exportDefinition, ICompositionElement origin)
  string get_ContractName()
  LazyMemberInfo get_ExportingLazyMember()
  IDictionary`2<string, object> get_Metadata()
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
  string ToString()
  int GetIndex()
  ExportingMember ToExportingMember()
  ReflectionMember ToReflectionMember()
  string GetDisplayName()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionMemberImportDefinition
Наследуется от: ReflectionImportDefinition
Поля:
  LazyMemberInfo _importingLazyMember
Свойства:
  LazyMemberInfo ImportingLazyMember
Методы:
  void .ctor(LazyMemberInfo importingLazyMember, string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, CreationPolicy requiredCreationPolicy, IDictionary`2<string, object> metadata, ICompositionElement origin)
  ImportingItem ToImportingItem()
  LazyMemberInfo get_ImportingLazyMember()
  string GetDisplayName()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionMethod
Наследуется от: ReflectionMember
Поля:
  MethodInfo _method
Свойства:
  MethodInfo UnderlyingMethod
  MemberInfo UnderlyingMember
  bool CanRead
  bool RequiresInstance
  Type ReturnType
  ReflectionItemType ItemType
Методы:
  void .ctor(MethodInfo method)
  MethodInfo get_UnderlyingMethod()
  MemberInfo get_UnderlyingMember()
  bool get_CanRead()
  bool get_RequiresInstance()
  Type get_ReturnType()
  ReflectionItemType get_ItemType()
  object GetValue(object instance)
  ExportedDelegate SafeCreateExportedDelegate(object instance, MethodInfo method)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices
Наследуется от: object
Поля:
Свойства:
Методы:
  Lazy`1<Type> GetPartType(ComposablePartDefinition partDefinition)
  bool IsDisposalRequired(ComposablePartDefinition partDefinition)
  LazyMemberInfo GetExportingMember(ExportDefinition exportDefinition)
  LazyMemberInfo GetImportingMember(ImportDefinition importDefinition)
  Lazy`1<ParameterInfo> GetImportingParameter(ImportDefinition importDefinition)
  bool IsImportingParameter(ImportDefinition importDefinition)
  bool IsExportFactoryImportDefinition(ImportDefinition importDefinition)
  ContractBasedImportDefinition GetExportFactoryProductImportDefinition(ImportDefinition importDefinition)
  ComposablePartDefinition CreatePartDefinition(Lazy`1<Type> partType, bool isDisposalRequired, Lazy`1<IEnumerable`1<ImportDefinition>> imports, Lazy`1<IEnumerable`1<ExportDefinition>> exports, Lazy`1<IDictionary`2<string, object>> metadata, ICompositionElement origin)
  ExportDefinition CreateExportDefinition(LazyMemberInfo exportingMember, string contractName, Lazy`1<IDictionary`2<string, object>> metadata, ICompositionElement origin)
  ContractBasedImportDefinition CreateImportDefinition(LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, bool isRecomposable, CreationPolicy requiredCreationPolicy, ICompositionElement origin)
  ContractBasedImportDefinition CreateImportDefinition(LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, bool isRecomposable, CreationPolicy requiredCreationPolicy, IDictionary`2<string, object> metadata, bool isExportFactory, ICompositionElement origin)
  ContractBasedImportDefinition CreateImportDefinition(LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, CreationPolicy requiredCreationPolicy, IDictionary`2<string, object> metadata, bool isExportFactory, ICompositionElement origin)
  ContractBasedImportDefinition CreateImportDefinition(Lazy`1<ParameterInfo> parameter, string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, CreationPolicy requiredCreationPolicy, ICompositionElement origin)
  ContractBasedImportDefinition CreateImportDefinition(Lazy`1<ParameterInfo> parameter, string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, CreationPolicy requiredCreationPolicy, IDictionary`2<string, object> metadata, bool isExportFactory, ICompositionElement origin)
  bool TryMakeGenericPartDefinition(ComposablePartDefinition partDefinition, IEnumerable`1<Type> genericParameters, ComposablePartDefinition& specialization)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionPartCreationInfo
Наследуется от: object
Поля:
  Lazy`1<Type> _partType
  Lazy`1<IEnumerable`1<ImportDefinition>> _imports
  Lazy`1<IEnumerable`1<ExportDefinition>> _exports
  Lazy`1<IDictionary`2<string, object>> _metadata
  ICompositionElement _origin
  ConstructorInfo _constructor
  bool _isDisposalRequired
Свойства:
  bool IsDisposalRequired
  string DisplayName
  ICompositionElement Origin
Методы:
  void .ctor(Lazy`1<Type> partType, bool isDisposalRequired, Lazy`1<IEnumerable`1<ImportDefinition>> imports, Lazy`1<IEnumerable`1<ExportDefinition>> exports, Lazy`1<IDictionary`2<string, object>> metadata, ICompositionElement origin)
  Type GetPartType()
  Lazy`1<Type> GetLazyPartType()
  ConstructorInfo GetConstructor()
  bool get_IsDisposalRequired()
  IDictionary`2<string, object> GetMetadata()
  IEnumerable`1<ExportDefinition> GetExports()
  IEnumerable`1<ImportDefinition> GetImports()
  string get_DisplayName()
  ICompositionElement get_Origin()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.LazyExportDefinition
Наследуется от: ExportDefinition
Поля:
  Lazy`1<IDictionary`2<string, object>> _metadata
Свойства:
  IDictionary`2<string, object> Metadata
Методы:
  void .ctor(string contractName, Lazy`1<IDictionary`2<string, object>> metadata)
  IDictionary`2<string, object> get_Metadata()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionParameter
Наследуется от: ReflectionItem
Поля:
  ParameterInfo _parameter
Свойства:
  ParameterInfo UnderlyingParameter
  string Name
  Type ReturnType
  ReflectionItemType ItemType
Методы:
  void .ctor(ParameterInfo parameter)
  ParameterInfo get_UnderlyingParameter()
  string get_Name()
  string GetDisplayName()
  Type get_ReturnType()
  ReflectionItemType get_ItemType()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionParameterImportDefinition
Наследуется от: ReflectionImportDefinition
Поля:
  Lazy`1<ParameterInfo> _importingLazyParameter
Свойства:
  Lazy`1<ParameterInfo> ImportingLazyParameter
Методы:
  void .ctor(Lazy`1<ParameterInfo> importingLazyParameter, string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, CreationPolicy requiredCreationPolicy, IDictionary`2<string, object> metadata, ICompositionElement origin)
  ImportingItem ToImportingItem()
  Lazy`1<ParameterInfo> get_ImportingLazyParameter()
  string GetDisplayName()
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionProperty
Наследуется от: ReflectionWritableMember
Поля:
  MethodInfo _getMethod
  MethodInfo _setMethod
Свойства:
  MemberInfo UnderlyingMember
  bool CanRead
  bool CanWrite
  MethodInfo UnderlyingGetMethod
  MethodInfo UnderlyingSetMethod
  string Name
  bool RequiresInstance
  Type ReturnType
  ReflectionItemType ItemType
Методы:
  void .ctor(MethodInfo getMethod, MethodInfo setMethod)
  MemberInfo get_UnderlyingMember()
  bool get_CanRead()
  bool get_CanWrite()
  MethodInfo get_UnderlyingGetMethod()
  MethodInfo get_UnderlyingSetMethod()
  string get_Name()
  string GetDisplayName()
  bool get_RequiresInstance()
  Type get_ReturnType()
  ReflectionItemType get_ItemType()
  object GetValue(object instance)
  void SetValue(object instance, object value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionType
Наследуется от: ReflectionMember
Поля:
  Type _type
Свойства:
  MemberInfo UnderlyingMember
  bool CanRead
  bool RequiresInstance
  Type ReturnType
  ReflectionItemType ItemType
Методы:
  void .ctor(Type type)
  MemberInfo get_UnderlyingMember()
  bool get_CanRead()
  bool get_RequiresInstance()
  Type get_ReturnType()
  ReflectionItemType get_ItemType()
  object GetValue(object instance)
--------------------------------------------------
Класс: System.ComponentModel.Composition.ReflectionModel.ReflectionWritableMember
Наследуется от: ReflectionMember
Поля:
Свойства:
  bool CanWrite
Методы:
  bool get_CanWrite()
  void SetValue(object instance, object value)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ComposablePart
Наследуется от: object
Поля:
Свойства:
  IEnumerable`1<ExportDefinition> ExportDefinitions
  IEnumerable`1<ImportDefinition> ImportDefinitions
  IDictionary`2<string, object> Metadata
Методы:
  void .ctor()
  IEnumerable`1<ExportDefinition> get_ExportDefinitions()
  IEnumerable`1<ImportDefinition> get_ImportDefinitions()
  IDictionary`2<string, object> get_Metadata()
  void Activate()
  object GetExportedValue(ExportDefinition definition)
  void SetImport(ImportDefinition definition, IEnumerable`1<Export> exports)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
Наследуется от: object
Поля:
  bool _isDisposed
  IQueryable`1 modreq(System.Runtime.CompilerServices.IsVolatile) _queryableParts
  List`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> _EmptyExportsList
Свойства:
  IQueryable`1<ComposablePartDefinition> Parts
Методы:
  void .ctor()
  IQueryable`1<ComposablePartDefinition> get_Parts()
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  IEnumerable`1<ComposablePartDefinition> GetCandidateParts(ImportDefinition definition)
  void Dispose()
  void Dispose(bool disposing)
  void ThrowIfDisposed()
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ComposablePartCatalogDebuggerProxy
Наследуется от: object
Поля:
  ComposablePartCatalog _catalog
Свойства:
  ReadOnlyCollection`1<ComposablePartDefinition> Parts
Методы:
  void .ctor(ComposablePartCatalog catalog)
  ReadOnlyCollection`1<ComposablePartDefinition> get_Parts()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
Наследуется от: object
Поля:
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> _EmptyExports
Свойства:
  IEnumerable`1<ExportDefinition> ExportDefinitions
  IEnumerable`1<ImportDefinition> ImportDefinitions
  IDictionary`2<string, object> Metadata
Методы:
  void .ctor()
  IEnumerable`1<ExportDefinition> get_ExportDefinitions()
  IEnumerable`1<ImportDefinition> get_ImportDefinitions()
  IDictionary`2<string, object> get_Metadata()
  ComposablePart CreatePart()
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  ComposablePartDefinition GetGenericPartDefinition()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ComposablePartException
Наследуется от: Exception
Поля:
  ICompositionElement _element
Свойства:
  ICompositionElement Element
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, ICompositionElement element)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, ICompositionElement element, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  ICompositionElement get_Element()
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ComposablePartExceptionDebuggerProxy
Наследуется от: object
Поля:
  ComposablePartException _exception
Свойства:
  ICompositionElement Element
  Exception InnerException
  string Message
Методы:
  void .ctor(ComposablePartException exception)
  ICompositionElement get_Element()
  Exception get_InnerException()
  string get_Message()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.CompositionElement
Наследуется от: SerializableCompositionElement
Поля:
  ICompositionElement UnknownOrigin
  object _underlyingObject
Свойства:
  object UnderlyingObject
Методы:
  void .ctor(object underlyingObject)
  object get_UnderlyingObject()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.CompositionElementDebuggerProxy
Наследуется от: object
Поля:
  CompositionElement _element
Свойства:
  string DisplayName
  ICompositionElement Origin
  object UnderlyingObject
Методы:
  void .ctor(CompositionElement element)
  string get_DisplayName()
  ICompositionElement get_Origin()
  object get_UnderlyingObject()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.CompositionElementExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ICompositionElement ToSerializableElement(ICompositionElement element)
  ICompositionElement ToElement(Export export)
  ICompositionElement ToElement(ExportDefinition definition)
  ICompositionElement ToElement(ImportDefinition definition)
  ICompositionElement ToElement(ComposablePart part)
  ICompositionElement ToElement(ComposablePartDefinition definition)
  string GetDisplayName(ComposablePartDefinition definition)
  string GetDisplayName(ComposablePartCatalog catalog)
  string GetDisplayNameCore(object value)
  ICompositionElement ToElementCore(object value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition
Наследуется от: ImportDefinition
Поля:
  IEnumerable`1<KeyValuePair`2<string, Type>> _requiredMetadata
  Expression`1<Func`2<ExportDefinition, bool>> _constraint
  CreationPolicy _requiredCreationPolicy
  string _requiredTypeIdentity
  bool _isRequiredMetadataValidated
Свойства:
  string RequiredTypeIdentity
  IEnumerable`1<KeyValuePair`2<string, Type>> RequiredMetadata
  CreationPolicy RequiredCreationPolicy
  Expression`1<Func`2<ExportDefinition, bool>> Constraint
Методы:
  void .ctor()
  void .ctor(string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, CreationPolicy requiredCreationPolicy)
  void .ctor(string contractName, string requiredTypeIdentity, IEnumerable`1<KeyValuePair`2<string, Type>> requiredMetadata, ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, CreationPolicy requiredCreationPolicy, IDictionary`2<string, object> metadata)
  string get_RequiredTypeIdentity()
  IEnumerable`1<KeyValuePair`2<string, Type>> get_RequiredMetadata()
  void ValidateRequiredMetadata()
  CreationPolicy get_RequiredCreationPolicy()
  Expression`1<Func`2<ExportDefinition, bool>> get_Constraint()
  bool IsConstraintSatisfiedBy(ExportDefinition exportDefinition)
  bool MatchRequiredMatadata(ExportDefinition definition)
  string ToString()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.Export
Наследуется от: object
Поля:
  ExportDefinition _definition
  Func`1<object> _exportedValueGetter
  object _EmptyValue
  Object modreq(System.Runtime.CompilerServices.IsVolatile) _exportedValue
Свойства:
  ExportDefinition Definition
  IDictionary`2<string, object> Metadata
  object Value
Методы:
  void .ctor()
  void .ctor(string contractName, Func`1<object> exportedValueGetter)
  void .ctor(string contractName, IDictionary`2<string, object> metadata, Func`1<object> exportedValueGetter)
  void .ctor(ExportDefinition definition, Func`1<object> exportedValueGetter)
  ExportDefinition get_Definition()
  IDictionary`2<string, object> get_Metadata()
  object get_Value()
  object GetExportedValueCore()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ExportDefinition
Наследуется от: object
Поля:
  IDictionary`2<string, object> _metadata
  string _contractName
Свойства:
  string ContractName
  IDictionary`2<string, object> Metadata
Методы:
  void .ctor()
  void .ctor(string contractName, IDictionary`2<string, object> metadata)
  string get_ContractName()
  IDictionary`2<string, object> get_Metadata()
  string ToString()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ExportedDelegate
Наследуется от: object
Поля:
  object _instance
  MethodInfo _method
Свойства:
Методы:
  void .ctor()
  void .ctor(object instance, MethodInfo method)
  Delegate CreateDelegate(Type delegateType)
  Type CreateStandardDelegateType()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ICompositionElement
Поля:
Свойства:
  string DisplayName
  ICompositionElement Origin
Методы:
  string get_DisplayName()
  ICompositionElement get_Origin()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.IPartCreatorImportDefinition
Поля:
Свойства:
  ContractBasedImportDefinition ProductImportDefinition
Методы:
  ContractBasedImportDefinition get_ProductImportDefinition()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ImportCardinality
Наследуется от: Enum
Поля:
  int value__
  ImportCardinality ZeroOrOne
  ImportCardinality ExactlyOne
  ImportCardinality ZeroOrMore
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.ImportDefinition
Наследуется от: object
Поля:
  string EmptyContractName
  Expression`1<Func`2<ExportDefinition, bool>> _constraint
  ImportCardinality _cardinality
  string _contractName
  bool _isRecomposable
  bool _isPrerequisite
  Func`2<ExportDefinition, bool> _compiledConstraint
  IDictionary`2<string, object> _metadata
Свойства:
  string ContractName
  IDictionary`2<string, object> Metadata
  ImportCardinality Cardinality
  Expression`1<Func`2<ExportDefinition, bool>> Constraint
  bool IsPrerequisite
  bool IsRecomposable
Методы:
  void .ctor()
  void .ctor(Expression`1<Func`2<ExportDefinition, bool>> constraint, string contractName, ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite)
  void .ctor(Expression`1<Func`2<ExportDefinition, bool>> constraint, string contractName, ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, IDictionary`2<string, object> metadata)
  void .ctor(string contractName, ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, IDictionary`2<string, object> metadata)
  string get_ContractName()
  IDictionary`2<string, object> get_Metadata()
  ImportCardinality get_Cardinality()
  Expression`1<Func`2<ExportDefinition, bool>> get_Constraint()
  bool get_IsPrerequisite()
  bool get_IsRecomposable()
  bool IsConstraintSatisfiedBy(ExportDefinition exportDefinition)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.PrimitivesServices
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsGeneric(ComposablePartDefinition part)
  ImportDefinition GetProductImportDefinition(ImportDefinition import)
  IEnumerable`1<string> GetCandidateContractNames(ImportDefinition import, ComposablePartDefinition part)
  bool IsImportDependentOnPart(ImportDefinition import, ComposablePartDefinition part, ExportDefinition export, bool expandGenerics)
  ImportDefinition TranslateImport(ImportDefinition import, ComposablePartDefinition part)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Primitives.SerializableCompositionElement
Наследуется от: object
Поля:
  string _displayName
  ICompositionElement _origin
Свойства:
  string DisplayName
  ICompositionElement Origin
Методы:
  void .ctor(string displayName, ICompositionElement origin)
  string get_DisplayName()
  ICompositionElement get_Origin()
  string ToString()
  ICompositionElement FromICompositionElement(ICompositionElement element)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.AggregateCatalog
Наследуется от: ComposablePartCatalog
Поля:
  ComposablePartCatalogCollection _catalogs
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
Свойства:
  ICollection`1<ComposablePartCatalog> Catalogs
Методы:
  void .ctor()
  void .ctor(ComposablePartCatalog[] catalogs)
  void .ctor(IEnumerable`1<ComposablePartCatalog> catalogs)
  void add_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void add_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  ICollection`1<ComposablePartCatalog> get_Catalogs()
  void Dispose(bool disposing)
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  void OnChanged(ComposablePartCatalogChangeEventArgs e)
  void OnChanging(ComposablePartCatalogChangeEventArgs e)
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.AggregateExportProvider
Наследуется от: ExportProvider
Поля:
  ReadOnlyCollection`1<ExportProvider> _readOnlyProviders
  ExportProvider[] _providers
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
Свойства:
  ReadOnlyCollection`1<ExportProvider> Providers
Методы:
  void .ctor(ExportProvider[] providers)
  void .ctor(IEnumerable`1<ExportProvider> providers)
  void Dispose()
  void Dispose(bool disposing)
  ReadOnlyCollection`1<ExportProvider> get_Providers()
  IEnumerable`1<Export> GetExportsCore(ImportDefinition definition, AtomicComposition atomicComposition)
  void OnExportChangedInternal(object sender, ExportsChangeEventArgs e)
  void OnExportChangingInternal(object sender, ExportsChangeEventArgs e)
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ApplicationCatalog
Наследуется от: ComposablePartCatalog
Поля:
  bool _isDisposed
  AggregateCatalog modreq(System.Runtime.CompilerServices.IsVolatile) _innerCatalog
  object _thisLock
  ICompositionElement _definitionOrigin
  ReflectionContext _reflectionContext
Свойства:
  AggregateCatalog InnerCatalog
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
Методы:
  void .ctor()
  void .ctor(ICompositionElement definitionOrigin)
  void .ctor(ReflectionContext reflectionContext)
  void .ctor(ReflectionContext reflectionContext, ICompositionElement definitionOrigin)
  ComposablePartCatalog CreateCatalog(string location, string pattern)
  AggregateCatalog get_InnerCatalog()
  void Dispose(bool disposing)
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  void ThrowIfDisposed()
  string GetDisplayName()
  string ToString()
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.AssemblyCatalog
Наследуется от: ComposablePartCatalog
Поля:
  object _thisLock
  ICompositionElement _definitionOrigin
  Assembly modreq(System.Runtime.CompilerServices.IsVolatile) _assembly
  ComposablePartCatalog modreq(System.Runtime.CompilerServices.IsVolatile) _innerCatalog
  int _isDisposed
  ReflectionContext _reflectionContext
Свойства:
  ComposablePartCatalog InnerCatalog
  Assembly Assembly
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
Методы:
  void .ctor(string codeBase)
  void .ctor(string codeBase, ReflectionContext reflectionContext)
  void .ctor(string codeBase, ICompositionElement definitionOrigin)
  void .ctor(string codeBase, ReflectionContext reflectionContext, ICompositionElement definitionOrigin)
  void .ctor(Assembly assembly, ReflectionContext reflectionContext)
  void .ctor(Assembly assembly, ReflectionContext reflectionContext, ICompositionElement definitionOrigin)
  void .ctor(Assembly assembly)
  void .ctor(Assembly assembly, ICompositionElement definitionOrigin)
  void InitializeAssemblyCatalog(Assembly assembly)
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  ComposablePartCatalog get_InnerCatalog()
  Assembly get_Assembly()
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
  string ToString()
  void Dispose(bool disposing)
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  void ThrowIfDisposed()
  string GetDisplayName()
  Assembly LoadAssembly(string codeBase)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy
Наследуется от: object
Поля:
  AssemblyCatalog _catalog
Свойства:
  Assembly Assembly
  ReadOnlyCollection`1<ComposablePartDefinition> Parts
Методы:
  void .ctor(AssemblyCatalog catalog)
  Assembly get_Assembly()
  ReadOnlyCollection`1<ComposablePartDefinition> get_Parts()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.AtomicComposition
Наследуется от: object
Поля:
  AtomicComposition _outerAtomicComposition
  KeyValuePair`2[] _values
  int _valueCount
  List`1<Action> _completeActionList
  List`1<Action> _revertActionList
  bool _isDisposed
  bool _isCompleted
  bool _containsInnerAtomicComposition
Свойства:
  bool ContainsInnerAtomicComposition
Методы:
  void .ctor()
  void .ctor(AtomicComposition outerAtomicComposition)
  void SetValue(object key, object value)
  bool TryGetValue(object key, T& value)
  bool TryGetValue(object key, bool localAtomicCompositionOnly, T& value)
  void AddCompleteAction(Action completeAction)
  void AddRevertAction(Action revertAction)
  void Complete()
  void Dispose()
  void Dispose(bool disposing)
  void FinalComplete()
  void CopyComplete()
  void set_ContainsInnerAtomicComposition(bool value)
  bool TryGetValueInternal(object key, bool localAtomicCompositionOnly, T& value)
  void SetValueInternal(object key, object value)
  void ThrowIfContainsInnerAtomicComposition()
  void ThrowIfCompleted()
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.AtomicCompositionExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  T GetValueAllowNull(AtomicComposition atomicComposition, T defaultResultAndKey)
  T GetValueAllowNull(AtomicComposition atomicComposition, object key, T defaultResult)
  void AddRevertActionAllowNull(AtomicComposition atomicComposition, Action action)
  void AddCompleteActionAllowNull(AtomicComposition atomicComposition, Action action)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CatalogExportProvider
Наследуется от: ExportProvider
Поля:
  CompositionLock _lock
  Dictionary`2<ComposablePartDefinition, CatalogPart> _activatedParts
  HashSet`1<ComposablePartDefinition> _rejectedParts
  ConditionalWeakTable`2<object, List`1<ComposablePart>> _gcRoots
  HashSet`1<IDisposable> _partsToDispose
  ComposablePartCatalog _catalog
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isRunning
  ExportProvider _sourceProvider
  ImportEngine _importEngine
  CompositionOptions _compositionOptions
  ExportProvider _innerExportProvider
Свойства:
  ComposablePartCatalog Catalog
  ExportProvider SourceProvider
Методы:
  void .ctor(ComposablePartCatalog catalog)
  void .ctor(ComposablePartCatalog catalog, bool isThreadSafe)
  void .ctor(ComposablePartCatalog catalog, CompositionOptions compositionOptions)
  ComposablePartCatalog get_Catalog()
  ExportProvider get_SourceProvider()
  void set_SourceProvider(ExportProvider value)
  void Dispose()
  void Dispose(bool disposing)
  IEnumerable`1<Export> GetExportsCore(ImportDefinition definition, AtomicComposition atomicComposition)
  IEnumerable`1<Export> InternalGetExportsCore(ImportDefinition definition, AtomicComposition atomicComposition)
  Export CreateExport(ComposablePartDefinition partDefinition, ExportDefinition exportDefinition, bool isExportFactory, CreationPolicy importPolicy)
  void OnExportsChangingInternal(object sender, ExportsChangeEventArgs e)
  ExportDefinition[] GetExportsFromPartDefinitions(IEnumerable`1<ComposablePartDefinition> partDefinitions)
  void OnCatalogChanging(object sender, ComposablePartCatalogChangeEventArgs e)
  CatalogPart GetComposablePart(ComposablePartDefinition partDefinition, bool isSharedPart)
  CatalogPart GetSharedPart(ComposablePartDefinition partDefinition)
  object GetExportedValue(CatalogPart part, ExportDefinition export, bool isSharedPart)
  void ReleasePart(object exportedValue, CatalogPart catalogPart, AtomicComposition atomicComposition)
  void PreventPartCollection(object exportedValue, ComposablePart part)
  void AllowPartCollection(object gcRoot)
  bool IsRejected(ComposablePartDefinition definition, AtomicComposition atomicComposition)
  bool DetermineRejection(ComposablePartDefinition definition, AtomicComposition parentAtomicComposition)
  void UpdateRejections(IEnumerable`1<ExportDefinition> changedExports, AtomicComposition atomicComposition)
  void ThrowIfDisposed()
  void EnsureCanRun()
  void EnsureRunning()
  void EnsureCanSet(T currentValue)
  Func`2<ComposablePartDefinition, AtomicCompositionQueryState> GetAtomicCompositionQuery(AtomicComposition atomicComposition)
  void UpdateAtomicCompositionQuery(AtomicComposition atomicComposition, Func`2<ComposablePartDefinition, bool> query, AtomicCompositionQueryState state)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CatalogExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  CompositionService CreateCompositionService(ComposablePartCatalog composablePartCatalog)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
Наследуется от: EventArgs
Поля:
  IEnumerable`1<ComposablePartDefinition> _addedDefinitions
  IEnumerable`1<ComposablePartDefinition> _removedDefinitions
  AtomicComposition <AtomicComposition>k__BackingField
Свойства:
  IEnumerable`1<ComposablePartDefinition> AddedDefinitions
  IEnumerable`1<ComposablePartDefinition> RemovedDefinitions
  AtomicComposition AtomicComposition
Методы:
  void .ctor(IEnumerable`1<ComposablePartDefinition> addedDefinitions, IEnumerable`1<ComposablePartDefinition> removedDefinitions, AtomicComposition atomicComposition)
  IEnumerable`1<ComposablePartDefinition> get_AddedDefinitions()
  IEnumerable`1<ComposablePartDefinition> get_RemovedDefinitions()
  AtomicComposition get_AtomicComposition()
  void set_AtomicComposition(AtomicComposition value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ComposablePartCatalogCollection
Наследуется от: object
Поля:
  Lock _lock
  Action`1<ComposablePartCatalogChangeEventArgs> _onChanged
  Action`1<ComposablePartCatalogChangeEventArgs> _onChanging
  List`1<ComposablePartCatalog> _catalogs
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isCopyNeeded
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  bool _hasChanged
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changed
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changing
Свойства:
  int Count
  bool IsReadOnly
  bool HasChanged
Методы:
  void .ctor(IEnumerable`1<ComposablePartCatalog> catalogs, Action`1<ComposablePartCatalogChangeEventArgs> onChanged, Action`1<ComposablePartCatalogChangeEventArgs> onChanging)
  void Add(ComposablePartCatalog item)
  void add_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void add_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void Clear()
  bool Contains(ComposablePartCatalog item)
  void CopyTo(ComposablePartCatalog[] array, int arrayIndex)
  int get_Count()
  bool get_IsReadOnly()
  bool Remove(ComposablePartCatalog item)
  bool get_HasChanged()
  IEnumerator`1<ComposablePartCatalog> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Dispose()
  void Dispose(bool disposing)
  void RaiseChangedEvent(Lazy`1<IEnumerable`1<ComposablePartDefinition>> addedDefinitions, Lazy`1<IEnumerable`1<ComposablePartDefinition>> removedDefinitions)
  void OnChanged(object sender, ComposablePartCatalogChangeEventArgs e)
  void RaiseChangingEvent(Lazy`1<IEnumerable`1<ComposablePartDefinition>> addedDefinitions, Lazy`1<IEnumerable`1<ComposablePartDefinition>> removedDefinitions, AtomicComposition atomicComposition)
  void OnChanging(object sender, ComposablePartCatalogChangeEventArgs e)
  void OnContainedCatalogChanged(object sender, ComposablePartCatalogChangeEventArgs e)
  void OnContainedCatalogChanging(object sender, ComposablePartCatalogChangeEventArgs e)
  void SubscribeToCatalogNotifications(ComposablePartCatalog catalog)
  void SubscribeToCatalogNotifications(IEnumerable`1<ComposablePartCatalog> catalogs)
  void UnsubscribeFromCatalogNotifications(ComposablePartCatalog catalog)
  void UnsubscribeFromCatalogNotifications(IEnumerable`1<ComposablePartCatalog> catalogs)
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ComposablePartExportProvider
Наследуется от: ExportProvider
Поля:
  List`1<ComposablePart> _parts
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isRunning
  CompositionLock _lock
  ExportProvider _sourceProvider
  ImportEngine _importEngine
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _currentlyComposing
  CompositionOptions _compositionOptions
Свойства:
  ExportProvider SourceProvider
  ImportEngine ImportEngine
Методы:
  void .ctor()
  void .ctor(bool isThreadSafe)
  void .ctor(CompositionOptions compositionOptions)
  void Dispose()
  void Dispose(bool disposing)
  ExportProvider get_SourceProvider()
  void set_SourceProvider(ExportProvider value)
  ImportEngine get_ImportEngine()
  IEnumerable`1<Export> GetExportsCore(ImportDefinition definition, AtomicComposition atomicComposition)
  void Compose(CompositionBatch batch)
  List`1<ComposablePart> GetUpdatedPartsList(CompositionBatch& batch)
  void Recompose(CompositionBatch batch, AtomicComposition atomicComposition)
  Export CreateExport(ComposablePart part, ExportDefinition export)
  object GetExportedValue(ComposablePart part, ExportDefinition export)
  void ThrowIfDisposed()
  void EnsureCanRun()
  void EnsureRunning()
  void EnsureCanSet(T currentValue)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionBatch
Наследуется от: object
Поля:
  object _lock
  bool _copyNeededForAdd
  bool _copyNeededForRemove
  List`1<ComposablePart> _partsToAdd
  ReadOnlyCollection`1<ComposablePart> _readOnlyPartsToAdd
  List`1<ComposablePart> _partsToRemove
  ReadOnlyCollection`1<ComposablePart> _readOnlyPartsToRemove
Свойства:
  ReadOnlyCollection`1<ComposablePart> PartsToAdd
  ReadOnlyCollection`1<ComposablePart> PartsToRemove
Методы:
  void .ctor()
  void .ctor(IEnumerable`1<ComposablePart> partsToAdd, IEnumerable`1<ComposablePart> partsToRemove)
  ReadOnlyCollection`1<ComposablePart> get_PartsToAdd()
  ReadOnlyCollection`1<ComposablePart> get_PartsToRemove()
  void AddPart(ComposablePart part)
  void RemovePart(ComposablePart part)
  ComposablePart AddExport(Export export)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionConstants
Наследуется от: object
Поля:
  string CompositionNamespace
  string PartCreationPolicyMetadataName
  string ImportSourceMetadataName
  string IsGenericPartMetadataName
  string GenericContractMetadataName
  string GenericParametersMetadataName
  string ExportTypeIdentityMetadataName
  string GenericImportParametersOrderMetadataName
  string GenericExportParametersOrderMetadataName
  string GenericPartArityMetadataName
  string GenericParameterConstraintsMetadataName
  string GenericParameterAttributesMetadataName
  string ProductDefinitionMetadataName
  string PartCreatorContractName
  string PartCreatorTypeIdentity
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionContainer
Наследуется от: ExportProvider
Поля:
  CompositionOptions _compositionOptions
  ImportEngine _importEngine
  ComposablePartExportProvider _partExportProvider
  ExportProvider _rootProvider
  CatalogExportProvider _catalogExportProvider
  AggregateExportProvider _localExportProvider
  AggregateExportProvider _ancestorExportProvider
  ReadOnlyCollection`1<ExportProvider> _providers
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  object _lock
  ReadOnlyCollection`1<ExportProvider> EmptyProviders
Свойства:
  CompositionOptions CompositionOptions
  ComposablePartCatalog Catalog
  CatalogExportProvider CatalogExportProvider
  ReadOnlyCollection`1<ExportProvider> Providers
Методы:
  void .ctor()
  void .ctor(ExportProvider[] providers)
  void .ctor(CompositionOptions compositionOptions, ExportProvider[] providers)
  void .ctor(ComposablePartCatalog catalog, ExportProvider[] providers)
  void .ctor(ComposablePartCatalog catalog, bool isThreadSafe, ExportProvider[] providers)
  void .ctor(ComposablePartCatalog catalog, CompositionOptions compositionOptions, ExportProvider[] providers)
  CompositionOptions get_CompositionOptions()
  ComposablePartCatalog get_Catalog()
  CatalogExportProvider get_CatalogExportProvider()
  ReadOnlyCollection`1<ExportProvider> get_Providers()
  void Dispose()
  void Dispose(bool disposing)
  void Compose(CompositionBatch batch)
  void ReleaseExport(Export export)
  void ReleaseExport(Lazy`1<T> export)
  void ReleaseExports(IEnumerable`1<Export> exports)
  void ReleaseExports(IEnumerable`1<Lazy`1<T>> exports)
  void ReleaseExports(IEnumerable`1<Lazy`2<T, TMetadataView>> exports)
  void SatisfyImportsOnce(ComposablePart part)
  void OnExportsChangedInternal(object sender, ExportsChangeEventArgs e)
  void OnExportsChangingInternal(object sender, ExportsChangeEventArgs e)
  IEnumerable`1<Export> GetExportsCore(ImportDefinition definition, AtomicComposition atomicComposition)
  void ThrowIfDisposed()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionLock
Наследуется от: object
Поля:
  Lock _stateLock
  object _compositionLock
  int _isDisposed
  bool _isThreadSafe
  EmptyLockHolder _EmptyLockHolder
Свойства:
  bool IsThreadSafe
Методы:
  void .ctor(bool isThreadSafe)
  void Dispose()
  bool get_IsThreadSafe()
  void EnterCompositionLock()
  void ExitCompositionLock()
  IDisposable LockComposition()
  IDisposable LockStateForRead()
  IDisposable LockStateForWrite()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionOptions
Наследуется от: Enum
Поля:
  int value__
  CompositionOptions Default
  CompositionOptions DisableSilentRejection
  CompositionOptions IsThreadSafe
  CompositionOptions ExportCompositionService
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionScopeDefinition
Наследуется от: ComposablePartCatalog
Поля:
  ComposablePartCatalog _catalog
  IEnumerable`1<ExportDefinition> _publicSurface
  IEnumerable`1<CompositionScopeDefinition> _children
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changed
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changing
Свойства:
  IEnumerable`1<CompositionScopeDefinition> Children
  IEnumerable`1<ExportDefinition> PublicSurface
Методы:
  void .ctor()
  void .ctor(ComposablePartCatalog catalog, IEnumerable`1<CompositionScopeDefinition> children)
  void .ctor(ComposablePartCatalog catalog, IEnumerable`1<CompositionScopeDefinition> children, IEnumerable`1<ExportDefinition> publicSurface)
  void InitializeCompositionScopeDefinition(ComposablePartCatalog catalog, IEnumerable`1<CompositionScopeDefinition> children, IEnumerable`1<ExportDefinition> publicSurface)
  void Dispose(bool disposing)
  IEnumerable`1<CompositionScopeDefinition> get_Children()
  IEnumerable`1<ExportDefinition> get_PublicSurface()
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExportsFromPublicSurface(ImportDefinition definition)
  void add_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void add_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void OnChanged(ComposablePartCatalogChangeEventArgs e)
  void OnChanging(ComposablePartCatalogChangeEventArgs e)
  void OnChangedInternal(object sender, ComposablePartCatalogChangeEventArgs e)
  void OnChangingInternal(object sender, ComposablePartCatalogChangeEventArgs e)
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionScopeDefinitionDebuggerProxy
Наследуется от: object
Поля:
  CompositionScopeDefinition _compositionScopeDefinition
Свойства:
  ReadOnlyCollection`1<ComposablePartDefinition> Parts
  IEnumerable`1<ExportDefinition> PublicSurface
  IEnumerable`1<CompositionScopeDefinition> Children
Методы:
  void .ctor(CompositionScopeDefinition compositionScopeDefinition)
  ReadOnlyCollection`1<ComposablePartDefinition> get_Parts()
  IEnumerable`1<ExportDefinition> get_PublicSurface()
  IEnumerable`1<CompositionScopeDefinition> get_Children()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionService
Наследуется от: object
Поля:
  CompositionContainer _compositionContainer
  INotifyComposablePartCatalogChanged _notifyCatalog
Свойства:
Методы:
  void .ctor(ComposablePartCatalog composablePartCatalog)
  void SatisfyImportsOnce(ComposablePart part)
  void Dispose()
  void OnCatalogChanging(object sender, ComposablePartCatalogChangeEventArgs e)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.CompositionServices
Наследуется от: object
Поля:
  Type InheritedExportAttributeType
  Type ExportAttributeType
  Type AttributeType
  Type ObjectType
  String[] reservedMetadataNames
Свойства:
Методы:
  Type GetDefaultTypeFromMember(MemberInfo member)
  Type AdjustSpecifiedTypeIdentityType(Type specifiedContractType, MemberInfo member)
  Type AdjustSpecifiedTypeIdentityType(Type specifiedContractType, Type memberType)
  string AdjustTypeIdentity(string originalTypeIdentity, Type typeIdentityType)
  void GetContractInfoFromExport(MemberInfo member, ExportAttribute export, Type& typeIdentityType, String& contractName)
  string GetTypeIdentityFromExport(MemberInfo member, Type typeIdentityType)
  Type GetTypeIdentityTypeFromExport(MemberInfo member, ExportAttribute export)
  bool IsContractNameSameAsTypeIdentity(ExportAttribute export)
  Type GetContractTypeFromImport(IAttributedImport import, ImportType importType)
  string GetContractNameFromImport(IAttributedImport import, ImportType importType)
  string GetTypeIdentityFromImport(IAttributedImport import, ImportType importType)
  IDictionary`2<string, object> GetPartMetadataForType(Type type, CreationPolicy creationPolicy)
  void TryExportMetadataForMember(MemberInfo member, IDictionary`2& dictionary)
  bool TryContributeMetadataValue(IDictionary`2<string, object> dictionary, string name, object value, Type valueType, bool allowsMultiple)
  IEnumerable`1<KeyValuePair`2<string, Type>> GetRequiredMetadata(Type metadataViewType)
  IDictionary`2<string, object> GetImportMetadata(ImportType importType, IAttributedImport attributedImport)
  IDictionary`2<string, object> GetImportMetadata(Type type, IAttributedImport attributedImport)
  object GetExportedValueFromComposedPart(ImportEngine engine, ComposablePart part, ExportDefinition definition)
  bool IsRecomposable(ComposablePart part)
  CompositionResult TryInvoke(Action action)
  CompositionResult TryFire(EventHandler`1<TEventArgs> _delegate, object sender, TEventArgs e)
  CreationPolicy GetRequiredCreationPolicy(ImportDefinition definition)
  bool IsAtMostOne(ImportCardinality cardinality)
  bool IsValidAttributeType(Type type)
  bool IsValidAttributeType(Type type, bool arrayAllowed)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.DirectoryCatalog
Наследуется от: ComposablePartCatalog
Поля:
  Lock _thisLock
  ICompositionElement _definitionOrigin
  ComposablePartCatalogCollection _catalogCollection
  Dictionary`2<string, AssemblyCatalog> _assemblyCatalogs
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  string _path
  string _fullPath
  string _searchPattern
  ReadOnlyCollection`1<string> _loadedFiles
  ReflectionContext _reflectionContext
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changed
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changing
Свойства:
  string FullPath
  ReadOnlyCollection`1<string> LoadedFiles
  string Path
  string SearchPattern
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
Методы:
  void .ctor(string path)
  void .ctor(string path, ReflectionContext reflectionContext)
  void .ctor(string path, ICompositionElement definitionOrigin)
  void .ctor(string path, ReflectionContext reflectionContext, ICompositionElement definitionOrigin)
  void .ctor(string path, string searchPattern)
  void .ctor(string path, string searchPattern, ICompositionElement definitionOrigin)
  void .ctor(string path, string searchPattern, ReflectionContext reflectionContext)
  void .ctor(string path, string searchPattern, ReflectionContext reflectionContext, ICompositionElement definitionOrigin)
  string get_FullPath()
  ReadOnlyCollection`1<string> get_LoadedFiles()
  string get_Path()
  string get_SearchPattern()
  void add_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void add_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void Dispose(bool disposing)
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  void OnChanged(ComposablePartCatalogChangeEventArgs e)
  void OnChanging(ComposablePartCatalogChangeEventArgs e)
  void Refresh()
  string ToString()
  AssemblyCatalog CreateAssemblyCatalogGuarded(string assemblyFilePath)
  void DiffChanges(String[] beforeFiles, String[] afterFiles, List`1& catalogsToAdd, List`1& catalogsToRemove)
  string GetDisplayName()
  String[] GetFiles()
  string GetFullPath(string path)
  void Initialize(string path, string searchPattern)
  void ThrowIfDisposed()
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ExportProvider
Наследуется от: object
Поля:
  Export[] EmptyExports
  EventHandler`1<ExportsChangeEventArgs> ExportsChanged
  EventHandler`1<ExportsChangeEventArgs> ExportsChanging
Свойства:
Методы:
  Lazy`1<T> GetExport()
  Lazy`1<T> GetExport(string contractName)
  Lazy`2<T, TMetadataView> GetExport()
  Lazy`2<T, TMetadataView> GetExport(string contractName)
  IEnumerable`1<Lazy`2<object, object>> GetExports(Type type, Type metadataViewType, string contractName)
  IEnumerable`1<Lazy`1<T>> GetExports()
  IEnumerable`1<Lazy`1<T>> GetExports(string contractName)
  IEnumerable`1<Lazy`2<T, TMetadataView>> GetExports()
  IEnumerable`1<Lazy`2<T, TMetadataView>> GetExports(string contractName)
  T GetExportedValue()
  T GetExportedValue(string contractName)
  T GetExportedValueOrDefault()
  T GetExportedValueOrDefault(string contractName)
  IEnumerable`1<T> GetExportedValues()
  IEnumerable`1<T> GetExportedValues(string contractName)
  IEnumerable`1<T> GetExportedValuesCore(string contractName)
  T GetExportedValueCore(string contractName, ImportCardinality cardinality)
  IEnumerable`1<Lazy`1<T>> GetExportsCore(string contractName)
  IEnumerable`1<Lazy`2<T, TMetadataView>> GetExportsCore(string contractName)
  Lazy`2<T, TMetadataView> GetExportCore(string contractName)
  Lazy`1<T> GetExportCore(string contractName)
  IEnumerable`1<Export> GetExportsCore(Type type, Type metadataViewType, string contractName, ImportCardinality cardinality)
  ImportDefinition BuildImportDefinition(Type type, Type metadataViewType, string contractName, ImportCardinality cardinality)
  void .ctor()
  void add_ExportsChanged(EventHandler`1<ExportsChangeEventArgs> value)
  void remove_ExportsChanged(EventHandler`1<ExportsChangeEventArgs> value)
  void add_ExportsChanging(EventHandler`1<ExportsChangeEventArgs> value)
  void remove_ExportsChanging(EventHandler`1<ExportsChangeEventArgs> value)
  IEnumerable`1<Export> GetExports(ImportDefinition definition)
  IEnumerable`1<Export> GetExports(ImportDefinition definition, AtomicComposition atomicComposition)
  bool TryGetExports(ImportDefinition definition, AtomicComposition atomicComposition, IEnumerable`1& exports)
  IEnumerable`1<Export> GetExportsCore(ImportDefinition definition, AtomicComposition atomicComposition)
  void OnExportsChanged(ExportsChangeEventArgs e)
  void OnExportsChanging(ExportsChangeEventArgs e)
  ExportCardinalityCheckResult TryGetExportsCore(ImportDefinition definition, AtomicComposition atomicComposition, IEnumerable`1& exports)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs
Наследуется от: EventArgs
Поля:
  IEnumerable`1<ExportDefinition> _addedExports
  IEnumerable`1<ExportDefinition> _removedExports
  IEnumerable`1<string> _changedContractNames
  AtomicComposition <AtomicComposition>k__BackingField
Свойства:
  IEnumerable`1<ExportDefinition> AddedExports
  IEnumerable`1<ExportDefinition> RemovedExports
  IEnumerable`1<string> ChangedContractNames
  AtomicComposition AtomicComposition
Методы:
  void .ctor(IEnumerable`1<ExportDefinition> addedExports, IEnumerable`1<ExportDefinition> removedExports, AtomicComposition atomicComposition)
  IEnumerable`1<ExportDefinition> get_AddedExports()
  IEnumerable`1<ExportDefinition> get_RemovedExports()
  IEnumerable`1<string> get_ChangedContractNames()
  AtomicComposition get_AtomicComposition()
  void set_AtomicComposition(AtomicComposition value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.FilteredCatalog
Наследуется от: ComposablePartCatalog
Поля:
  Func`2<ComposablePartDefinition, bool> _filter
  ComposablePartCatalog _innerCatalog
  FilteredCatalog _complement
  object _lock
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changed
  EventHandler`1<ComposablePartCatalogChangeEventArgs> Changing
Свойства:
  FilteredCatalog Complement
Методы:
  FilteredCatalog IncludeDependencies()
  FilteredCatalog IncludeDependencies(Func`2<ImportDefinition, bool> importFilter)
  FilteredCatalog IncludeDependents()
  FilteredCatalog IncludeDependents(Func`2<ImportDefinition, bool> importFilter)
  FilteredCatalog Traverse(IComposablePartCatalogTraversal traversal)
  HashSet`1<ComposablePartDefinition> GetTraversalClosure(IEnumerable`1<ComposablePartDefinition> parts, IComposablePartCatalogTraversal traversal)
  void GetTraversalClosure(IEnumerable`1<ComposablePartDefinition> parts, HashSet`1<ComposablePartDefinition> traversedParts, IComposablePartCatalogTraversal traversal)
  void FreezeInnerCatalog()
  void UnfreezeInnerCatalog()
  void ThrowOnRecomposition(object sender, ComposablePartCatalogChangeEventArgs e)
  void .ctor(ComposablePartCatalog catalog, Func`2<ComposablePartDefinition, bool> filter)
  void .ctor(ComposablePartCatalog catalog, Func`2<ComposablePartDefinition, bool> filter, FilteredCatalog complement)
  void Dispose(bool disposing)
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  FilteredCatalog get_Complement()
  IEnumerable`1<Tuple`2<ComposablePartDefinition, ExportDefinition>> GetExports(ImportDefinition definition)
  void add_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void add_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void OnChanged(ComposablePartCatalogChangeEventArgs e)
  void OnChanging(ComposablePartCatalogChangeEventArgs e)
  void OnChangedInternal(object sender, ComposablePartCatalogChangeEventArgs e)
  void OnChangingInternal(object sender, ComposablePartCatalogChangeEventArgs e)
  ComposablePartCatalogChangeEventArgs ProcessEventArgs(ComposablePartCatalogChangeEventArgs e)
  void ThrowIfDisposed()
  bool <get_Complement>b__23_0(ComposablePartDefinition p)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
Поля:
Свойства:
Методы:
  void add_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changed(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void add_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
  void remove_Changing(EventHandler`1<ComposablePartCatalogChangeEventArgs> value)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ImportEngine
Наследуется от: object
Поля:
  int MaximumNumberOfCompositionIterations
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  ExportProvider _sourceProvider
  Stack`1<PartManager> _recursionStateStack
  ConditionalWeakTable`2<ComposablePart, PartManager> _partManagers
  RecompositionManager _recompositionManager
  CompositionLock _lock
  CompositionOptions _compositionOptions
Свойства:
Методы:
  void .ctor(ExportProvider sourceProvider)
  void .ctor(ExportProvider sourceProvider, bool isThreadSafe)
  void .ctor(ExportProvider sourceProvider, CompositionOptions compositionOptions)
  void PreviewImports(ComposablePart part, AtomicComposition atomicComposition)
  void SatisfyImports(ComposablePart part)
  void SatisfyImportsOnce(ComposablePart part)
  void ReleaseImports(ComposablePart part, AtomicComposition atomicComposition)
  void Dispose()
  void Dispose(bool disposing)
  CompositionResult TryPreviewImportsStateMachine(PartManager partManager, ComposablePart part, AtomicComposition atomicComposition)
  CompositionResult TrySatisfyImportsStateMachine(PartManager partManager, ComposablePart part)
  CompositionResult TrySatisfyImports(PartManager partManager, ComposablePart part, bool shouldTrackImports)
  CompositionResult TrySatisfyImportSubset(PartManager partManager, IEnumerable`1<ImportDefinition> imports, AtomicComposition atomicComposition)
  void OnExportsChanging(object sender, ExportsChangeEventArgs e)
  CompositionResult TryRecomposeImports(PartManager partManager, IEnumerable`1<ExportDefinition> changedExports, AtomicComposition atomicComposition)
  CompositionResult TryRecomposeImport(PartManager partManager, bool partComposed, ImportDefinition import, AtomicComposition atomicComposition)
  void StartSatisfyingImports(PartManager partManager, AtomicComposition atomicComposition)
  void StopSatisfyingImports(PartManager partManager, AtomicComposition atomicComposition)
  PartManager GetPartManager(ComposablePart part, bool createIfNotpresent)
  EngineContext GetEngineContext(AtomicComposition atomicComposition)
  bool InPrerequisiteLoop()
  void ThrowIfDisposed()
  CompositionResult`1<IEnumerable`1<Export>> TryGetExports(ExportProvider provider, ComposablePart part, ImportDefinition definition, AtomicComposition atomicComposition)
  bool IsRequiredImportForPreview(ImportDefinition import)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ImportSourceImportDefinitionHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  ImportDefinition RemoveImportSource(ImportDefinition definition)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.ScopingExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Exports(ComposablePartDefinition part, string contractName)
  bool Imports(ComposablePartDefinition part, string contractName)
  bool Imports(ComposablePartDefinition part, string contractName, ImportCardinality importCardinality)
  bool ContainsPartMetadataWithKey(ComposablePartDefinition part, string key)
  bool ContainsPartMetadata(ComposablePartDefinition part, string key, T value)
  FilteredCatalog Filter(ComposablePartCatalog catalog, Func`2<ComposablePartDefinition, bool> filter)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Hosting.TypeCatalog
Наследуется от: ComposablePartCatalog
Поля:
  object _thisLock
  Type[] _types
  List`1 modreq(System.Runtime.CompilerServices.IsVolatile) _parts
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isDisposed
  ICompositionElement _definitionOrigin
  Lazy`1<IDictionary`2<string, List`1<ComposablePartDefinition>>> _contractPartIndex
Свойства:
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  IEnumerable`1<ComposablePartDefinition> PartsInternal
Методы:
  void .ctor(Type[] types)
  void .ctor(IEnumerable`1<Type> types)
  void .ctor(IEnumerable`1<Type> types, ICompositionElement definitionOrigin)
  void .ctor(IEnumerable`1<Type> types, ReflectionContext reflectionContext)
  void .ctor(IEnumerable`1<Type> types, ReflectionContext reflectionContext, ICompositionElement definitionOrigin)
  void InitializeTypeCatalog(IEnumerable`1<Type> types, ReflectionContext reflectionContext)
  void InitializeTypeCatalog(IEnumerable`1<Type> types)
  IEnumerator`1<ComposablePartDefinition> GetEnumerator()
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
  IEnumerable`1<ComposablePartDefinition> get_PartsInternal()
  IEnumerable`1<ComposablePartDefinition> GetCandidateParts(ImportDefinition definition)
  List`1<ComposablePartDefinition> GetCandidateParts(string contractName)
  IDictionary`2<string, List`1<ComposablePartDefinition>> CreateIndex()
  string ToString()
  void Dispose(bool disposing)
  string GetDisplayName()
  string GetTypesDisplay()
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Diagnostics.CompositionTrace
Наследуется от: object
Поля:
Свойства:
Методы:
  void PartDefinitionResurrected(ComposablePartDefinition definition)
  void PartDefinitionRejected(ComposablePartDefinition definition, ChangeRejectedException exception)
  void AssemblyLoadFailed(DirectoryCatalog catalog, string fileName, Exception exception)
  void DefinitionMarkedWithPartNotDiscoverableAttribute(Type type)
  void DefinitionMismatchedExportArity(Type type, MemberInfo member)
  void DefinitionContainsNoExports(Type type)
  void MemberMarkedWithMultipleImportAndImportMany(ReflectionItem item)
--------------------------------------------------
Класс: System.ComponentModel.Composition.Diagnostics.CompositionTraceId
Наследуется от: Enum
Поля:
  ushort value__
  CompositionTraceId Rejection_DefinitionRejected
  CompositionTraceId Rejection_DefinitionResurrected
  CompositionTraceId Discovery_AssemblyLoadFailed
  CompositionTraceId Discovery_DefinitionMarkedWithPartNotDiscoverableAttribute
  CompositionTraceId Discovery_DefinitionMismatchedExportArity
  CompositionTraceId Discovery_DefinitionContainsNoExports
  CompositionTraceId Discovery_MemberMarkedWithMultipleImportAndImportMany
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Composition.Diagnostics.CompositionTraceSource
Наследуется от: object
Поля:
  DebuggerTraceWriter Source
Свойства:
  bool CanWriteInformation
  bool CanWriteWarning
  bool CanWriteError
Методы:
  bool get_CanWriteInformation()
  bool get_CanWriteWarning()
  bool get_CanWriteError()
  void WriteInformation(CompositionTraceId traceId, string format, Object[] arguments)
  void WriteWarning(CompositionTraceId traceId, string format, Object[] arguments)
  void WriteError(CompositionTraceId traceId, string format, Object[] arguments)
  void EnsureEnabled(bool condition)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Diagnostics.DebuggerTraceWriter
Наследуется от: TraceWriter
Поля:
  string SourceName
Свойства:
  bool CanWriteInformation
  bool CanWriteWarning
  bool CanWriteError
Методы:
  bool get_CanWriteInformation()
  bool get_CanWriteWarning()
  bool get_CanWriteError()
  void WriteInformation(CompositionTraceId traceId, string format, Object[] arguments)
  void WriteWarning(CompositionTraceId traceId, string format, Object[] arguments)
  void WriteError(CompositionTraceId traceId, string format, Object[] arguments)
  void WriteEvent(TraceEventType eventType, CompositionTraceId traceId, string format, Object[] arguments)
  string CreateLogMessage(TraceEventType eventType, CompositionTraceId traceId, string format, Object[] arguments)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.Diagnostics.TraceWriter
Наследуется от: object
Поля:
Свойства:
  bool CanWriteInformation
  bool CanWriteWarning
  bool CanWriteError
Методы:
  bool get_CanWriteInformation()
  bool get_CanWriteWarning()
  bool get_CanWriteError()
  void WriteInformation(CompositionTraceId traceId, string format, Object[] arguments)
  void WriteWarning(CompositionTraceId traceId, string format, Object[] arguments)
  void WriteError(CompositionTraceId traceId, string format, Object[] arguments)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Composition.AttributedModel.AttributedExportDefinition
Наследуется от: ExportDefinition
Поля:
  AttributedPartCreationInfo _partCreationInfo
  MemberInfo _member
  ExportAttribute _exportAttribute
  Type _typeIdentityType
  IDictionary`2<string, object> _metadata
Свойства:
  IDictionary`2<string, object> Metadata
Методы:
  void .ctor(AttributedPartCreationInfo partCreationInfo, MemberInfo member, ExportAttribute exportAttribute, Type typeIdentityType, string contractName)
  IDictionary`2<string, object> get_Metadata()
--------------------------------------------------
Класс: System.ComponentModel.Composition.AttributedModel.AttributedModelDiscovery
Наследуется от: object
Поля:
Свойства:
Методы:
  ComposablePartDefinition CreatePartDefinitionIfDiscoverable(Type type, ICompositionElement origin)
  ReflectionComposablePartDefinition CreatePartDefinition(Type type, PartCreationPolicyAttribute partCreationPolicy, bool ignoreConstructorImports, ICompositionElement origin)
  ReflectionComposablePart CreatePart(object attributedPart)
  ReflectionComposablePart CreatePart(object attributedPart, ReflectionContext reflectionContext)
  ReflectionComposablePart CreatePart(ComposablePartDefinition partDefinition, object attributedPart)
  ReflectionParameterImportDefinition CreateParameterImportDefinition(ParameterInfo parameter, ICompositionElement origin)
  ReflectionMemberImportDefinition CreateMemberImportDefinition(MemberInfo member, ICompositionElement origin)
  IAttributedImport GetAttributedImport(ReflectionItem item, ICustomAttributeProvider attributeProvider)
--------------------------------------------------
Класс: System.ComponentModel.Composition.AttributedModel.AttributedPartCreationInfo
Наследуется от: object
Поля:
  Type _type
  bool _ignoreConstructorImports
  ICompositionElement _origin
  PartCreationPolicyAttribute _partCreationPolicy
  ConstructorInfo _constructor
  IEnumerable`1<ExportDefinition> _exports
  IEnumerable`1<ImportDefinition> _imports
  HashSet`1<string> _contractNamesOnNonInterfaces
Свойства:
  bool IsDisposalRequired
  string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  CreationPolicy CreationPolicy
Методы:
  void .ctor(Type type, PartCreationPolicyAttribute partCreationPolicy, bool ignoreConstructorImports, ICompositionElement origin)
  Type GetPartType()
  Lazy`1<Type> GetLazyPartType()
  ConstructorInfo GetConstructor()
  IDictionary`2<string, object> GetMetadata()
  IEnumerable`1<ExportDefinition> GetExports()
  IEnumerable`1<ImportDefinition> GetImports()
  bool get_IsDisposalRequired()
  bool IsPartDiscoverable()
  bool HasExports()
  bool AllExportsHaveMatchingArity()
  string System.ComponentModel.Composition.Primitives.ICompositionElement.get_DisplayName()
  ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.get_Origin()
  string ToString()
  string GetDisplayName()
  CreationPolicy get_CreationPolicy()
  ConstructorInfo SelectPartConstructor(Type type)
  void DiscoverExportsAndImports()
  IEnumerable`1<ExportDefinition> GetExportDefinitions()
  AttributedExportDefinition CreateExportDefinition(MemberInfo member, ExportAttribute exportAttribute)
  IEnumerable`1<MemberInfo> GetExportMembers(Type type)
  IEnumerable`1<Type> GetInheritedExports(Type type)
  bool IsExport(ICustomAttributeProvider attributeProvider)
  bool IsInheritedExport(ICustomAttributeProvider attributedProvider)
  IEnumerable`1<ImportDefinition> GetImportDefinitions()
  IEnumerable`1<MemberInfo> GetImportMembers(Type type)
  IEnumerable`1<MemberInfo> GetDeclaredOnlyImportMembers(Type type)
  bool IsImport(ICustomAttributeProvider attributeProvider)
--------------------------------------------------
Класс: Unity.ThrowStub
Наследуется от: ObjectDisposedException
Поля:
Свойства:
Методы:
  void ThrowNotSupportedException()
--------------------------------------------------
