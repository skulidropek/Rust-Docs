Сборка: Newtonsoft.Json.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.AddingNewEventArgs
Наследуется от: object
Поля:
  object <NewObject>k__BackingField
Свойства:
  object NewObject
Методы:
  object get_NewObject()
  void set_NewObject(object value)
  void .ctor()
  void .ctor(object newObject)
--------------------------------------------------
Класс: System.ComponentModel.AddingNewEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, AddingNewEventArgs e)
  IAsyncResult BeginInvoke(object sender, AddingNewEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.INotifyCollectionChanged
Поля:
Свойства:
Методы:
  void add_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void remove_CollectionChanged(NotifyCollectionChangedEventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.INotifyPropertyChanging
Поля:
Свойства:
Методы:
  void add_PropertyChanging(PropertyChangingEventHandler value)
  void remove_PropertyChanging(PropertyChangingEventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.NotifyCollectionChangedAction
Наследуется от: Enum
Поля:
  int value__
  NotifyCollectionChangedAction Add
  NotifyCollectionChangedAction Remove
  NotifyCollectionChangedAction Replace
  NotifyCollectionChangedAction Move
  NotifyCollectionChangedAction Reset
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.NotifyCollectionChangedEventArgs
Наследуется от: object
Поля:
  NotifyCollectionChangedAction <Action>k__BackingField
  IList <NewItems>k__BackingField
  int <NewStartingIndex>k__BackingField
  IList <OldItems>k__BackingField
  int <OldStartingIndex>k__BackingField
Свойства:
  NotifyCollectionChangedAction Action
  IList NewItems
  int NewStartingIndex
  IList OldItems
  int OldStartingIndex
Методы:
  NotifyCollectionChangedAction get_Action()
  void set_Action(NotifyCollectionChangedAction value)
  IList get_NewItems()
  void set_NewItems(IList value)
  int get_NewStartingIndex()
  void set_NewStartingIndex(int value)
  IList get_OldItems()
  void set_OldItems(IList value)
  int get_OldStartingIndex()
  void set_OldStartingIndex(int value)
  void .ctor(NotifyCollectionChangedAction action)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems)
  void .ctor(NotifyCollectionChangedAction action, object changedItem)
  void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems, int startingIndex)
  void .ctor(NotifyCollectionChangedAction action, object changedItem, int index)
  void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem)
  void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex)
  void .ctor(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex)
  void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem, int index)
--------------------------------------------------
Класс: System.ComponentModel.NotifyCollectionChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, NotifyCollectionChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, NotifyCollectionChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangingEventArgs
Наследуется от: EventArgs
Поля:
  string <PropertyName>k__BackingField
Свойства:
  string PropertyName
Методы:
  void .ctor(string propertyName)
  string get_PropertyName()
  void set_PropertyName(string value)
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, PropertyChangingEventArgs e)
  IAsyncResult BeginInvoke(object sender, PropertyChangingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.ConstructorHandling
Наследуется от: Enum
Поля:
  int value__
  ConstructorHandling Default
  ConstructorHandling AllowNonPublicDefaultConstructor
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.DateFormatHandling
Наследуется от: Enum
Поля:
  int value__
  DateFormatHandling IsoDateFormat
  DateFormatHandling MicrosoftDateFormat
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.DateParseHandling
Наследуется от: Enum
Поля:
  int value__
  DateParseHandling None
  DateParseHandling DateTime
  DateParseHandling DateTimeOffset
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.DateTimeZoneHandling
Наследуется от: Enum
Поля:
  int value__
  DateTimeZoneHandling Local
  DateTimeZoneHandling Utc
  DateTimeZoneHandling Unspecified
  DateTimeZoneHandling RoundtripKind
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.FloatFormatHandling
Наследуется от: Enum
Поля:
  int value__
  FloatFormatHandling String
  FloatFormatHandling Symbol
  FloatFormatHandling DefaultValue
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.FloatParseHandling
Наследуется от: Enum
Поля:
  int value__
  FloatParseHandling Double
  FloatParseHandling Decimal
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Formatting
Наследуется от: Enum
Поля:
  int value__
  Formatting None
  Formatting Indented
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.IArrayPool`1
Поля:
Свойства:
Методы:
  T[] Rent(int minimumLength)
  void Return(T[] array)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConstructorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonDictionaryAttribute
Наследуется от: JsonContainerAttribute
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  JsonException Create(IJsonLineInfo lineInfo, string path, string message)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonExtensionDataAttribute
Наследуется от: Attribute
Поля:
  bool <WriteData>k__BackingField
  bool <ReadData>k__BackingField
Свойства:
  bool WriteData
  bool ReadData
Методы:
  bool get_WriteData()
  void set_WriteData(bool value)
  bool get_ReadData()
  void set_ReadData(bool value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonContainerType
Наследуется от: Enum
Поля:
  int value__
  JsonContainerType None
  JsonContainerType Object
  JsonContainerType Array
  JsonContainerType Constructor
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonPosition
Наследуется от: ValueType
Поля:
  Char[] SpecialCharacters
  JsonContainerType Type
  int Position
  string PropertyName
  bool HasIndex
Свойства:
Методы:
  void .ctor(JsonContainerType type)
  int CalculateLength()
  void WriteTo(StringBuilder sb)
  bool TypeHasIndex(JsonContainerType type)
  string BuildPath(List`1<JsonPosition> positions, Nullable`1<JsonPosition> currentPosition)
  string FormatMessage(IJsonLineInfo lineInfo, string path, string message)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonRequiredAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.MetadataPropertyHandling
Наследуется от: Enum
Поля:
  int value__
  MetadataPropertyHandling Default
  MetadataPropertyHandling ReadAhead
  MetadataPropertyHandling Ignore
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.StringEscapeHandling
Наследуется от: Enum
Поля:
  int value__
  StringEscapeHandling Default
  StringEscapeHandling EscapeNonAscii
  StringEscapeHandling EscapeHtml
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Required
Наследуется от: Enum
Поля:
  int value__
  Required Default
  Required AllowNull
  Required Always
  Required DisallowNull
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.PreserveReferencesHandling
Наследуется от: Enum
Поля:
  int value__
  PreserveReferencesHandling None
  PreserveReferencesHandling Objects
  PreserveReferencesHandling Arrays
  PreserveReferencesHandling All
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.IJsonLineInfo
Поля:
Свойства:
  int LineNumber
  int LinePosition
Методы:
  bool HasLineInfo()
  int get_LineNumber()
  int get_LinePosition()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonArrayAttribute
Наследуется от: JsonContainerAttribute
Поля:
  bool _allowNullItems
Свойства:
  bool AllowNullItems
Методы:
  bool get_AllowNullItems()
  void set_AllowNullItems(bool value)
  void .ctor()
  void .ctor(bool allowNullItems)
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonContainerAttribute
Наследуется от: Attribute
Поля:
  string <Id>k__BackingField
  string <Title>k__BackingField
  string <Description>k__BackingField
  Type <ItemConverterType>k__BackingField
  Object[] <ItemConverterParameters>k__BackingField
  Nullable`1<bool> _isReference
  Nullable`1<bool> _itemIsReference
  Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling
  Nullable`1<TypeNameHandling> _itemTypeNameHandling
Свойства:
  string Id
  string Title
  string Description
  Type ItemConverterType
  Object[] ItemConverterParameters
  bool IsReference
  bool ItemIsReference
  ReferenceLoopHandling ItemReferenceLoopHandling
  TypeNameHandling ItemTypeNameHandling
Методы:
  string get_Id()
  void set_Id(string value)
  string get_Title()
  void set_Title(string value)
  string get_Description()
  void set_Description(string value)
  Type get_ItemConverterType()
  void set_ItemConverterType(Type value)
  Object[] get_ItemConverterParameters()
  void set_ItemConverterParameters(Object[] value)
  bool get_IsReference()
  void set_IsReference(bool value)
  bool get_ItemIsReference()
  void set_ItemIsReference(bool value)
  ReferenceLoopHandling get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(ReferenceLoopHandling value)
  TypeNameHandling get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(TypeNameHandling value)
  void .ctor()
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.DefaultValueHandling
Наследуется от: Enum
Поля:
  int value__
  DefaultValueHandling Include
  DefaultValueHandling Ignore
  DefaultValueHandling Populate
  DefaultValueHandling IgnoreAndPopulate
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConverterAttribute
Наследуется от: Attribute
Поля:
  Type _converterType
  Object[] <ConverterParameters>k__BackingField
Свойства:
  Type ConverterType
  Object[] ConverterParameters
Методы:
  Type get_ConverterType()
  Object[] get_ConverterParameters()
  void set_ConverterParameters(Object[] value)
  void .ctor(Type converterType)
  void .ctor(Type converterType, Object[] converterParameters)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonObjectAttribute
Наследуется от: JsonContainerAttribute
Поля:
  MemberSerialization _memberSerialization
  Nullable`1<Required> _itemRequired
Свойства:
  MemberSerialization MemberSerialization
  Required ItemRequired
Методы:
  MemberSerialization get_MemberSerialization()
  void set_MemberSerialization(MemberSerialization value)
  Required get_ItemRequired()
  void set_ItemRequired(Required value)
  void .ctor()
  void .ctor(MemberSerialization memberSerialization)
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonSerializerSettings
Наследуется от: object
Поля:
  ReferenceLoopHandling DefaultReferenceLoopHandling
  MissingMemberHandling DefaultMissingMemberHandling
  NullValueHandling DefaultNullValueHandling
  DefaultValueHandling DefaultDefaultValueHandling
  ObjectCreationHandling DefaultObjectCreationHandling
  PreserveReferencesHandling DefaultPreserveReferencesHandling
  ConstructorHandling DefaultConstructorHandling
  TypeNameHandling DefaultTypeNameHandling
  MetadataPropertyHandling DefaultMetadataPropertyHandling
  FormatterAssemblyStyle DefaultTypeNameAssemblyFormat
  StreamingContext DefaultContext
  Formatting DefaultFormatting
  DateFormatHandling DefaultDateFormatHandling
  DateTimeZoneHandling DefaultDateTimeZoneHandling
  DateParseHandling DefaultDateParseHandling
  FloatParseHandling DefaultFloatParseHandling
  FloatFormatHandling DefaultFloatFormatHandling
  StringEscapeHandling DefaultStringEscapeHandling
  FormatterAssemblyStyle DefaultFormatterAssemblyStyle
  CultureInfo DefaultCulture
  bool DefaultCheckAdditionalContent
  string DefaultDateFormatString
  Nullable`1<Formatting> _formatting
  Nullable`1<DateFormatHandling> _dateFormatHandling
  Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling
  Nullable`1<DateParseHandling> _dateParseHandling
  Nullable`1<FloatFormatHandling> _floatFormatHandling
  Nullable`1<FloatParseHandling> _floatParseHandling
  Nullable`1<StringEscapeHandling> _stringEscapeHandling
  CultureInfo _culture
  Nullable`1<bool> _checkAdditionalContent
  Nullable`1<int> _maxDepth
  bool _maxDepthSet
  string _dateFormatString
  bool _dateFormatStringSet
  Nullable`1<FormatterAssemblyStyle> _typeNameAssemblyFormat
  Nullable`1<DefaultValueHandling> _defaultValueHandling
  Nullable`1<PreserveReferencesHandling> _preserveReferencesHandling
  Nullable`1<NullValueHandling> _nullValueHandling
  Nullable`1<ObjectCreationHandling> _objectCreationHandling
  Nullable`1<MissingMemberHandling> _missingMemberHandling
  Nullable`1<ReferenceLoopHandling> _referenceLoopHandling
  Nullable`1<StreamingContext> _context
  Nullable`1<ConstructorHandling> _constructorHandling
  Nullable`1<TypeNameHandling> _typeNameHandling
  Nullable`1<MetadataPropertyHandling> _metadataPropertyHandling
  IList`1<JsonConverter> <Converters>k__BackingField
  IContractResolver <ContractResolver>k__BackingField
  IEqualityComparer <EqualityComparer>k__BackingField
  Func`1<IReferenceResolver> <ReferenceResolverProvider>k__BackingField
  ITraceWriter <TraceWriter>k__BackingField
  SerializationBinder <Binder>k__BackingField
  EventHandler`1<ErrorEventArgs> <Error>k__BackingField
Свойства:
  ReferenceLoopHandling ReferenceLoopHandling
  MissingMemberHandling MissingMemberHandling
  ObjectCreationHandling ObjectCreationHandling
  NullValueHandling NullValueHandling
  DefaultValueHandling DefaultValueHandling
  IList`1<JsonConverter> Converters
  PreserveReferencesHandling PreserveReferencesHandling
  TypeNameHandling TypeNameHandling
  MetadataPropertyHandling MetadataPropertyHandling
  FormatterAssemblyStyle TypeNameAssemblyFormat
  ConstructorHandling ConstructorHandling
  IContractResolver ContractResolver
  IEqualityComparer EqualityComparer
  IReferenceResolver ReferenceResolver
  Func`1<IReferenceResolver> ReferenceResolverProvider
  ITraceWriter TraceWriter
  SerializationBinder Binder
  EventHandler`1<ErrorEventArgs> Error
  StreamingContext Context
  string DateFormatString
  Nullable`1<int> MaxDepth
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatFormatHandling FloatFormatHandling
  FloatParseHandling FloatParseHandling
  StringEscapeHandling StringEscapeHandling
  CultureInfo Culture
  bool CheckAdditionalContent
Методы:
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  MissingMemberHandling get_MissingMemberHandling()
  void set_MissingMemberHandling(MissingMemberHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  IList`1<JsonConverter> get_Converters()
  void set_Converters(IList`1<JsonConverter> value)
  PreserveReferencesHandling get_PreserveReferencesHandling()
  void set_PreserveReferencesHandling(PreserveReferencesHandling value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  MetadataPropertyHandling get_MetadataPropertyHandling()
  void set_MetadataPropertyHandling(MetadataPropertyHandling value)
  FormatterAssemblyStyle get_TypeNameAssemblyFormat()
  void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value)
  ConstructorHandling get_ConstructorHandling()
  void set_ConstructorHandling(ConstructorHandling value)
  IContractResolver get_ContractResolver()
  void set_ContractResolver(IContractResolver value)
  IEqualityComparer get_EqualityComparer()
  void set_EqualityComparer(IEqualityComparer value)
  IReferenceResolver get_ReferenceResolver()
  void set_ReferenceResolver(IReferenceResolver value)
  Func`1<IReferenceResolver> get_ReferenceResolverProvider()
  void set_ReferenceResolverProvider(Func`1<IReferenceResolver> value)
  ITraceWriter get_TraceWriter()
  void set_TraceWriter(ITraceWriter value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  EventHandler`1<ErrorEventArgs> get_Error()
  void set_Error(EventHandler`1<ErrorEventArgs> value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  bool get_CheckAdditionalContent()
  void set_CheckAdditionalContent(bool value)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.MemberSerialization
Наследуется от: Enum
Поля:
  int value__
  MemberSerialization OptOut
  MemberSerialization OptIn
  MemberSerialization Fields
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.ObjectCreationHandling
Наследуется от: Enum
Поля:
  int value__
  ObjectCreationHandling Auto
  ObjectCreationHandling Reuse
  ObjectCreationHandling Replace
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.ReadType
Наследуется от: Enum
Поля:
  int value__
  ReadType Read
  ReadType ReadAsInt32
  ReadType ReadAsBytes
  ReadType ReadAsString
  ReadType ReadAsDecimal
  ReadType ReadAsDateTime
  ReadType ReadAsDateTimeOffset
  ReadType ReadAsDouble
  ReadType ReadAsBoolean
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonTextReader
Наследуется от: JsonReader
Поля:
  char UnicodeReplacementChar
  int MaximumJavascriptIntegerCharacterLength
  TextReader _reader
  Char[] _chars
  int _charsUsed
  int _charPos
  int _lineStartPos
  int _lineNumber
  bool _isEndOfFile
  StringBuffer _stringBuffer
  StringReference _stringReference
  IArrayPool`1<char> _arrayPool
  PropertyNameTable NameTable
Свойства:
  IArrayPool`1<char> ArrayPool
  int LineNumber
  int LinePosition
Методы:
  void .ctor(TextReader reader)
  IArrayPool`1<char> get_ArrayPool()
  void set_ArrayPool(IArrayPool`1<char> value)
  void EnsureBufferNotEmpty()
  void OnNewLine(int pos)
  void ParseString(char quote, ReadType readType)
  void BlockCopyChars(Char[] src, int srcOffset, Char[] dst, int dstOffset, int count)
  void ShiftBufferIfNeeded()
  int ReadData(bool append)
  int ReadData(bool append, int charsRequired)
  bool EnsureChars(int relativePosition, bool append)
  bool ReadChars(int relativePosition, bool append)
  bool Read()
  Nullable`1<int> ReadAsInt32()
  Nullable`1<DateTime> ReadAsDateTime()
  string ReadAsString()
  Byte[] ReadAsBytes()
  object ReadStringValue(ReadType readType)
  JsonReaderException CreateUnexpectedCharacterException(char c)
  Nullable`1<bool> ReadAsBoolean()
  void ProcessValueComma()
  object ReadNumberValue(ReadType readType)
  Nullable`1<DateTimeOffset> ReadAsDateTimeOffset()
  Nullable`1<decimal> ReadAsDecimal()
  Nullable`1<double> ReadAsDouble()
  void HandleNull()
  void ReadFinished()
  bool ReadNullChar()
  void EnsureBuffer()
  void ReadStringIntoBuffer(char quote)
  void WriteCharToBuffer(char writeChar, int lastWritePosition, int writeToPosition)
  char ParseUnicode()
  void ReadNumberIntoBuffer()
  void ClearRecentString()
  bool ParsePostValue()
  bool ParseObject()
  bool ParseProperty()
  bool ValidIdentifierChar(char value)
  void ParseUnquotedProperty()
  bool ParseValue()
  void ProcessLineFeed()
  void ProcessCarriageReturn(bool append)
  bool EatWhitespace(bool oneOrMore)
  void ParseConstructor()
  void ParseNumber(ReadType readType)
  void ParseComment(bool setToken)
  void EndComment(bool setToken, int initialPosition, int endPosition)
  bool MatchValue(string value)
  bool MatchValueWithTrailingSeparator(string value)
  bool IsSeparator(char c)
  void ParseTrue()
  void ParseNull()
  void ParseUndefined()
  void ParseFalse()
  object ParseNumberNegativeInfinity(ReadType readType)
  object ParseNumberPositiveInfinity(ReadType readType)
  object ParseNumberNaN(ReadType readType)
  void Close()
  bool HasLineInfo()
  int get_LineNumber()
  int get_LinePosition()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonPropertyAttribute
Наследуется от: Attribute
Поля:
  Nullable`1<NullValueHandling> _nullValueHandling
  Nullable`1<DefaultValueHandling> _defaultValueHandling
  Nullable`1<ReferenceLoopHandling> _referenceLoopHandling
  Nullable`1<ObjectCreationHandling> _objectCreationHandling
  Nullable`1<TypeNameHandling> _typeNameHandling
  Nullable`1<bool> _isReference
  Nullable`1<int> _order
  Nullable`1<Required> _required
  Nullable`1<bool> _itemIsReference
  Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling
  Nullable`1<TypeNameHandling> _itemTypeNameHandling
  Type <ItemConverterType>k__BackingField
  Object[] <ItemConverterParameters>k__BackingField
  string <PropertyName>k__BackingField
Свойства:
  Type ItemConverterType
  Object[] ItemConverterParameters
  NullValueHandling NullValueHandling
  DefaultValueHandling DefaultValueHandling
  ReferenceLoopHandling ReferenceLoopHandling
  ObjectCreationHandling ObjectCreationHandling
  TypeNameHandling TypeNameHandling
  bool IsReference
  int Order
  Required Required
  string PropertyName
  ReferenceLoopHandling ItemReferenceLoopHandling
  TypeNameHandling ItemTypeNameHandling
  bool ItemIsReference
Методы:
  Type get_ItemConverterType()
  void set_ItemConverterType(Type value)
  Object[] get_ItemConverterParameters()
  void set_ItemConverterParameters(Object[] value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  bool get_IsReference()
  void set_IsReference(bool value)
  int get_Order()
  void set_Order(int value)
  Required get_Required()
  void set_Required(Required value)
  string get_PropertyName()
  void set_PropertyName(string value)
  ReferenceLoopHandling get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(ReferenceLoopHandling value)
  TypeNameHandling get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(TypeNameHandling value)
  bool get_ItemIsReference()
  void set_ItemIsReference(bool value)
  void .ctor()
  void .ctor(string propertyName)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonIgnoreAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonTextWriter
Наследуется от: JsonWriter
Поля:
  TextWriter _writer
  Base64Encoder _base64Encoder
  char _indentChar
  int _indentation
  char _quoteChar
  bool _quoteName
  Boolean[] _charEscapeFlags
  Char[] _writeBuffer
  IArrayPool`1<char> _arrayPool
  Char[] _indentChars
Свойства:
  Base64Encoder Base64Encoder
  IArrayPool`1<char> ArrayPool
  int Indentation
  char QuoteChar
  char IndentChar
  bool QuoteName
Методы:
  Base64Encoder get_Base64Encoder()
  IArrayPool`1<char> get_ArrayPool()
  void set_ArrayPool(IArrayPool`1<char> value)
  int get_Indentation()
  void set_Indentation(int value)
  char get_QuoteChar()
  void set_QuoteChar(char value)
  char get_IndentChar()
  void set_IndentChar(char value)
  bool get_QuoteName()
  void set_QuoteName(bool value)
  void .ctor(TextWriter textWriter)
  void Flush()
  void Close()
  void WriteStartObject()
  void WriteStartArray()
  void WriteStartConstructor(string name)
  void WriteEnd(JsonToken token)
  void WritePropertyName(string name)
  void WritePropertyName(string name, bool escape)
  void OnStringEscapeHandlingChanged()
  void UpdateCharEscapeFlags()
  void WriteIndent()
  void WriteValueDelimiter()
  void WriteIndentSpace()
  void WriteValueInternal(string value, JsonToken token)
  void WriteValue(object value)
  void WriteNull()
  void WriteUndefined()
  void WriteRaw(string json)
  void WriteValue(string value)
  void WriteEscapedString(string value, bool quote)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(Nullable`1<float> value)
  void WriteValue(double value)
  void WriteValue(Nullable`1<double> value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(Byte[] value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Guid value)
  void WriteValue(TimeSpan value)
  void WriteValue(Uri value)
  void WriteComment(string text)
  void WriteWhitespace(string ws)
  void EnsureWriteBuffer()
  void WriteIntegerValue(long value)
  void WriteIntegerValue(ulong uvalue)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonWriterException
Наследуется от: JsonException
Поля:
  string <Path>k__BackingField
Свойства:
  string Path
Методы:
  string get_Path()
  void set_Path(string value)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException, string path)
  JsonWriterException Create(JsonWriter writer, string message, Exception ex)
  JsonWriterException Create(string path, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonReaderException
Наследуется от: JsonException
Поля:
  int <LineNumber>k__BackingField
  int <LinePosition>k__BackingField
  string <Path>k__BackingField
Свойства:
  int LineNumber
  int LinePosition
  string Path
Методы:
  int get_LineNumber()
  void set_LineNumber(int value)
  int get_LinePosition()
  void set_LinePosition(int value)
  string get_Path()
  void set_Path(string value)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException, string path, int lineNumber, int linePosition)
  JsonReaderException Create(JsonReader reader, string message)
  JsonReaderException Create(JsonReader reader, string message, Exception ex)
  JsonReaderException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConverter
Наследуется от: object
Поля:
Свойства:
  bool CanRead
  bool CanWrite
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  bool get_CanRead()
  bool get_CanWrite()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConverterCollection
Наследуется от: Collection`1<JsonConverter>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonReader
Наследуется от: object
Поля:
  JsonToken _tokenType
  object _value
  char _quoteChar
  State _currentState
  JsonPosition _currentPosition
  CultureInfo _culture
  DateTimeZoneHandling _dateTimeZoneHandling
  Nullable`1<int> _maxDepth
  bool _hasExceededMaxDepth
  DateParseHandling _dateParseHandling
  FloatParseHandling _floatParseHandling
  string _dateFormatString
  List`1<JsonPosition> _stack
  bool <CloseInput>k__BackingField
  bool <SupportMultipleContent>k__BackingField
Свойства:
  State CurrentState
  bool CloseInput
  bool SupportMultipleContent
  char QuoteChar
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatParseHandling FloatParseHandling
  string DateFormatString
  Nullable`1<int> MaxDepth
  JsonToken TokenType
  object Value
  Type ValueType
  int Depth
  string Path
  CultureInfo Culture
Методы:
  State get_CurrentState()
  bool get_CloseInput()
  void set_CloseInput(bool value)
  bool get_SupportMultipleContent()
  void set_SupportMultipleContent(bool value)
  char get_QuoteChar()
  void set_QuoteChar(char value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  JsonToken get_TokenType()
  object get_Value()
  Type get_ValueType()
  int get_Depth()
  string get_Path()
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  JsonPosition GetPosition(int depth)
  void .ctor()
  void Push(JsonContainerType value)
  JsonContainerType Pop()
  JsonContainerType Peek()
  bool Read()
  Nullable`1<int> ReadAsInt32()
  Nullable`1<int> ReadInt32String(string s)
  string ReadAsString()
  Byte[] ReadAsBytes()
  Byte[] ReadArrayIntoByteArray()
  Nullable`1<double> ReadAsDouble()
  Nullable`1<double> ReadDoubleString(string s)
  Nullable`1<bool> ReadAsBoolean()
  Nullable`1<bool> ReadBooleanString(string s)
  Nullable`1<decimal> ReadAsDecimal()
  Nullable`1<decimal> ReadDecimalString(string s)
  Nullable`1<DateTime> ReadAsDateTime()
  Nullable`1<DateTime> ReadDateTimeString(string s)
  Nullable`1<DateTimeOffset> ReadAsDateTimeOffset()
  Nullable`1<DateTimeOffset> ReadDateTimeOffsetString(string s)
  void ReaderReadAndAssert()
  JsonReaderException CreateUnexpectedEndException()
  void ReadIntoWrappedTypeObject()
  void Skip()
  void SetToken(JsonToken newToken)
  void SetToken(JsonToken newToken, object value)
  void SetToken(JsonToken newToken, object value, bool updateIndex)
  void SetPostValueState(bool updateIndex)
  void UpdateScopeWithFinishedValue()
  void ValidateEnd(JsonToken endToken)
  void SetStateBasedOnCurrent()
  void SetFinished()
  JsonContainerType GetTypeForCloseToken(JsonToken token)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void Close()
  void ReadAndAssert()
  bool ReadAndMoveToContent()
  bool MoveToContent()
  JsonToken GetContentToken()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConvert
Наследуется от: object
Поля:
  Func`1<JsonSerializerSettings> <DefaultSettings>k__BackingField
  string True
  string False
  string Null
  string Undefined
  string PositiveInfinity
  string NegativeInfinity
  string NaN
  JsonSerializerSettings InitialSerializerSettings
Свойства:
  Func`1<JsonSerializerSettings> DefaultSettings
Методы:
  Func`1<JsonSerializerSettings> get_DefaultSettings()
  void set_DefaultSettings(Func`1<JsonSerializerSettings> value)
  void .cctor()
  JsonSerializerSettings GetDefaultSettings()
  string ToString(DateTime value)
  string ToString(DateTime value, DateFormatHandling format, DateTimeZoneHandling timeZoneHandling)
  string ToString(DateTimeOffset value)
  string ToString(DateTimeOffset value, DateFormatHandling format)
  string ToString(bool value)
  string ToString(char value)
  string ToString(Enum value)
  string ToString(int value)
  string ToString(short value)
  string ToString(ushort value)
  string ToString(UInt32 value)
  string ToString(long value)
  string ToString(ulong value)
  string ToString(float value)
  string ToString(float value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable)
  string EnsureFloatFormat(double value, string text, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable)
  string ToString(double value)
  string ToString(double value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable)
  string EnsureDecimalPlace(double value, string text)
  string EnsureDecimalPlace(string text)
  string ToString(byte value)
  string ToString(sbyte value)
  string ToString(decimal value)
  string ToString(Guid value)
  string ToString(Guid value, char quoteChar)
  string ToString(TimeSpan value)
  string ToString(TimeSpan value, char quoteChar)
  string ToString(Uri value)
  string ToString(Uri value, char quoteChar)
  string ToString(string value)
  string ToString(string value, char delimiter)
  string ToString(string value, char delimiter, StringEscapeHandling stringEscapeHandling)
  string ToString(object value)
  string SerializeObject(object value)
  string SerializeObject(object value, Formatting formatting)
  string SerializeObject(object value, JsonConverter[] converters)
  string SerializeObject(object value, Formatting formatting, JsonConverter[] converters)
  string SerializeObject(object value, JsonSerializerSettings settings)
  string SerializeObject(object value, Type type, JsonSerializerSettings settings)
  string SerializeObject(object value, Formatting formatting, JsonSerializerSettings settings)
  string SerializeObject(object value, Type type, Formatting formatting, JsonSerializerSettings settings)
  string SerializeObjectInternal(object value, Type type, JsonSerializer jsonSerializer)
  object DeserializeObject(string value)
  object DeserializeObject(string value, JsonSerializerSettings settings)
  object DeserializeObject(string value, Type type)
  T DeserializeObject(string value)
  T DeserializeAnonymousType(string value, T anonymousTypeObject)
  T DeserializeAnonymousType(string value, T anonymousTypeObject, JsonSerializerSettings settings)
  T DeserializeObject(string value, JsonConverter[] converters)
  T DeserializeObject(string value, JsonSerializerSettings settings)
  object DeserializeObject(string value, Type type, JsonConverter[] converters)
  object DeserializeObject(string value, Type type, JsonSerializerSettings settings)
  void PopulateObject(string value, object target)
  void PopulateObject(string value, object target, JsonSerializerSettings settings)
  string SerializeXmlNode(XmlNode node)
  string SerializeXmlNode(XmlNode node, Formatting formatting)
  string SerializeXmlNode(XmlNode node, Formatting formatting, bool omitRootObject)
  XmlDocument DeserializeXmlNode(string value)
  XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName)
  XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName, bool writeArrayAttribute)
  string SerializeXNode(XObject node)
  string SerializeXNode(XObject node, Formatting formatting)
  string SerializeXNode(XObject node, Formatting formatting, bool omitRootObject)
  XDocument DeserializeXNode(string value)
  XDocument DeserializeXNode(string value, string deserializeRootElementName)
  XDocument DeserializeXNode(string value, string deserializeRootElementName, bool writeArrayAttribute)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonSerializationException
Наследуется от: JsonException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  JsonSerializationException Create(JsonReader reader, string message)
  JsonSerializationException Create(JsonReader reader, string message, Exception ex)
  JsonSerializationException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonSerializer
Наследуется от: object
Поля:
  TypeNameHandling _typeNameHandling
  FormatterAssemblyStyle _typeNameAssemblyFormat
  PreserveReferencesHandling _preserveReferencesHandling
  ReferenceLoopHandling _referenceLoopHandling
  MissingMemberHandling _missingMemberHandling
  ObjectCreationHandling _objectCreationHandling
  NullValueHandling _nullValueHandling
  DefaultValueHandling _defaultValueHandling
  ConstructorHandling _constructorHandling
  MetadataPropertyHandling _metadataPropertyHandling
  JsonConverterCollection _converters
  IContractResolver _contractResolver
  ITraceWriter _traceWriter
  IEqualityComparer _equalityComparer
  SerializationBinder _binder
  StreamingContext _context
  IReferenceResolver _referenceResolver
  Nullable`1<Formatting> _formatting
  Nullable`1<DateFormatHandling> _dateFormatHandling
  Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling
  Nullable`1<DateParseHandling> _dateParseHandling
  Nullable`1<FloatFormatHandling> _floatFormatHandling
  Nullable`1<FloatParseHandling> _floatParseHandling
  Nullable`1<StringEscapeHandling> _stringEscapeHandling
  CultureInfo _culture
  Nullable`1<int> _maxDepth
  bool _maxDepthSet
  Nullable`1<bool> _checkAdditionalContent
  string _dateFormatString
  bool _dateFormatStringSet
  EventHandler`1<ErrorEventArgs> Error
Свойства:
  IReferenceResolver ReferenceResolver
  SerializationBinder Binder
  ITraceWriter TraceWriter
  IEqualityComparer EqualityComparer
  TypeNameHandling TypeNameHandling
  FormatterAssemblyStyle TypeNameAssemblyFormat
  PreserveReferencesHandling PreserveReferencesHandling
  ReferenceLoopHandling ReferenceLoopHandling
  MissingMemberHandling MissingMemberHandling
  NullValueHandling NullValueHandling
  DefaultValueHandling DefaultValueHandling
  ObjectCreationHandling ObjectCreationHandling
  ConstructorHandling ConstructorHandling
  MetadataPropertyHandling MetadataPropertyHandling
  JsonConverterCollection Converters
  IContractResolver ContractResolver
  StreamingContext Context
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatParseHandling FloatParseHandling
  FloatFormatHandling FloatFormatHandling
  StringEscapeHandling StringEscapeHandling
  string DateFormatString
  CultureInfo Culture
  Nullable`1<int> MaxDepth
  bool CheckAdditionalContent
Методы:
  void add_Error(EventHandler`1<ErrorEventArgs> value)
  void remove_Error(EventHandler`1<ErrorEventArgs> value)
  IReferenceResolver get_ReferenceResolver()
  void set_ReferenceResolver(IReferenceResolver value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  ITraceWriter get_TraceWriter()
  void set_TraceWriter(ITraceWriter value)
  IEqualityComparer get_EqualityComparer()
  void set_EqualityComparer(IEqualityComparer value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  FormatterAssemblyStyle get_TypeNameAssemblyFormat()
  void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value)
  PreserveReferencesHandling get_PreserveReferencesHandling()
  void set_PreserveReferencesHandling(PreserveReferencesHandling value)
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  MissingMemberHandling get_MissingMemberHandling()
  void set_MissingMemberHandling(MissingMemberHandling value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  ConstructorHandling get_ConstructorHandling()
  void set_ConstructorHandling(ConstructorHandling value)
  MetadataPropertyHandling get_MetadataPropertyHandling()
  void set_MetadataPropertyHandling(MetadataPropertyHandling value)
  JsonConverterCollection get_Converters()
  IContractResolver get_ContractResolver()
  void set_ContractResolver(IContractResolver value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  bool get_CheckAdditionalContent()
  void set_CheckAdditionalContent(bool value)
  bool IsCheckAdditionalContentSet()
  void .ctor()
  JsonSerializer Create()
  JsonSerializer Create(JsonSerializerSettings settings)
  JsonSerializer CreateDefault()
  JsonSerializer CreateDefault(JsonSerializerSettings settings)
  void ApplySerializerSettings(JsonSerializer serializer, JsonSerializerSettings settings)
  void Populate(TextReader reader, object target)
  void Populate(JsonReader reader, object target)
  void PopulateInternal(JsonReader reader, object target)
  object Deserialize(JsonReader reader)
  object Deserialize(TextReader reader, Type objectType)
  T Deserialize(JsonReader reader)
  object Deserialize(JsonReader reader, Type objectType)
  object DeserializeInternal(JsonReader reader, Type objectType)
  void SetupReader(JsonReader reader, CultureInfo& previousCulture, Nullable`1& previousDateTimeZoneHandling, Nullable`1& previousDateParseHandling, Nullable`1& previousFloatParseHandling, Nullable`1& previousMaxDepth, String& previousDateFormatString)
  void ResetReader(JsonReader reader, CultureInfo previousCulture, Nullable`1<DateTimeZoneHandling> previousDateTimeZoneHandling, Nullable`1<DateParseHandling> previousDateParseHandling, Nullable`1<FloatParseHandling> previousFloatParseHandling, Nullable`1<int> previousMaxDepth, string previousDateFormatString)
  void Serialize(TextWriter textWriter, object value)
  void Serialize(JsonWriter jsonWriter, object value, Type objectType)
  void Serialize(TextWriter textWriter, object value, Type objectType)
  void Serialize(JsonWriter jsonWriter, object value)
  void SerializeInternal(JsonWriter jsonWriter, object value, Type objectType)
  IReferenceResolver GetReferenceResolver()
  JsonConverter GetMatchingConverter(Type type)
  JsonConverter GetMatchingConverter(IList`1<JsonConverter> converters, Type objectType)
  void OnError(ErrorEventArgs e)
--------------------------------------------------
Класс: Newtonsoft.Json.MissingMemberHandling
Наследуется от: Enum
Поля:
  int value__
  MissingMemberHandling Ignore
  MissingMemberHandling Error
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.NullValueHandling
Наследуется от: Enum
Поля:
  int value__
  NullValueHandling Include
  NullValueHandling Ignore
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.ReferenceLoopHandling
Наследуется от: Enum
Поля:
  int value__
  ReferenceLoopHandling Error
  ReferenceLoopHandling Ignore
  ReferenceLoopHandling Serialize
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.TypeNameHandling
Наследуется от: Enum
Поля:
  int value__
  TypeNameHandling None
  TypeNameHandling Objects
  TypeNameHandling Arrays
  TypeNameHandling All
  TypeNameHandling Auto
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonToken
Наследуется от: Enum
Поля:
  int value__
  JsonToken None
  JsonToken StartObject
  JsonToken StartArray
  JsonToken StartConstructor
  JsonToken PropertyName
  JsonToken Comment
  JsonToken Raw
  JsonToken Integer
  JsonToken Float
  JsonToken String
  JsonToken Boolean
  JsonToken Null
  JsonToken Undefined
  JsonToken EndObject
  JsonToken EndArray
  JsonToken EndConstructor
  JsonToken Date
  JsonToken Bytes
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonWriter
Наследуется от: object
Поля:
  State[][] StateArray
  State[][] StateArrayTempate
  List`1<JsonPosition> _stack
  JsonPosition _currentPosition
  State _currentState
  Formatting _formatting
  bool <CloseOutput>k__BackingField
  DateFormatHandling _dateFormatHandling
  DateTimeZoneHandling _dateTimeZoneHandling
  StringEscapeHandling _stringEscapeHandling
  FloatFormatHandling _floatFormatHandling
  string _dateFormatString
  CultureInfo _culture
Свойства:
  bool CloseOutput
  int Top
  WriteState WriteState
  string ContainerPath
  string Path
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  StringEscapeHandling StringEscapeHandling
  FloatFormatHandling FloatFormatHandling
  string DateFormatString
  CultureInfo Culture
Методы:
  State[][] BuildStateArray()
  void .cctor()
  bool get_CloseOutput()
  void set_CloseOutput(bool value)
  int get_Top()
  WriteState get_WriteState()
  string get_ContainerPath()
  string get_Path()
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  void OnStringEscapeHandlingChanged()
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  void .ctor()
  void UpdateScopeWithFinishedValue()
  void Push(JsonContainerType value)
  JsonContainerType Pop()
  JsonContainerType Peek()
  void Flush()
  void Close()
  void WriteStartObject()
  void WriteEndObject()
  void WriteStartArray()
  void WriteEndArray()
  void WriteStartConstructor(string name)
  void WriteEndConstructor()
  void WritePropertyName(string name)
  void WritePropertyName(string name, bool escape)
  void WriteEnd()
  void WriteToken(JsonReader reader)
  void WriteToken(JsonReader reader, bool writeChildren)
  void WriteToken(JsonToken token, object value)
  void WriteToken(JsonToken token)
  void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments)
  void WriteConstructorDate(JsonReader reader)
  void WriteEnd(JsonContainerType type)
  void AutoCompleteAll()
  JsonToken GetCloseTokenForType(JsonContainerType type)
  void AutoCompleteClose(JsonContainerType type)
  void WriteEnd(JsonToken token)
  void WriteIndent()
  void WriteValueDelimiter()
  void WriteIndentSpace()
  void AutoComplete(JsonToken tokenBeingWritten)
  void WriteNull()
  void WriteUndefined()
  void WriteRaw(string json)
  void WriteRawValue(string json)
  void WriteValue(string value)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(double value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Guid value)
  void WriteValue(TimeSpan value)
  void WriteValue(Nullable`1<int> value)
  void WriteValue(Nullable`1<UInt32> value)
  void WriteValue(Nullable`1<long> value)
  void WriteValue(Nullable`1<ulong> value)
  void WriteValue(Nullable`1<float> value)
  void WriteValue(Nullable`1<double> value)
  void WriteValue(Nullable`1<bool> value)
  void WriteValue(Nullable`1<short> value)
  void WriteValue(Nullable`1<ushort> value)
  void WriteValue(Nullable`1<char> value)
  void WriteValue(Nullable`1<byte> value)
  void WriteValue(Nullable`1<sbyte> value)
  void WriteValue(Nullable`1<decimal> value)
  void WriteValue(Nullable`1<DateTime> value)
  void WriteValue(Nullable`1<DateTimeOffset> value)
  void WriteValue(Nullable`1<Guid> value)
  void WriteValue(Nullable`1<TimeSpan> value)
  void WriteValue(Byte[] value)
  void WriteValue(Uri value)
  void WriteValue(object value)
  void WriteComment(string text)
  void WriteWhitespace(string ws)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void WriteValue(JsonWriter writer, PrimitiveTypeCode typeCode, object value)
  JsonWriterException CreateUnsupportedTypeException(JsonWriter writer, object value)
  void SetWriteState(JsonToken token, object value)
  void InternalWriteEnd(JsonContainerType container)
  void InternalWritePropertyName(string name)
  void InternalWriteRaw()
  void InternalWriteStart(JsonToken token, JsonContainerType container)
  void InternalWriteValue(JsonToken token)
  void InternalWriteWhitespace(string ws)
  void InternalWriteComment()
--------------------------------------------------
Класс: Newtonsoft.Json.WriteState
Наследуется от: Enum
Поля:
  int value__
  WriteState Error
  WriteState Closed
  WriteState Object
  WriteState Array
  WriteState Constructor
  WriteState Property
  WriteState Start
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ParserTimeZone
Наследуется от: Enum
Поля:
  int value__
  ParserTimeZone Unspecified
  ParserTimeZone Utc
  ParserTimeZone LocalWestOfUtc
  ParserTimeZone LocalEastOfUtc
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.DateTimeParser
Наследуется от: ValueType
Поля:
  int Year
  int Month
  int Day
  int Hour
  int Minute
  int Second
  int Fraction
  int ZoneHour
  int ZoneMinute
  ParserTimeZone Zone
  Char[] _text
  int _end
  Int32[] Power10
  int Lzyyyy
  int Lzyyyy_
  int Lzyyyy_MM
  int Lzyyyy_MM_
  int Lzyyyy_MM_dd
  int Lzyyyy_MM_ddT
  int LzHH
  int LzHH_
  int LzHH_mm
  int LzHH_mm_
  int LzHH_mm_ss
  int Lz_
  int Lz_zz
  short MaxFractionDigits
Свойства:
Методы:
  void .cctor()
  bool Parse(Char[] text, int startIndex, int length)
  bool ParseDate(int start)
  bool ParseTimeAndZoneAndWhitespace(int start)
  bool ParseTime(Int32& start)
  bool ParseZone(int start)
  bool Parse4Digit(int start, Int32& num)
  bool Parse2Digit(int start, Int32& num)
  bool ParseChar(int start, char ch)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.Base64Encoder
Наследуется от: object
Поля:
  int Base64LineSize
  int LineSizeInBytes
  Char[] _charsLine
  TextWriter _writer
  Byte[] _leftOverBytes
  int _leftOverBytesCount
Свойства:
Методы:
  void .ctor(TextWriter writer)
  void Encode(Byte[] buffer, int index, int count)
  void Flush()
  void WriteChars(Char[] chars, int index, int count)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.JsonTokenUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsEndToken(JsonToken token)
  bool IsStartToken(JsonToken token)
  bool IsPrimitiveToken(JsonToken token)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.PropertyNameTable
Наследуется от: object
Поля:
  int HashCodeRandomizer
  int _count
  Entry[] _entries
  int _mask
Свойства:
Методы:
  void .cctor()
  void .ctor()
  string Get(Char[] key, int start, int length)
  string Add(string key)
  string AddEntry(string str, int hashCode)
  void Grow()
  bool TextEquals(string str1, Char[] str2, int str2Start, int str2Length)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionDelegateFactory
Наследуется от: object
Поля:
Свойства:
Методы:
  Func`2<T, object> CreateGet(MemberInfo memberInfo)
  Action`2<T, object> CreateSet(MemberInfo memberInfo)
  MethodCall`2<T, object> CreateMethodCall(MethodBase method)
  ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method)
  Func`1<T> CreateDefaultConstructor(Type type)
  Func`2<T, object> CreateGet(PropertyInfo propertyInfo)
  Func`2<T, object> CreateGet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(PropertyInfo propertyInfo)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory
Наследуется от: ReflectionDelegateFactory
Поля:
  LateBoundReflectionDelegateFactory _instance
Свойства:
  ReflectionDelegateFactory Instance
Методы:
  ReflectionDelegateFactory get_Instance()
  ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method)
  MethodCall`2<T, object> CreateMethodCall(MethodBase method)
  Func`1<T> CreateDefaultConstructor(Type type)
  Func`2<T, object> CreateGet(PropertyInfo propertyInfo)
  Func`2<T, object> CreateGet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(PropertyInfo propertyInfo)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.MethodCall`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T target, Object[] args)
  IAsyncResult BeginInvoke(T target, Object[] args, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionMember
Наследуется от: object
Поля:
  Type <MemberType>k__BackingField
  Func`2<object, object> <Getter>k__BackingField
  Action`2<object, object> <Setter>k__BackingField
Свойства:
  Type MemberType
  Func`2<object, object> Getter
  Action`2<object, object> Setter
Методы:
  Type get_MemberType()
  void set_MemberType(Type value)
  Func`2<object, object> get_Getter()
  void set_Getter(Func`2<object, object> value)
  Action`2<object, object> get_Setter()
  void set_Setter(Action`2<object, object> value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionObject
Наследуется от: object
Поля:
  ObjectConstructor`1<object> <Creator>k__BackingField
  IDictionary`2<string, ReflectionMember> <Members>k__BackingField
Свойства:
  ObjectConstructor`1<object> Creator
  IDictionary`2<string, ReflectionMember> Members
Методы:
  ObjectConstructor`1<object> get_Creator()
  void set_Creator(ObjectConstructor`1<object> value)
  IDictionary`2<string, ReflectionMember> get_Members()
  void set_Members(IDictionary`2<string, ReflectionMember> value)
  void .ctor()
  object GetValue(object target, string member)
  void SetValue(object target, string member, object value)
  Type GetType(string member)
  ReflectionObject Create(Type t, String[] memberNames)
  ReflectionObject Create(Type t, MethodBase creator, String[] memberNames)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringReference
Наследуется от: ValueType
Поля:
  Char[] _chars
  int _startIndex
  int _length
Свойства:
  char Item
  Char[] Chars
  int StartIndex
  int Length
Методы:
  char get_Item(int i)
  Char[] get_Chars()
  int get_StartIndex()
  int get_Length()
  void .ctor(Char[] chars, int startIndex, int length)
  string ToString()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringReferenceExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  int IndexOf(StringReference s, char c, int startIndex, int length)
  bool StartsWith(StringReference s, string text)
  bool EndsWith(StringReference s, string text)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ThreadSafeStore`2
Наследуется от: object
Поля:
  object _lock
  Dictionary`2<TKey, TValue> _store
  Func`2<TKey, TValue> _creator
Свойства:
Методы:
  void .ctor(Func`2<TKey, TValue> creator)
  TValue Get(TKey key)
  TValue AddValue(TKey key)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.BidirectionalDictionary`2
Наследуется от: object
Поля:
  IDictionary`2<TFirst, TSecond> _firstToSecond
  IDictionary`2<TSecond, TFirst> _secondToFirst
  string _duplicateFirstErrorMessage
  string _duplicateSecondErrorMessage
Свойства:
Методы:
  void .ctor()
  void .ctor(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer)
  void .ctor(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer, string duplicateFirstErrorMessage, string duplicateSecondErrorMessage)
  void Set(TFirst first, TSecond second)
  bool TryGetByFirst(TFirst first, TSecond& second)
  bool TryGetBySecond(TSecond second, TFirst& first)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.PrimitiveTypeCode
Наследуется от: Enum
Поля:
  int value__
  PrimitiveTypeCode Empty
  PrimitiveTypeCode Object
  PrimitiveTypeCode Char
  PrimitiveTypeCode CharNullable
  PrimitiveTypeCode Boolean
  PrimitiveTypeCode BooleanNullable
  PrimitiveTypeCode SByte
  PrimitiveTypeCode SByteNullable
  PrimitiveTypeCode Int16
  PrimitiveTypeCode Int16Nullable
  PrimitiveTypeCode UInt16
  PrimitiveTypeCode UInt16Nullable
  PrimitiveTypeCode Int32
  PrimitiveTypeCode Int32Nullable
  PrimitiveTypeCode Byte
  PrimitiveTypeCode ByteNullable
  PrimitiveTypeCode UInt32
  PrimitiveTypeCode UInt32Nullable
  PrimitiveTypeCode Int64
  PrimitiveTypeCode Int64Nullable
  PrimitiveTypeCode UInt64
  PrimitiveTypeCode UInt64Nullable
  PrimitiveTypeCode Single
  PrimitiveTypeCode SingleNullable
  PrimitiveTypeCode Double
  PrimitiveTypeCode DoubleNullable
  PrimitiveTypeCode DateTime
  PrimitiveTypeCode DateTimeNullable
  PrimitiveTypeCode DateTimeOffset
  PrimitiveTypeCode DateTimeOffsetNullable
  PrimitiveTypeCode Decimal
  PrimitiveTypeCode DecimalNullable
  PrimitiveTypeCode Guid
  PrimitiveTypeCode GuidNullable
  PrimitiveTypeCode TimeSpan
  PrimitiveTypeCode TimeSpanNullable
  PrimitiveTypeCode BigInteger
  PrimitiveTypeCode BigIntegerNullable
  PrimitiveTypeCode Uri
  PrimitiveTypeCode String
  PrimitiveTypeCode Bytes
  PrimitiveTypeCode DBNull
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.TypeInformation
Наследуется от: object
Поля:
  Type <Type>k__BackingField
  PrimitiveTypeCode <TypeCode>k__BackingField
Свойства:
  Type Type
  PrimitiveTypeCode TypeCode
Методы:
  Type get_Type()
  void set_Type(Type value)
  PrimitiveTypeCode get_TypeCode()
  void set_TypeCode(PrimitiveTypeCode value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ParseResult
Наследуется от: Enum
Поля:
  int value__
  ParseResult None
  ParseResult Success
  ParseResult Overflow
  ParseResult Invalid
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ConvertUtils
Наследуется от: object
Поля:
  Dictionary`2<Type, PrimitiveTypeCode> TypeCodeMap
  TypeInformation[] PrimitiveTypeCodes
  ThreadSafeStore`2<TypeConvertKey, Func`2<object, object>> CastConverters
Свойства:
Методы:
  PrimitiveTypeCode GetTypeCode(Type t)
  PrimitiveTypeCode GetTypeCode(Type t, Boolean& isEnum)
  TypeInformation GetTypeInformation(IConvertible convertable)
  bool IsConvertible(Type t)
  TimeSpan ParseTimeSpan(string input)
  Func`2<object, object> CreateCastConverter(TypeConvertKey t)
  object Convert(object initialValue, CultureInfo culture, Type targetType)
  bool TryConvert(object initialValue, CultureInfo culture, Type targetType, Object& value)
  ConvertResult TryConvertInternal(object initialValue, CultureInfo culture, Type targetType, Object& value)
  object ConvertOrCast(object initialValue, CultureInfo culture, Type targetType)
  object EnsureTypeAssignable(object value, Type initialType, Type targetType)
  TypeConverter GetConverter(Type t)
  bool VersionTryParse(string input, Version& result)
  bool IsInteger(object value)
  ParseResult Int32TryParse(Char[] chars, int start, int length, Int32& value)
  ParseResult Int64TryParse(Char[] chars, int start, int length, Int64& value)
  bool TryConvertGuid(string s, Guid& g)
  int HexTextToInt(Char[] text, int start, int end)
  int HexCharToInt(char ch)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.IWrappedCollection
Поля:
Свойства:
  object UnderlyingCollection
Методы:
  object get_UnderlyingCollection()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.CollectionWrapper`1
Наследуется от: object
Поля:
  IList _list
  ICollection`1<T> _genericCollection
  object _syncRoot
Свойства:
  int Count
  bool IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  object UnderlyingCollection
Методы:
  void .ctor(IList list)
  void .ctor(ICollection`1<T> list)
  void Add(T item)
  void Clear()
  bool Contains(T item)
  void CopyTo(T[] array, int arrayIndex)
  int get_Count()
  bool get_IsReadOnly()
  bool Remove(T item)
  IEnumerator`1<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.RemoveAt(int index)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsFixedSize()
  void System.Collections.IList.Remove(object value)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void System.Collections.ICollection.CopyTo(Array array, int arrayIndex)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void VerifyValueType(object value)
  bool IsCompatibleObject(object value)
  object get_UnderlyingCollection()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.DateTimeUtils
Наследуется от: object
Поля:
  long InitialJavaScriptDateTicks
  string IsoDateFormat
  int DaysPer100Years
  int DaysPer400Years
  int DaysPer4Years
  int DaysPerYear
  long TicksPerDay
  Int32[] DaysToMonth365
  Int32[] DaysToMonth366
Свойства:
Методы:
  void .cctor()
  TimeSpan GetUtcOffset(DateTime d)
  XmlDateTimeSerializationMode ToSerializationMode(DateTimeKind kind)
  DateTime EnsureDateTime(DateTime value, DateTimeZoneHandling timeZone)
  DateTime SwitchToLocalTime(DateTime value)
  DateTime SwitchToUtcTime(DateTime value)
  long ToUniversalTicks(DateTime dateTime)
  long ToUniversalTicks(DateTime dateTime, TimeSpan offset)
  long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, TimeSpan offset)
  long ConvertDateTimeToJavaScriptTicks(DateTime dateTime)
  long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, bool convertToUtc)
  long UniversialTicksToJavaScriptTicks(long universialTicks)
  DateTime ConvertJavaScriptTicksToDateTime(long javaScriptTicks)
  bool TryParseDateTimeIso(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt)
  bool TryParseDateTimeOffsetIso(StringReference text, DateTimeOffset& dt)
  DateTime CreateDateTime(DateTimeParser dateTimeParser)
  bool TryParseDateTime(StringReference s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt)
  bool TryParseDateTime(string s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt)
  bool TryParseDateTimeOffset(StringReference s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt)
  bool TryParseDateTimeOffset(string s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt)
  bool TryParseMicrosoftDate(StringReference text, Int64& ticks, TimeSpan& offset, DateTimeKind& kind)
  bool TryParseDateTimeMicrosoft(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt)
  bool TryParseDateTimeExact(string text, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt)
  bool TryParseDateTimeOffsetMicrosoft(StringReference text, DateTimeOffset& dt)
  bool TryParseDateTimeOffsetExact(string text, string dateFormatString, CultureInfo culture, DateTimeOffset& dt)
  bool TryReadOffset(StringReference offsetText, int startIndex, TimeSpan& offset)
  void WriteDateTimeString(TextWriter writer, DateTime value, DateFormatHandling format, string formatString, CultureInfo culture)
  int WriteDateTimeString(Char[] chars, int start, DateTime value, Nullable`1<TimeSpan> offset, DateTimeKind kind, DateFormatHandling format)
  int WriteDefaultIsoDate(Char[] chars, int start, DateTime dt)
  void CopyIntToCharArray(Char[] chars, int start, int value, int digits)
  int WriteDateTimeOffset(Char[] chars, int start, TimeSpan offset, DateFormatHandling format)
  void WriteDateTimeOffsetString(TextWriter writer, DateTimeOffset value, DateFormatHandling format, string formatString, CultureInfo culture)
  void GetDateValues(DateTime td, Int32& year, Int32& month, Int32& day)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.IWrappedDictionary
Поля:
Свойства:
  object UnderlyingDictionary
Методы:
  object get_UnderlyingDictionary()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.DictionaryWrapper`2
Наследуется от: object
Поля:
  IDictionary _dictionary
  IDictionary`2<TKey, TValue> _genericDictionary
  object _syncRoot
Свойства:
  ICollection`1<TKey> Keys
  ICollection`1<TValue> Values
  TValue Item
  int Count
  bool IsReadOnly
  object System.Collections.IDictionary.Item
  bool System.Collections.IDictionary.IsFixedSize
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  object UnderlyingDictionary
Методы:
  void .ctor(IDictionary dictionary)
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  void Add(TKey key, TValue value)
  bool ContainsKey(TKey key)
  ICollection`1<TKey> get_Keys()
  bool Remove(TKey key)
  bool TryGetValue(TKey key, TValue& value)
  ICollection`1<TValue> get_Values()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  void Add(KeyValuePair`2<TKey, TValue> item)
  void Clear()
  bool Contains(KeyValuePair`2<TKey, TValue> item)
  void CopyTo(KeyValuePair`2[] array, int arrayIndex)
  int get_Count()
  bool get_IsReadOnly()
  bool Remove(KeyValuePair`2<TKey, TValue> item)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.IDictionary.Add(object key, object value)
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  bool System.Collections.IDictionary.Contains(object key)
  bool System.Collections.IDictionary.get_IsFixedSize()
  ICollection System.Collections.IDictionary.get_Keys()
  void Remove(object key)
  ICollection System.Collections.IDictionary.get_Values()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  object get_UnderlyingDictionary()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.EnumUtils
Наследуется от: object
Поля:
  ThreadSafeStore`2<Type, BidirectionalDictionary`2<string, string>> EnumMemberNamesPerType
Свойства:
Методы:
  BidirectionalDictionary`2<string, string> InitializeEnumType(Type type)
  IList`1<T> GetFlagsValues(T value)
  IList`1<EnumValue`1<ulong>> GetNamesAndValues()
  IList`1<EnumValue`1<TUnderlyingType>> GetNamesAndValues(Type enumType)
  IList`1<object> GetValues(Type enumType)
  IList`1<string> GetNames(Type enumType)
  object ParseEnumName(string enumText, bool isNullable, Type t)
  string ToEnumName(Type enumType, string enumText, bool camelCaseText)
  string ResolvedEnumName(BidirectionalDictionary`2<string, string> map, string enumText)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.EnumValue`1
Наследуется от: object
Поля:
  string _name
  T _value
Свойства:
  string Name
  T Value
Методы:
  string get_Name()
  T get_Value()
  void .ctor(string name, T value)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.BufferUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  Char[] RentBuffer(IArrayPool`1<char> bufferPool, int minSize)
  void ReturnBuffer(IArrayPool`1<char> bufferPool, Char[] buffer)
  Char[] EnsureBufferSize(IArrayPool`1<char> bufferPool, int size, Char[] buffer)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.JavaScriptUtils
Наследуется от: object
Поля:
  Boolean[] SingleQuoteCharEscapeFlags
  Boolean[] DoubleQuoteCharEscapeFlags
  Boolean[] HtmlCharEscapeFlags
  int UnicodeTextLength
  string EscapedUnicodeText
Свойства:
Методы:
  void .cctor()
  Boolean[] GetCharEscapeFlags(StringEscapeHandling stringEscapeHandling, char quoteChar)
  bool ShouldEscapeJavaScriptString(string s, Boolean[] charEscapeFlags)
  void WriteEscapedJavaScriptString(TextWriter writer, string s, char delimiter, bool appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, IArrayPool`1<char> bufferPool, Char[]& writeBuffer)
  string ToEscapedJavaScriptString(string value, char delimiter, bool appendDelimiters, StringEscapeHandling stringEscapeHandling)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringBuffer
Наследуется от: ValueType
Поля:
  Char[] _buffer
  int _position
Свойства:
  int Position
  bool IsEmpty
  Char[] InternalBuffer
Методы:
  int get_Position()
  void set_Position(int value)
  bool get_IsEmpty()
  void .ctor(IArrayPool`1<char> bufferPool, int initalSize)
  void .ctor(Char[] buffer)
  void Append(IArrayPool`1<char> bufferPool, char value)
  void Append(IArrayPool`1<char> bufferPool, Char[] buffer, int startIndex, int count)
  void Clear(IArrayPool`1<char> bufferPool)
  void EnsureSize(IArrayPool`1<char> bufferPool, int appendLength)
  string ToString()
  string ToString(int start, int length)
  Char[] get_InternalBuffer()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.CollectionUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsNullOrEmpty(ICollection`1<T> collection)
  void AddRange(IList`1<T> initial, IEnumerable`1<T> collection)
  void AddRange(IList`1<T> initial, IEnumerable collection)
  bool IsDictionaryType(Type type)
  ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType)
  ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType, Type constructorArgumentType)
  bool AddDistinct(IList`1<T> list, T value)
  bool AddDistinct(IList`1<T> list, T value, IEqualityComparer`1<T> comparer)
  bool ContainsValue(IEnumerable`1<TSource> source, TSource value, IEqualityComparer`1<TSource> comparer)
  bool AddRangeDistinct(IList`1<T> list, IEnumerable`1<T> values, IEqualityComparer`1<T> comparer)
  int IndexOf(IEnumerable`1<T> collection, Func`2<T, bool> predicate)
  bool Contains(List`1<T> list, T value, IEqualityComparer comparer)
  int IndexOfReference(List`1<T> list, T item)
  IList`1<int> GetDimensions(IList values, int dimensionsCount)
  void CopyFromJaggedToMultidimensionalArray(IList values, Array multidimensionalArray, Int32[] indices)
  object JaggedArrayGetValue(IList values, Int32[] indices)
  Array ToMultidimensionalArray(IList values, Type type, int rank)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.MathUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  int IntLength(ulong i)
  char IntToHex(int n)
  Nullable`1<int> Min(Nullable`1<int> val1, Nullable`1<int> val2)
  Nullable`1<int> Max(Nullable`1<int> val1, Nullable`1<int> val2)
  Nullable`1<double> Max(Nullable`1<double> val1, Nullable`1<double> val2)
  bool ApproxEquals(double d1, double d2)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.Creator`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  T Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  T EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.MiscellaneousUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ValueEquals(object objA, object objB)
  ArgumentOutOfRangeException CreateArgumentOutOfRangeException(string paramName, object actualValue, string message)
  string ToString(object value)
  int ByteArrayCompare(Byte[] a1, Byte[] a2)
  string GetPrefix(string qualifiedName)
  string GetLocalName(string qualifiedName)
  void GetQualifiedNameParts(string qualifiedName, String& prefix, String& localName)
  string FormatValueForPrint(object value)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionUtils
Наследуется от: object
Поля:
  Type[] EmptyTypes
Свойства:
Методы:
  void .cctor()
  bool IsVirtual(PropertyInfo propertyInfo)
  MethodInfo GetBaseDefinition(PropertyInfo propertyInfo)
  bool IsPublic(PropertyInfo property)
  Type GetObjectType(object v)
  string GetTypeName(Type t, FormatterAssemblyStyle assemblyFormat, SerializationBinder binder)
  string RemoveAssemblyDetails(string fullyQualifiedTypeName)
  bool HasDefaultConstructor(Type t, bool nonPublic)
  ConstructorInfo GetDefaultConstructor(Type t)
  ConstructorInfo GetDefaultConstructor(Type t, bool nonPublic)
  bool IsNullable(Type t)
  bool IsNullableType(Type t)
  Type EnsureNotNullableType(Type t)
  bool IsGenericDefinition(Type type, Type genericInterfaceDefinition)
  bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition)
  bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition, Type& implementingType)
  bool InheritsGenericDefinition(Type type, Type genericClassDefinition)
  bool InheritsGenericDefinition(Type type, Type genericClassDefinition, Type& implementingType)
  bool InheritsGenericDefinitionInternal(Type currentType, Type genericClassDefinition, Type& implementingType)
  Type GetCollectionItemType(Type type)
  void GetDictionaryKeyValueTypes(Type dictionaryType, Type& keyType, Type& valueType)
  Type GetMemberUnderlyingType(MemberInfo member)
  bool IsIndexedProperty(MemberInfo member)
  bool IsIndexedProperty(PropertyInfo property)
  object GetMemberValue(MemberInfo member, object target)
  void SetMemberValue(MemberInfo member, object target, object value)
  bool CanReadMemberValue(MemberInfo member, bool nonPublic)
  bool CanSetMemberValue(MemberInfo member, bool nonPublic, bool canSetReadOnly)
  List`1<MemberInfo> GetFieldsAndProperties(Type type, BindingFlags bindingAttr)
  bool IsOverridenGenericMember(MemberInfo memberInfo, BindingFlags bindingAttr)
  T GetAttribute(object attributeProvider)
  T GetAttribute(object attributeProvider, bool inherit)
  T[] GetAttributes(object attributeProvider, bool inherit)
  Attribute[] GetAttributes(object attributeProvider, Type attributeType, bool inherit)
  void SplitFullyQualifiedTypeName(string fullyQualifiedTypeName, String& typeName, String& assemblyName)
  Nullable`1<int> GetAssemblyDelimiterIndex(string fullyQualifiedTypeName)
  MemberInfo GetMemberInfoFromType(Type targetType, MemberInfo memberInfo)
  IEnumerable`1<FieldInfo> GetFields(Type targetType, BindingFlags bindingAttr)
  void GetChildPrivateFields(IList`1<MemberInfo> initialFields, Type targetType, BindingFlags bindingAttr)
  IEnumerable`1<PropertyInfo> GetProperties(Type targetType, BindingFlags bindingAttr)
  BindingFlags RemoveFlag(BindingFlags bindingAttr, BindingFlags flag)
  void GetChildPrivateProperties(IList`1<PropertyInfo> initialProperties, Type targetType, BindingFlags bindingAttr)
  bool IsMethodOverridden(Type currentType, Type methodDeclaringType, string method)
  object GetDefaultValue(Type type)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringUtils
Наследуется от: object
Поля:
  string CarriageReturnLineFeed
  string Empty
  char CarriageReturn
  char LineFeed
  char Tab
Свойства:
Методы:
  string FormatWith(string format, IFormatProvider provider, object arg0)
  string FormatWith(string format, IFormatProvider provider, object arg0, object arg1)
  string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2)
  string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2, object arg3)
  string FormatWith(string format, IFormatProvider provider, Object[] args)
  bool IsWhiteSpace(string s)
  string NullEmptyString(string s)
  StringWriter CreateStringWriter(int capacity)
  Nullable`1<int> GetLength(string value)
  void ToCharAsUnicode(char c, Char[] buffer)
  TSource ForgivingCaseSensitiveFind(IEnumerable`1<TSource> source, Func`2<TSource, string> valueSelector, string testValue)
  string ToCamelCase(string s)
  bool IsHighSurrogate(char c)
  bool IsLowSurrogate(char c)
  bool StartsWith(string source, char value)
  bool EndsWith(string source, char value)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.TypeExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  MethodInfo Method(Delegate d)
  MemberTypes MemberType(MemberInfo memberInfo)
  bool ContainsGenericParameters(Type type)
  bool IsInterface(Type type)
  bool IsGenericType(Type type)
  bool IsGenericTypeDefinition(Type type)
  Type BaseType(Type type)
  Assembly Assembly(Type type)
  bool IsEnum(Type type)
  bool IsClass(Type type)
  bool IsSealed(Type type)
  bool IsAbstract(Type type)
  bool IsVisible(Type type)
  bool IsValueType(Type type)
  bool AssignableToTypeName(Type type, string fullTypeName, Type& match)
  bool AssignableToTypeName(Type type, string fullTypeName)
  bool ImplementInterface(Type type, Type interfaceType)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ValidationUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  void ArgumentNotNull(object value, string parameterName)
--------------------------------------------------
Класс: Newtonsoft.Json.Shims.PreserveAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DiagnosticsTraceWriter
Наследуется от: object
Поля:
  TraceLevel <LevelFilter>k__BackingField
Свойства:
  TraceLevel LevelFilter
Методы:
  TraceLevel get_LevelFilter()
  void set_LevelFilter(TraceLevel value)
  TraceEventType GetTraceEventType(TraceLevel level)
  void Trace(TraceLevel level, string message, Exception ex)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IAttributeProvider
Поля:
Свойства:
Методы:
  IList`1<Attribute> GetAttributes(bool inherit)
  IList`1<Attribute> GetAttributes(Type attributeType, bool inherit)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ITraceWriter
Поля:
Свойства:
  TraceLevel LevelFilter
Методы:
  TraceLevel get_LevelFilter()
  void Trace(TraceLevel level, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonContainerContract
Наследуется от: JsonContract
Поля:
  JsonContract _itemContract
  JsonContract _finalItemContract
  JsonConverter <ItemConverter>k__BackingField
  Nullable`1<bool> <ItemIsReference>k__BackingField
  Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
  Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField
Свойства:
  JsonContract ItemContract
  JsonContract FinalItemContract
  JsonConverter ItemConverter
  Nullable`1<bool> ItemIsReference
  Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling
  Nullable`1<TypeNameHandling> ItemTypeNameHandling
Методы:
  JsonContract get_ItemContract()
  void set_ItemContract(JsonContract value)
  JsonContract get_FinalItemContract()
  JsonConverter get_ItemConverter()
  void set_ItemConverter(JsonConverter value)
  Nullable`1<bool> get_ItemIsReference()
  void set_ItemIsReference(Nullable`1<bool> value)
  Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value)
  Nullable`1<TypeNameHandling> get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value)
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.MemoryTraceWriter
Наследуется от: object
Поля:
  Queue`1<string> _traceMessages
  TraceLevel <LevelFilter>k__BackingField
Свойства:
  TraceLevel LevelFilter
Методы:
  TraceLevel get_LevelFilter()
  void set_LevelFilter(TraceLevel value)
  void .ctor()
  void Trace(TraceLevel level, string message, Exception ex)
  IEnumerable`1<string> GetTraceMessages()
  string ToString()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ReflectionAttributeProvider
Наследуется от: object
Поля:
  object _attributeProvider
Свойства:
Методы:
  void .ctor(object attributeProvider)
  IList`1<Attribute> GetAttributes(bool inherit)
  IList`1<Attribute> GetAttributes(Type attributeType, bool inherit)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.TraceJsonReader
Наследуется от: JsonReader
Поля:
  JsonReader _innerReader
  JsonTextWriter _textWriter
  StringWriter _sw
Свойства:
  int Depth
  string Path
  char QuoteChar
  JsonToken TokenType
  object Value
  Type ValueType
  int Newtonsoft.Json.IJsonLineInfo.LineNumber
  int Newtonsoft.Json.IJsonLineInfo.LinePosition
Методы:
  void .ctor(JsonReader innerReader)
  string GetDeserializedJsonMessage()
  bool Read()
  Nullable`1<int> ReadAsInt32()
  string ReadAsString()
  Byte[] ReadAsBytes()
  Nullable`1<decimal> ReadAsDecimal()
  Nullable`1<double> ReadAsDouble()
  Nullable`1<bool> ReadAsBoolean()
  Nullable`1<DateTime> ReadAsDateTime()
  Nullable`1<DateTimeOffset> ReadAsDateTimeOffset()
  int get_Depth()
  string get_Path()
  char get_QuoteChar()
  void set_QuoteChar(char value)
  JsonToken get_TokenType()
  object get_Value()
  Type get_ValueType()
  void Close()
  bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  int Newtonsoft.Json.IJsonLineInfo.get_LineNumber()
  int Newtonsoft.Json.IJsonLineInfo.get_LinePosition()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.TraceJsonWriter
Наследуется от: JsonWriter
Поля:
  JsonWriter _innerWriter
  JsonTextWriter _textWriter
  StringWriter _sw
Свойства:
Методы:
  void .ctor(JsonWriter innerWriter)
  string GetSerializedJsonMessage()
  void WriteValue(decimal value)
  void WriteValue(bool value)
  void WriteValue(byte value)
  void WriteValue(Nullable`1<byte> value)
  void WriteValue(char value)
  void WriteValue(Byte[] value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(double value)
  void WriteUndefined()
  void WriteNull()
  void WriteValue(float value)
  void WriteValue(Guid value)
  void WriteValue(int value)
  void WriteValue(long value)
  void WriteValue(object value)
  void WriteValue(sbyte value)
  void WriteValue(short value)
  void WriteValue(string value)
  void WriteValue(TimeSpan value)
  void WriteValue(UInt32 value)
  void WriteValue(ulong value)
  void WriteValue(Uri value)
  void WriteValue(ushort value)
  void WriteWhitespace(string ws)
  void WriteComment(string text)
  void WriteStartArray()
  void WriteEndArray()
  void WriteStartConstructor(string name)
  void WriteEndConstructor()
  void WritePropertyName(string name)
  void WritePropertyName(string name, bool escape)
  void WriteStartObject()
  void WriteEndObject()
  void WriteRawValue(string json)
  void WriteRaw(string json)
  void Close()
  void Flush()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonFormatterConverter
Наследуется от: object
Поля:
  JsonSerializerInternalReader _reader
  JsonISerializableContract _contract
  JsonProperty _member
Свойства:
Методы:
  void .ctor(JsonSerializerInternalReader reader, JsonISerializableContract contract, JsonProperty member)
  T GetTokenValue(object value)
  object Convert(object value, Type type)
  object Convert(object value, TypeCode typeCode)
  bool ToBoolean(object value)
  byte ToByte(object value)
  char ToChar(object value)
  DateTime ToDateTime(object value)
  decimal ToDecimal(object value)
  double ToDouble(object value)
  short ToInt16(object value)
  int ToInt32(object value)
  long ToInt64(object value)
  sbyte ToSByte(object value)
  float ToSingle(object value)
  string ToString(object value)
  ushort ToUInt16(object value)
  UInt32 ToUInt32(object value)
  ulong ToUInt64(object value)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonISerializableContract
Наследуется от: JsonContainerContract
Поля:
  ObjectConstructor`1<object> <ISerializableCreator>k__BackingField
Свойства:
  ObjectConstructor`1<object> ISerializableCreator
Методы:
  ObjectConstructor`1<object> get_ISerializableCreator()
  void set_ISerializableCreator(ObjectConstructor`1<object> value)
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonLinqContract
Наследуется от: JsonContract
Поля:
Свойства:
Методы:
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonPrimitiveContract
Наследуется от: JsonContract
Поля:
  PrimitiveTypeCode <TypeCode>k__BackingField
  Dictionary`2<Type, ReadType> ReadTypeMap
Свойства:
  PrimitiveTypeCode TypeCode
Методы:
  PrimitiveTypeCode get_TypeCode()
  void set_TypeCode(PrimitiveTypeCode value)
  void .ctor(Type underlyingType)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ErrorEventArgs
Наследуется от: EventArgs
Поля:
  object <CurrentObject>k__BackingField
  ErrorContext <ErrorContext>k__BackingField
Свойства:
  object CurrentObject
  ErrorContext ErrorContext
Методы:
  object get_CurrentObject()
  void set_CurrentObject(object value)
  ErrorContext get_ErrorContext()
  void set_ErrorContext(ErrorContext value)
  void .ctor(object currentObject, ErrorContext errorContext)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultReferenceResolver
Наследуется от: object
Поля:
  int _referenceCount
Свойства:
Методы:
  BidirectionalDictionary`2<string, object> GetMappings(object context)
  object ResolveReference(object context, string reference)
  string GetReference(object context, object value)
  void AddReference(object context, string reference, object value)
  bool IsReferenced(object context, object value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver
Наследуется от: DefaultContractResolver
Поля:
Свойства:
Методы:
  void .ctor()
  string ResolvePropertyName(string propertyName)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ResolverContractKey
Наследуется от: ValueType
Поля:
  Type _resolverType
  Type _contractType
Свойства:
Методы:
  void .ctor(Type resolverType, Type contractType)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(ResolverContractKey other)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultContractResolverState
Наследуется от: object
Поля:
  Dictionary`2<ResolverContractKey, JsonContract> ContractCache
  PropertyNameTable NameTable
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultContractResolver
Наследуется от: object
Поля:
  IContractResolver _instance
  JsonConverter[] BuiltInConverters
  object TypeContractCacheLock
  DefaultContractResolverState _sharedState
  DefaultContractResolverState _instanceState
  bool _sharedCache
  BindingFlags <DefaultMembersSearchFlags>k__BackingField
  bool <SerializeCompilerGeneratedMembers>k__BackingField
  bool <IgnoreSerializableInterface>k__BackingField
  bool <IgnoreSerializableAttribute>k__BackingField
Свойства:
  IContractResolver Instance
  bool DynamicCodeGeneration
  BindingFlags DefaultMembersSearchFlags
  bool SerializeCompilerGeneratedMembers
  bool IgnoreSerializableInterface
  bool IgnoreSerializableAttribute
Методы:
  IContractResolver get_Instance()
  bool get_DynamicCodeGeneration()
  BindingFlags get_DefaultMembersSearchFlags()
  void set_DefaultMembersSearchFlags(BindingFlags value)
  bool get_SerializeCompilerGeneratedMembers()
  void set_SerializeCompilerGeneratedMembers(bool value)
  bool get_IgnoreSerializableInterface()
  void set_IgnoreSerializableInterface(bool value)
  bool get_IgnoreSerializableAttribute()
  void set_IgnoreSerializableAttribute(bool value)
  void .ctor()
  void .ctor(bool shareCache)
  DefaultContractResolverState GetState()
  JsonContract ResolveContract(Type type)
  List`1<MemberInfo> GetSerializableMembers(Type objectType)
  bool ShouldSerializeEntityMember(MemberInfo memberInfo)
  JsonObjectContract CreateObjectContract(Type objectType)
  MemberInfo GetExtensionDataMemberForType(Type type)
  void SetExtensionDataDelegates(JsonObjectContract contract, MemberInfo member)
  ConstructorInfo GetAttributeConstructor(Type objectType)
  ConstructorInfo GetParameterizedConstructor(Type objectType)
  IList`1<JsonProperty> CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties)
  JsonProperty CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo)
  JsonConverter ResolveContractConverter(Type objectType)
  Func`1<object> GetDefaultCreator(Type createdType)
  void InitializeContract(JsonContract contract)
  void ResolveCallbackMethods(JsonContract contract, Type t)
  void GetCallbackMethodsForType(Type type, List`1& onSerializing, List`1& onSerialized, List`1& onDeserializing, List`1& onDeserialized, List`1& onError)
  bool ShouldSkipDeserialized(Type t)
  bool ShouldSkipSerializing(Type t)
  List`1<Type> GetClassHierarchyForType(Type type)
  JsonDictionaryContract CreateDictionaryContract(Type objectType)
  JsonArrayContract CreateArrayContract(Type objectType)
  JsonPrimitiveContract CreatePrimitiveContract(Type objectType)
  JsonLinqContract CreateLinqContract(Type objectType)
  JsonISerializableContract CreateISerializableContract(Type objectType)
  JsonStringContract CreateStringContract(Type objectType)
  JsonContract CreateContract(Type objectType)
  bool IsJsonPrimitiveType(Type t)
  bool IsIConvertible(Type t)
  bool CanConvertToString(Type type)
  bool IsValidCallback(MethodInfo method, ParameterInfo[] parameters, Type attributeType, MethodInfo currentCallback, Type& prevAttributeType)
  string GetClrTypeFullName(Type type)
  IList`1<JsonProperty> CreateProperties(Type type, MemberSerialization memberSerialization)
  IValueProvider CreateMemberValueProvider(MemberInfo member)
  JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)
  void SetPropertySettingsFromAttributes(JsonProperty property, object attributeProvider, string name, Type declaringType, MemberSerialization memberSerialization, Boolean& allowNonPublicAccess)
  Predicate`1<object> CreateShouldSerializeTest(MemberInfo member)
  void SetIsSpecifiedActions(JsonProperty property, MemberInfo member, bool allowNonPublicAccess)
  string ResolvePropertyName(string propertyName)
  string ResolveDictionaryKey(string dictionaryKey)
  string GetResolvedPropertyName(string propertyName)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultSerializationBinder
Наследуется от: SerializationBinder
Поля:
  DefaultSerializationBinder Instance
  ThreadSafeStore`2<TypeNameKey, Type> _typeCache
Свойства:
Методы:
  Type GetTypeFromTypeNameKey(TypeNameKey typeNameKey)
  Type BindToType(string assemblyName, string typeName)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ErrorContext
Наследуется от: object
Поля:
  bool <Traced>k__BackingField
  Exception <Error>k__BackingField
  object <OriginalObject>k__BackingField
  object <Member>k__BackingField
  string <Path>k__BackingField
  bool <Handled>k__BackingField
Свойства:
  bool Traced
  Exception Error
  object OriginalObject
  object Member
  string Path
  bool Handled
Методы:
  void .ctor(object originalObject, object member, string path, Exception error)
  bool get_Traced()
  void set_Traced(bool value)
  Exception get_Error()
  void set_Error(Exception value)
  object get_OriginalObject()
  void set_OriginalObject(object value)
  object get_Member()
  void set_Member(object value)
  string get_Path()
  void set_Path(string value)
  bool get_Handled()
  void set_Handled(bool value)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IContractResolver
Поля:
Свойства:
Методы:
  JsonContract ResolveContract(Type type)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IValueProvider
Поля:
Свойства:
Методы:
  void SetValue(object target, object value)
  object GetValue(object target)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonArrayContract
Наследуется от: JsonContainerContract
Поля:
  Type <CollectionItemType>k__BackingField
  bool <IsMultidimensionalArray>k__BackingField
  Type _genericCollectionDefinitionType
  Type _genericWrapperType
  ObjectConstructor`1<object> _genericWrapperCreator
  Func`1<object> _genericTemporaryCollectionCreator
  bool <IsArray>k__BackingField
  bool <ShouldCreateWrapper>k__BackingField
  bool <CanDeserialize>k__BackingField
  ConstructorInfo _parameterizedConstructor
  ObjectConstructor`1<object> _parameterizedCreator
  ObjectConstructor`1<object> _overrideCreator
  bool <HasParameterizedCreator>k__BackingField
Свойства:
  Type CollectionItemType
  bool IsMultidimensionalArray
  bool IsArray
  bool ShouldCreateWrapper
  bool CanDeserialize
  ObjectConstructor`1<object> ParameterizedCreator
  ObjectConstructor`1<object> OverrideCreator
  bool HasParameterizedCreator
  bool HasParameterizedCreatorInternal
Методы:
  Type get_CollectionItemType()
  void set_CollectionItemType(Type value)
  bool get_IsMultidimensionalArray()
  void set_IsMultidimensionalArray(bool value)
  bool get_IsArray()
  void set_IsArray(bool value)
  bool get_ShouldCreateWrapper()
  void set_ShouldCreateWrapper(bool value)
  bool get_CanDeserialize()
  void set_CanDeserialize(bool value)
  ObjectConstructor`1<object> get_ParameterizedCreator()
  ObjectConstructor`1<object> get_OverrideCreator()
  void set_OverrideCreator(ObjectConstructor`1<object> value)
  bool get_HasParameterizedCreator()
  void set_HasParameterizedCreator(bool value)
  bool get_HasParameterizedCreatorInternal()
  void .ctor(Type underlyingType)
  IWrappedCollection CreateWrapper(object list)
  IList CreateTemporaryCollection()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonContractType
Наследуется от: Enum
Поля:
  int value__
  JsonContractType None
  JsonContractType Object
  JsonContractType Array
  JsonContractType Primitive
  JsonContractType String
  JsonContractType Dictionary
  JsonContractType Dynamic
  JsonContractType Serializable
  JsonContractType Linq
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.SerializationCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object o, StreamingContext context)
  IAsyncResult BeginInvoke(object o, StreamingContext context, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.SerializationErrorCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object o, StreamingContext context, ErrorContext errorContext)
  IAsyncResult BeginInvoke(object o, StreamingContext context, ErrorContext errorContext, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ExtensionDataSetter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object o, string key, object value)
  IAsyncResult BeginInvoke(object o, string key, object value, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ExtensionDataGetter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  IEnumerable`1<KeyValuePair`2<object, object>> Invoke(object o)
  IAsyncResult BeginInvoke(object o, AsyncCallback callback, object object)
  IEnumerable`1<KeyValuePair`2<object, object>> EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonContract
Наследуется от: object
Поля:
  bool IsNullable
  bool IsConvertable
  bool IsEnum
  Type NonNullableUnderlyingType
  ReadType InternalReadType
  JsonContractType ContractType
  bool IsReadOnlyOrFixedSize
  bool IsSealed
  bool IsInstantiable
  List`1<SerializationCallback> _onDeserializedCallbacks
  IList`1<SerializationCallback> _onDeserializingCallbacks
  IList`1<SerializationCallback> _onSerializedCallbacks
  IList`1<SerializationCallback> _onSerializingCallbacks
  IList`1<SerializationErrorCallback> _onErrorCallbacks
  Type _createdType
  Type <UnderlyingType>k__BackingField
  Nullable`1<bool> <IsReference>k__BackingField
  JsonConverter <Converter>k__BackingField
  JsonConverter <InternalConverter>k__BackingField
  Func`1<object> <DefaultCreator>k__BackingField
  bool <DefaultCreatorNonPublic>k__BackingField
Свойства:
  Type UnderlyingType
  Type CreatedType
  Nullable`1<bool> IsReference
  JsonConverter Converter
  JsonConverter InternalConverter
  IList`1<SerializationCallback> OnDeserializedCallbacks
  IList`1<SerializationCallback> OnDeserializingCallbacks
  IList`1<SerializationCallback> OnSerializedCallbacks
  IList`1<SerializationCallback> OnSerializingCallbacks
  IList`1<SerializationErrorCallback> OnErrorCallbacks
  MethodInfo OnDeserialized
  MethodInfo OnDeserializing
  MethodInfo OnSerialized
  MethodInfo OnSerializing
  MethodInfo OnError
  Func`1<object> DefaultCreator
  bool DefaultCreatorNonPublic
Методы:
  Type get_UnderlyingType()
  void set_UnderlyingType(Type value)
  Type get_CreatedType()
  void set_CreatedType(Type value)
  Nullable`1<bool> get_IsReference()
  void set_IsReference(Nullable`1<bool> value)
  JsonConverter get_Converter()
  void set_Converter(JsonConverter value)
  JsonConverter get_InternalConverter()
  void set_InternalConverter(JsonConverter value)
  IList`1<SerializationCallback> get_OnDeserializedCallbacks()
  IList`1<SerializationCallback> get_OnDeserializingCallbacks()
  IList`1<SerializationCallback> get_OnSerializedCallbacks()
  IList`1<SerializationCallback> get_OnSerializingCallbacks()
  IList`1<SerializationErrorCallback> get_OnErrorCallbacks()
  MethodInfo get_OnDeserialized()
  void set_OnDeserialized(MethodInfo value)
  MethodInfo get_OnDeserializing()
  void set_OnDeserializing(MethodInfo value)
  MethodInfo get_OnSerialized()
  void set_OnSerialized(MethodInfo value)
  MethodInfo get_OnSerializing()
  void set_OnSerializing(MethodInfo value)
  MethodInfo get_OnError()
  void set_OnError(MethodInfo value)
  Func`1<object> get_DefaultCreator()
  void set_DefaultCreator(Func`1<object> value)
  bool get_DefaultCreatorNonPublic()
  void set_DefaultCreatorNonPublic(bool value)
  void .ctor(Type underlyingType)
  void InvokeOnSerializing(object o, StreamingContext context)
  void InvokeOnSerialized(object o, StreamingContext context)
  void InvokeOnDeserializing(object o, StreamingContext context)
  void InvokeOnDeserialized(object o, StreamingContext context)
  void InvokeOnError(object o, StreamingContext context, ErrorContext errorContext)
  SerializationCallback CreateSerializationCallback(MethodInfo callbackMethodInfo)
  SerializationErrorCallback CreateSerializationErrorCallback(MethodInfo callbackMethodInfo)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonDictionaryContract
Наследуется от: JsonContainerContract
Поля:
  Func`2<string, string> <DictionaryKeyResolver>k__BackingField
  Type <DictionaryKeyType>k__BackingField
  Type <DictionaryValueType>k__BackingField
  JsonContract <KeyContract>k__BackingField
  Type _genericCollectionDefinitionType
  Type _genericWrapperType
  ObjectConstructor`1<object> _genericWrapperCreator
  Func`1<object> _genericTemporaryDictionaryCreator
  bool <ShouldCreateWrapper>k__BackingField
  ConstructorInfo _parameterizedConstructor
  ObjectConstructor`1<object> _overrideCreator
  ObjectConstructor`1<object> _parameterizedCreator
  bool <HasParameterizedCreator>k__BackingField
Свойства:
  Func`2<string, string> PropertyNameResolver
  Func`2<string, string> DictionaryKeyResolver
  Type DictionaryKeyType
  Type DictionaryValueType
  JsonContract KeyContract
  bool ShouldCreateWrapper
  ObjectConstructor`1<object> ParameterizedCreator
  ObjectConstructor`1<object> OverrideCreator
  bool HasParameterizedCreator
  bool HasParameterizedCreatorInternal
Методы:
  Func`2<string, string> get_PropertyNameResolver()
  void set_PropertyNameResolver(Func`2<string, string> value)
  Func`2<string, string> get_DictionaryKeyResolver()
  void set_DictionaryKeyResolver(Func`2<string, string> value)
  Type get_DictionaryKeyType()
  void set_DictionaryKeyType(Type value)
  Type get_DictionaryValueType()
  void set_DictionaryValueType(Type value)
  JsonContract get_KeyContract()
  void set_KeyContract(JsonContract value)
  bool get_ShouldCreateWrapper()
  void set_ShouldCreateWrapper(bool value)
  ObjectConstructor`1<object> get_ParameterizedCreator()
  ObjectConstructor`1<object> get_OverrideCreator()
  void set_OverrideCreator(ObjectConstructor`1<object> value)
  bool get_HasParameterizedCreator()
  void set_HasParameterizedCreator(bool value)
  bool get_HasParameterizedCreatorInternal()
  void .ctor(Type underlyingType)
  IWrappedDictionary CreateWrapper(object dictionary)
  IDictionary CreateTemporaryDictionary()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonProperty
Наследуется от: object
Поля:
  Nullable`1<Required> _required
  bool _hasExplicitDefaultValue
  object _defaultValue
  bool _hasGeneratedDefaultValue
  string _propertyName
  bool _skipPropertyNameEscape
  Type _propertyType
  JsonContract <PropertyContract>k__BackingField
  Type <DeclaringType>k__BackingField
  Nullable`1<int> <Order>k__BackingField
  string <UnderlyingName>k__BackingField
  IValueProvider <ValueProvider>k__BackingField
  IAttributeProvider <AttributeProvider>k__BackingField
  JsonConverter <Converter>k__BackingField
  JsonConverter <MemberConverter>k__BackingField
  bool <Ignored>k__BackingField
  bool <Readable>k__BackingField
  bool <Writable>k__BackingField
  bool <HasMemberAttribute>k__BackingField
  Nullable`1<bool> <IsReference>k__BackingField
  Nullable`1<NullValueHandling> <NullValueHandling>k__BackingField
  Nullable`1<DefaultValueHandling> <DefaultValueHandling>k__BackingField
  Nullable`1<ReferenceLoopHandling> <ReferenceLoopHandling>k__BackingField
  Nullable`1<ObjectCreationHandling> <ObjectCreationHandling>k__BackingField
  Nullable`1<TypeNameHandling> <TypeNameHandling>k__BackingField
  Predicate`1<object> <ShouldSerialize>k__BackingField
  Predicate`1<object> <ShouldDeserialize>k__BackingField
  Predicate`1<object> <GetIsSpecified>k__BackingField
  Action`2<object, object> <SetIsSpecified>k__BackingField
  JsonConverter <ItemConverter>k__BackingField
  Nullable`1<bool> <ItemIsReference>k__BackingField
  Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField
  Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
Свойства:
  JsonContract PropertyContract
  string PropertyName
  Type DeclaringType
  Nullable`1<int> Order
  string UnderlyingName
  IValueProvider ValueProvider
  IAttributeProvider AttributeProvider
  Type PropertyType
  JsonConverter Converter
  JsonConverter MemberConverter
  bool Ignored
  bool Readable
  bool Writable
  bool HasMemberAttribute
  object DefaultValue
  Required Required
  Nullable`1<bool> IsReference
  Nullable`1<NullValueHandling> NullValueHandling
  Nullable`1<DefaultValueHandling> DefaultValueHandling
  Nullable`1<ReferenceLoopHandling> ReferenceLoopHandling
  Nullable`1<ObjectCreationHandling> ObjectCreationHandling
  Nullable`1<TypeNameHandling> TypeNameHandling
  Predicate`1<object> ShouldSerialize
  Predicate`1<object> ShouldDeserialize
  Predicate`1<object> GetIsSpecified
  Action`2<object, object> SetIsSpecified
  JsonConverter ItemConverter
  Nullable`1<bool> ItemIsReference
  Nullable`1<TypeNameHandling> ItemTypeNameHandling
  Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling
Методы:
  JsonContract get_PropertyContract()
  void set_PropertyContract(JsonContract value)
  string get_PropertyName()
  void set_PropertyName(string value)
  Type get_DeclaringType()
  void set_DeclaringType(Type value)
  Nullable`1<int> get_Order()
  void set_Order(Nullable`1<int> value)
  string get_UnderlyingName()
  void set_UnderlyingName(string value)
  IValueProvider get_ValueProvider()
  void set_ValueProvider(IValueProvider value)
  IAttributeProvider get_AttributeProvider()
  void set_AttributeProvider(IAttributeProvider value)
  Type get_PropertyType()
  void set_PropertyType(Type value)
  JsonConverter get_Converter()
  void set_Converter(JsonConverter value)
  JsonConverter get_MemberConverter()
  void set_MemberConverter(JsonConverter value)
  bool get_Ignored()
  void set_Ignored(bool value)
  bool get_Readable()
  void set_Readable(bool value)
  bool get_Writable()
  void set_Writable(bool value)
  bool get_HasMemberAttribute()
  void set_HasMemberAttribute(bool value)
  object get_DefaultValue()
  void set_DefaultValue(object value)
  object GetResolvedDefaultValue()
  Required get_Required()
  void set_Required(Required value)
  Nullable`1<bool> get_IsReference()
  void set_IsReference(Nullable`1<bool> value)
  Nullable`1<NullValueHandling> get_NullValueHandling()
  void set_NullValueHandling(Nullable`1<NullValueHandling> value)
  Nullable`1<DefaultValueHandling> get_DefaultValueHandling()
  void set_DefaultValueHandling(Nullable`1<DefaultValueHandling> value)
  Nullable`1<ReferenceLoopHandling> get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value)
  Nullable`1<ObjectCreationHandling> get_ObjectCreationHandling()
  void set_ObjectCreationHandling(Nullable`1<ObjectCreationHandling> value)
  Nullable`1<TypeNameHandling> get_TypeNameHandling()
  void set_TypeNameHandling(Nullable`1<TypeNameHandling> value)
  Predicate`1<object> get_ShouldSerialize()
  void set_ShouldSerialize(Predicate`1<object> value)
  Predicate`1<object> get_ShouldDeserialize()
  void set_ShouldDeserialize(Predicate`1<object> value)
  Predicate`1<object> get_GetIsSpecified()
  void set_GetIsSpecified(Predicate`1<object> value)
  Action`2<object, object> get_SetIsSpecified()
  void set_SetIsSpecified(Action`2<object, object> value)
  string ToString()
  JsonConverter get_ItemConverter()
  void set_ItemConverter(JsonConverter value)
  Nullable`1<bool> get_ItemIsReference()
  void set_ItemIsReference(Nullable`1<bool> value)
  Nullable`1<TypeNameHandling> get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value)
  Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value)
  void WritePropertyName(JsonWriter writer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonPropertyCollection
Наследуется от: KeyedCollection`2<string, JsonProperty>
Поля:
  Type _type
  List`1<JsonProperty> _list
Свойства:
Методы:
  void .ctor(Type type)
  string GetKeyForItem(JsonProperty item)
  void AddProperty(JsonProperty property)
  JsonProperty GetClosestMatchProperty(string propertyName)
  bool TryGetValue(string key, JsonProperty& item)
  JsonProperty GetProperty(string propertyName, StringComparison comparisonType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IReferenceResolver
Поля:
Свойства:
Методы:
  object ResolveReference(object context, string reference)
  string GetReference(object context, object value)
  bool IsReferenced(object context, object value)
  void AddReference(object context, string reference, object value)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonObjectContract
Наследуется от: JsonContainerContract
Поля:
  MemberSerialization <MemberSerialization>k__BackingField
  Nullable`1<Required> <ItemRequired>k__BackingField
  JsonPropertyCollection <Properties>k__BackingField
  ExtensionDataSetter <ExtensionDataSetter>k__BackingField
  ExtensionDataGetter <ExtensionDataGetter>k__BackingField
  bool ExtensionDataIsJToken
  Nullable`1<bool> _hasRequiredOrDefaultValueProperties
  ConstructorInfo _parametrizedConstructor
  ConstructorInfo _overrideConstructor
  ObjectConstructor`1<object> _overrideCreator
  ObjectConstructor`1<object> _parameterizedCreator
  JsonPropertyCollection _creatorParameters
  Type _extensionDataValueType
Свойства:
  MemberSerialization MemberSerialization
  Nullable`1<Required> ItemRequired
  JsonPropertyCollection Properties
  JsonPropertyCollection ConstructorParameters
  JsonPropertyCollection CreatorParameters
  ConstructorInfo OverrideConstructor
  ConstructorInfo ParametrizedConstructor
  ObjectConstructor`1<object> OverrideCreator
  ObjectConstructor`1<object> ParameterizedCreator
  ExtensionDataSetter ExtensionDataSetter
  ExtensionDataGetter ExtensionDataGetter
  Type ExtensionDataValueType
  bool HasRequiredOrDefaultValueProperties
Методы:
  MemberSerialization get_MemberSerialization()
  void set_MemberSerialization(MemberSerialization value)
  Nullable`1<Required> get_ItemRequired()
  void set_ItemRequired(Nullable`1<Required> value)
  JsonPropertyCollection get_Properties()
  void set_Properties(JsonPropertyCollection value)
  JsonPropertyCollection get_ConstructorParameters()
  JsonPropertyCollection get_CreatorParameters()
  ConstructorInfo get_OverrideConstructor()
  void set_OverrideConstructor(ConstructorInfo value)
  ConstructorInfo get_ParametrizedConstructor()
  void set_ParametrizedConstructor(ConstructorInfo value)
  ObjectConstructor`1<object> get_OverrideCreator()
  void set_OverrideCreator(ObjectConstructor`1<object> value)
  ObjectConstructor`1<object> get_ParameterizedCreator()
  ExtensionDataSetter get_ExtensionDataSetter()
  void set_ExtensionDataSetter(ExtensionDataSetter value)
  ExtensionDataGetter get_ExtensionDataGetter()
  void set_ExtensionDataGetter(ExtensionDataGetter value)
  Type get_ExtensionDataValueType()
  void set_ExtensionDataValueType(Type value)
  bool get_HasRequiredOrDefaultValueProperties()
  void .ctor(Type underlyingType)
  object GetUninitializedObject()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerInternalBase
Наследуется от: object
Поля:
  ErrorContext _currentErrorContext
  BidirectionalDictionary`2<string, object> _mappings
  JsonSerializer Serializer
  ITraceWriter TraceWriter
  JsonSerializerProxy InternalSerializer
Свойства:
  BidirectionalDictionary`2<string, object> DefaultReferenceMappings
Методы:
  void .ctor(JsonSerializer serializer)
  BidirectionalDictionary`2<string, object> get_DefaultReferenceMappings()
  ErrorContext GetErrorContext(object currentObject, object member, string path, Exception error)
  void ClearErrorContext()
  bool IsErrorHandled(object currentObject, JsonContract contract, object keyValue, IJsonLineInfo lineInfo, string path, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerInternalReader
Наследуется от: JsonSerializerInternalBase
Поля:
Свойства:
Методы:
  void .ctor(JsonSerializer serializer)
  void Populate(JsonReader reader, object target)
  JsonContract GetContractSafe(Type type)
  object Deserialize(JsonReader reader, Type objectType, bool checkAdditionalContent)
  JsonSerializerProxy GetInternalSerializer()
  JToken CreateJToken(JsonReader reader, JsonContract contract)
  JToken CreateJObject(JsonReader reader)
  object CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue)
  bool CoerceEmptyStringToNull(Type objectType, JsonContract contract, string s)
  string GetExpectedDescription(JsonContract contract)
  JsonConverter GetConverter(JsonContract contract, JsonConverter memberConverter, JsonContainerContract containerContract, JsonProperty containerProperty)
  object CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue)
  bool ReadMetadataPropertiesToken(JTokenReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id)
  bool ReadMetadataProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id)
  void ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, string qualifiedTypeName)
  JsonArrayContract EnsureArrayContract(JsonReader reader, Type objectType, JsonContract contract)
  object CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, object existingValue, string id)
  bool HasNoDefinedType(JsonContract contract)
  object EnsureType(JsonReader reader, object value, CultureInfo culture, JsonContract contract, Type targetType)
  bool SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target)
  bool CalculatePropertyDetails(JsonProperty property, JsonConverter& propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target, Boolean& useExistingValue, Object& currentValue, JsonContract& propertyContract, Boolean& gottenCurrentValue)
  void AddReference(JsonReader reader, string id, object value)
  bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag)
  bool ShouldSetPropertyValue(JsonProperty property, object value)
  IList CreateNewList(JsonReader reader, JsonArrayContract contract, Boolean& createdFromNonDefaultCreator)
  IDictionary CreateNewDictionary(JsonReader reader, JsonDictionaryContract contract, Boolean& createdFromNonDefaultCreator)
  void OnDeserializing(JsonReader reader, JsonContract contract, object value)
  void OnDeserialized(JsonReader reader, JsonContract contract, object value)
  object PopulateDictionary(IDictionary dictionary, JsonReader reader, JsonDictionaryContract contract, JsonProperty containerProperty, string id)
  object PopulateMultidimensionalArray(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id)
  void ThrowUnexpectedEndException(JsonReader reader, JsonContract contract, object currentObject, string message)
  object PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id)
  object CreateISerializable(JsonReader reader, JsonISerializableContract contract, JsonProperty member, string id)
  object CreateISerializableItem(JToken token, Type type, JsonISerializableContract contract, JsonProperty member)
  object CreateObjectUsingCreatorWithParameters(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ObjectConstructor`1<object> creator, string id)
  object DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, object existingValue)
  List`1<CreatorPropertyContext> ResolvePropertyAndCreatorValues(JsonObjectContract contract, JsonProperty containerProperty, JsonReader reader, Type objectType)
  bool ReadForType(JsonReader reader, JsonContract contract, bool hasConverter)
  object CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, string id, Boolean& createdFromNonDefaultCreator)
  object PopulateObject(object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, string id)
  bool ShouldDeserialize(JsonReader reader, JsonProperty property, object target)
  bool CheckPropertyName(JsonReader reader, string memberName)
  void SetExtensionData(JsonObjectContract contract, JsonProperty member, JsonReader reader, string memberName, object o)
  object ReadExtensionDataValue(JsonObjectContract contract, JsonProperty member, JsonReader reader)
  void EndProcessProperty(object newObject, JsonReader reader, JsonObjectContract contract, int initialDepth, JsonProperty property, PropertyPresence presence, bool setDefaultValue)
  void SetPropertyPresence(JsonReader reader, JsonProperty property, Dictionary`2<JsonProperty, PropertyPresence> requiredProperties)
  void HandleError(JsonReader reader, bool readPastError, int initialDepth)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter
Наследуется от: JsonSerializerInternalBase
Поля:
  Type _rootType
  int _rootLevel
  List`1<object> _serializeStack
Свойства:
Методы:
  void .ctor(JsonSerializer serializer)
  void Serialize(JsonWriter jsonWriter, object value, Type objectType)
  JsonSerializerProxy GetInternalSerializer()
  JsonContract GetContractSafe(object value)
  void SerializePrimitive(JsonWriter writer, object value, JsonPrimitiveContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  void SerializeValue(JsonWriter writer, object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  Nullable`1<bool> ResolveIsReference(JsonContract contract, JsonProperty property, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool ShouldWriteReference(object value, JsonProperty property, JsonContract valueContract, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool ShouldWriteProperty(object memberValue, JsonProperty property)
  bool CheckForCircularReference(JsonWriter writer, object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
  void WriteReference(JsonWriter writer, object value)
  string GetReference(JsonWriter writer, object value)
  bool TryConvertToString(object value, Type type, String& s)
  void SerializeString(JsonWriter writer, object value, JsonStringContract contract)
  void OnSerializing(JsonWriter writer, JsonContract contract, object value)
  void OnSerialized(JsonWriter writer, JsonContract contract, object value)
  void SerializeObject(JsonWriter writer, object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool CalculatePropertyValues(JsonWriter writer, object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
  void WriteObjectStart(JsonWriter writer, object value, JsonContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void WriteReferenceIdProperty(JsonWriter writer, Type type, object value)
  void WriteTypeProperty(JsonWriter writer, Type type)
  bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag)
  bool HasFlag(PreserveReferencesHandling value, PreserveReferencesHandling flag)
  bool HasFlag(TypeNameHandling value, TypeNameHandling flag)
  void SerializeConvertable(JsonWriter writer, JsonConverter converter, object value, JsonContract contract, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, int initialDepth, Int32[] indices)
  bool WriteStartArray(JsonWriter writer, object values, JsonArrayContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  void SerializeISerializable(JsonWriter writer, ISerializable value, JsonISerializableContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool ShouldWriteDynamicProperty(object memberValue)
  bool ShouldWriteType(TypeNameHandling typeNameHandlingFlag, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  void SerializeDictionary(JsonWriter writer, IDictionary values, JsonDictionaryContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  string GetPropertyName(JsonWriter writer, object name, JsonContract contract, Boolean& escape)
  void HandleError(JsonWriter writer, int initialDepth)
  bool ShouldSerialize(JsonWriter writer, JsonProperty property, object target)
  bool IsSpecified(JsonWriter writer, JsonProperty property, object target)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerProxy
Наследуется от: JsonSerializer
Поля:
  JsonSerializerInternalReader _serializerReader
  JsonSerializerInternalWriter _serializerWriter
  JsonSerializer _serializer
Свойства:
  IReferenceResolver ReferenceResolver
  ITraceWriter TraceWriter
  IEqualityComparer EqualityComparer
  JsonConverterCollection Converters
  DefaultValueHandling DefaultValueHandling
  IContractResolver ContractResolver
  MissingMemberHandling MissingMemberHandling
  NullValueHandling NullValueHandling
  ObjectCreationHandling ObjectCreationHandling
  ReferenceLoopHandling ReferenceLoopHandling
  PreserveReferencesHandling PreserveReferencesHandling
  TypeNameHandling TypeNameHandling
  MetadataPropertyHandling MetadataPropertyHandling
  FormatterAssemblyStyle TypeNameAssemblyFormat
  ConstructorHandling ConstructorHandling
  SerializationBinder Binder
  StreamingContext Context
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatFormatHandling FloatFormatHandling
  FloatParseHandling FloatParseHandling
  StringEscapeHandling StringEscapeHandling
  string DateFormatString
  CultureInfo Culture
  Nullable`1<int> MaxDepth
  bool CheckAdditionalContent
Методы:
  void add_Error(EventHandler`1<ErrorEventArgs> value)
  void remove_Error(EventHandler`1<ErrorEventArgs> value)
  IReferenceResolver get_ReferenceResolver()
  void set_ReferenceResolver(IReferenceResolver value)
  ITraceWriter get_TraceWriter()
  void set_TraceWriter(ITraceWriter value)
  IEqualityComparer get_EqualityComparer()
  void set_EqualityComparer(IEqualityComparer value)
  JsonConverterCollection get_Converters()
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  IContractResolver get_ContractResolver()
  void set_ContractResolver(IContractResolver value)
  MissingMemberHandling get_MissingMemberHandling()
  void set_MissingMemberHandling(MissingMemberHandling value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  PreserveReferencesHandling get_PreserveReferencesHandling()
  void set_PreserveReferencesHandling(PreserveReferencesHandling value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  MetadataPropertyHandling get_MetadataPropertyHandling()
  void set_MetadataPropertyHandling(MetadataPropertyHandling value)
  FormatterAssemblyStyle get_TypeNameAssemblyFormat()
  void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value)
  ConstructorHandling get_ConstructorHandling()
  void set_ConstructorHandling(ConstructorHandling value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  bool get_CheckAdditionalContent()
  void set_CheckAdditionalContent(bool value)
  JsonSerializerInternalBase GetInternalSerializer()
  void .ctor(JsonSerializerInternalReader serializerReader)
  void .ctor(JsonSerializerInternalWriter serializerWriter)
  object DeserializeInternal(JsonReader reader, Type objectType)
  void PopulateInternal(JsonReader reader, object target)
  void SerializeInternal(JsonWriter jsonWriter, object value, Type rootType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonStringContract
Наследуется от: JsonPrimitiveContract
Поля:
Свойства:
Методы:
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonTypeReflector
Наследуется от: object
Поля:
  Nullable`1<bool> _dynamicCodeGeneration
  Nullable`1<bool> _fullyTrusted
  string IdPropertyName
  string RefPropertyName
  string TypePropertyName
  string ValuePropertyName
  string ArrayValuesPropertyName
  string ShouldSerializePrefix
  string SpecifiedPostfix
  ThreadSafeStore`2<Type, Func`2<Object[], JsonConverter>> JsonConverterCreatorCache
  ThreadSafeStore`2<Type, Type> AssociatedMetadataTypesCache
  ReflectionObject _metadataTypeAttributeReflectionObject
Свойства:
  bool DynamicCodeGeneration
  bool FullyTrusted
  ReflectionDelegateFactory ReflectionDelegateFactory
Методы:
  T GetCachedAttribute(object attributeProvider)
  DataContractAttribute GetDataContractAttribute(Type type)
  DataMemberAttribute GetDataMemberAttribute(MemberInfo memberInfo)
  MemberSerialization GetObjectMemberSerialization(Type objectType, bool ignoreSerializableAttribute)
  JsonConverter GetJsonConverter(object attributeProvider)
  JsonConverter CreateJsonConverterInstance(Type converterType, Object[] converterArgs)
  Func`2<Object[], JsonConverter> GetJsonConverterCreator(Type converterType)
  TypeConverter GetTypeConverter(Type type)
  Type GetAssociatedMetadataType(Type type)
  Type GetAssociateMetadataTypeFromAttribute(Type type)
  T GetAttribute(Type type)
  T GetAttribute(MemberInfo memberInfo)
  T GetAttribute(object provider)
  bool get_DynamicCodeGeneration()
  bool get_FullyTrusted()
  ReflectionDelegateFactory get_ReflectionDelegateFactory()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.CachedAttributeGetter`1
Наследуется от: object
Поля:
  ThreadSafeStore`2<object, T> TypeAttributeCache
Свойства:
Методы:
  T GetAttribute(object type)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ReflectionValueProvider
Наследуется от: object
Поля:
  MemberInfo _memberInfo
Свойства:
Методы:
  void .ctor(MemberInfo memberInfo)
  void SetValue(object target, object value)
  object GetValue(object target)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.OnErrorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ObjectConstructor`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  object Invoke(Object[] args)
  IAsyncResult BeginInvoke(Object[] args, AsyncCallback callback, object object)
  object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.CommentHandling
Наследуется от: Enum
Поля:
  int value__
  CommentHandling Ignore
  CommentHandling Load
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.LineInfoHandling
Наследуется от: Enum
Поля:
  int value__
  LineInfoHandling Ignore
  LineInfoHandling Load
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JPropertyDescriptor
Наследуется от: PropertyDescriptor
Поля:
Свойства:
  Type ComponentType
  bool IsReadOnly
  Type PropertyType
  int NameHashCode
Методы:
  void .ctor(string name)
  JObject CastInstance(object instance)
  bool CanResetValue(object component)
  object GetValue(object component)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
  Type get_ComponentType()
  bool get_IsReadOnly()
  Type get_PropertyType()
  int get_NameHashCode()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JPropertyKeyedCollection
Наследуется от: Collection`1<JToken>
Поля:
  IEqualityComparer`1<string> Comparer
  Dictionary`2<string, JToken> _dictionary
Свойства:
  JToken Item
  ICollection`1<string> Keys
  ICollection`1<JToken> Values
Методы:
  void .ctor()
  void AddKey(string key, JToken item)
  void ChangeItemKey(JToken item, string newKey)
  void ClearItems()
  bool Contains(string key)
  bool ContainsItem(JToken item)
  void EnsureDictionary()
  string GetKeyForItem(JToken item)
  void InsertItem(int index, JToken item)
  bool Remove(string key)
  void RemoveItem(int index)
  void RemoveKey(string key)
  void SetItem(int index, JToken item)
  JToken get_Item(string key)
  bool TryGetValue(string key, JToken& value)
  ICollection`1<string> get_Keys()
  ICollection`1<JToken> get_Values()
  int IndexOfReference(JToken t)
  bool Compare(JPropertyKeyedCollection other)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonLoadSettings
Наследуется от: object
Поля:
  CommentHandling _commentHandling
  LineInfoHandling _lineInfoHandling
Свойства:
  CommentHandling CommentHandling
  LineInfoHandling LineInfoHandling
Методы:
  CommentHandling get_CommentHandling()
  void set_CommentHandling(CommentHandling value)
  LineInfoHandling get_LineInfoHandling()
  void set_LineInfoHandling(LineInfoHandling value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonMergeSettings
Наследуется от: object
Поля:
  MergeArrayHandling _mergeArrayHandling
  MergeNullValueHandling _mergeNullValueHandling
Свойства:
  MergeArrayHandling MergeArrayHandling
  MergeNullValueHandling MergeNullValueHandling
Методы:
  MergeArrayHandling get_MergeArrayHandling()
  void set_MergeArrayHandling(MergeArrayHandling value)
  MergeNullValueHandling get_MergeNullValueHandling()
  void set_MergeNullValueHandling(MergeNullValueHandling value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.MergeArrayHandling
Наследуется от: Enum
Поля:
  int value__
  MergeArrayHandling Concat
  MergeArrayHandling Union
  MergeArrayHandling Replace
  MergeArrayHandling Merge
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.MergeNullValueHandling
Наследуется от: Enum
Поля:
  int value__
  MergeNullValueHandling Ignore
  MergeNullValueHandling Merge
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JRaw
Наследуется от: JValue
Поля:
Свойства:
Методы:
  void .ctor(JRaw other)
  void .ctor(object rawJson)
  JRaw Create(JsonReader reader)
  JToken CloneToken()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.IJEnumerable`1
Поля:
Свойства:
  IJEnumerable`1<JToken> Item
Методы:
  IJEnumerable`1<JToken> get_Item(object key)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenEqualityComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(JToken x, JToken y)
  int GetHashCode(JToken obj)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.Extensions
Наследуется от: object
Поля:
Свойства:
Методы:
  IJEnumerable`1<JToken> Ancestors(IEnumerable`1<T> source)
  IJEnumerable`1<JToken> AncestorsAndSelf(IEnumerable`1<T> source)
  IJEnumerable`1<JToken> Descendants(IEnumerable`1<T> source)
  IJEnumerable`1<JToken> DescendantsAndSelf(IEnumerable`1<T> source)
  IJEnumerable`1<JProperty> Properties(IEnumerable`1<JObject> source)
  IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source, object key)
  IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source)
  IEnumerable`1<U> Values(IEnumerable`1<JToken> source, object key)
  IEnumerable`1<U> Values(IEnumerable`1<JToken> source)
  U Value(IEnumerable`1<JToken> value)
  U Value(IEnumerable`1<T> value)
  IEnumerable`1<U> Values(IEnumerable`1<T> source, object key)
  IJEnumerable`1<JToken> Children(IEnumerable`1<T> source)
  IEnumerable`1<U> Children(IEnumerable`1<T> source)
  IEnumerable`1<U> Convert(IEnumerable`1<T> source)
  U Convert(T token)
  IJEnumerable`1<JToken> AsJEnumerable(IEnumerable`1<JToken> source)
  IJEnumerable`1<T> AsJEnumerable(IEnumerable`1<T> source)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JConstructor
Наследуется от: JContainer
Поля:
  string _name
  List`1<JToken> _values
Свойства:
  IList`1<JToken> ChildrenTokens
  string Name
  JTokenType Type
  JToken Item
Методы:
  IList`1<JToken> get_ChildrenTokens()
  int IndexOfItem(JToken item)
  void MergeItem(object content, JsonMergeSettings settings)
  string get_Name()
  void set_Name(string value)
  JTokenType get_Type()
  void .ctor()
  void .ctor(JConstructor other)
  void .ctor(string name, Object[] content)
  void .ctor(string name, object content)
  void .ctor(string name)
  bool DeepEquals(JToken node)
  JToken CloneToken()
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  int GetDeepHashCode()
  JConstructor Load(JsonReader reader)
  JConstructor Load(JsonReader reader, JsonLoadSettings settings)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JContainer
Наследуется от: JToken
Поля:
  ListChangedEventHandler _listChanged
  AddingNewEventHandler _addingNew
  object _syncRoot
  bool _busy
Свойства:
  IList`1<JToken> ChildrenTokens
  bool HasValues
  JToken First
  JToken Last
  JToken System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Item
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
  object System.Collections.IList.Item
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool System.ComponentModel.IBindingList.AllowEdit
  bool System.ComponentModel.IBindingList.AllowNew
  bool System.ComponentModel.IBindingList.AllowRemove
  bool System.ComponentModel.IBindingList.IsSorted
  ListSortDirection System.ComponentModel.IBindingList.SortDirection
  PropertyDescriptor System.ComponentModel.IBindingList.SortProperty
  bool System.ComponentModel.IBindingList.SupportsChangeNotification
  bool System.ComponentModel.IBindingList.SupportsSearching
  bool System.ComponentModel.IBindingList.SupportsSorting
Методы:
  void add_ListChanged(ListChangedEventHandler value)
  void remove_ListChanged(ListChangedEventHandler value)
  void add_AddingNew(AddingNewEventHandler value)
  void remove_AddingNew(AddingNewEventHandler value)
  IList`1<JToken> get_ChildrenTokens()
  void .ctor()
  void .ctor(JContainer other)
  void CheckReentrancy()
  IList`1<JToken> CreateChildrenCollection()
  void OnAddingNew(AddingNewEventArgs e)
  void OnListChanged(ListChangedEventArgs e)
  bool get_HasValues()
  bool ContentsEqual(JContainer container)
  JToken get_First()
  JToken get_Last()
  JEnumerable`1<JToken> Children()
  IEnumerable`1<T> Values()
  IEnumerable`1<JToken> Descendants()
  IEnumerable`1<JToken> DescendantsAndSelf()
  IEnumerable`1<JToken> GetDescendants(bool self)
  bool IsMultiContent(object content)
  JToken EnsureParentToken(JToken item, bool skipParentCheck)
  int IndexOfItem(JToken item)
  void InsertItem(int index, JToken item, bool skipParentCheck)
  void RemoveItemAt(int index)
  bool RemoveItem(JToken item)
  JToken GetItem(int index)
  void SetItem(int index, JToken item)
  void ClearItems()
  void ReplaceItem(JToken existing, JToken replacement)
  bool ContainsItem(JToken item)
  void CopyItemsTo(Array array, int arrayIndex)
  bool IsTokenUnchanged(JToken currentValue, JToken newValue)
  void ValidateToken(JToken o, JToken existing)
  void Add(object content)
  void AddAndSkipParentCheck(JToken token)
  void AddFirst(object content)
  void AddInternal(int index, object content, bool skipParentCheck)
  JToken CreateFromContent(object content)
  JsonWriter CreateWriter()
  void ReplaceAll(object content)
  void RemoveAll()
  void MergeItem(object content, JsonMergeSettings settings)
  void Merge(object content)
  void Merge(object content, JsonMergeSettings settings)
  void ReadTokenFrom(JsonReader reader, JsonLoadSettings options)
  void ReadContentFrom(JsonReader r, JsonLoadSettings settings)
  int ContentsHashCode()
  string System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[] listAccessors)
  PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors)
  int System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(JToken item)
  void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int index, JToken item)
  void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int index)
  JToken System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item(int index)
  void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item(int index, JToken value)
  void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(JToken item)
  void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(JToken item)
  void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(JToken[] array, int arrayIndex)
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly()
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(JToken item)
  JToken EnsureValue(object value)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property)
  object System.ComponentModel.IBindingList.AddNew()
  bool System.ComponentModel.IBindingList.get_AllowEdit()
  bool System.ComponentModel.IBindingList.get_AllowNew()
  bool System.ComponentModel.IBindingList.get_AllowRemove()
  void System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)
  int System.ComponentModel.IBindingList.Find(PropertyDescriptor property, object key)
  bool System.ComponentModel.IBindingList.get_IsSorted()
  void System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property)
  void System.ComponentModel.IBindingList.RemoveSort()
  ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
  PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
  bool System.ComponentModel.IBindingList.get_SupportsChangeNotification()
  bool System.ComponentModel.IBindingList.get_SupportsSearching()
  bool System.ComponentModel.IBindingList.get_SupportsSorting()
  void MergeEnumerableContent(JContainer target, IEnumerable content, JsonMergeSettings settings)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JEnumerable`1
Наследуется от: ValueType
Поля:
  JEnumerable`1<T> Empty
  IEnumerable`1<T> _enumerable
Свойства:
  IJEnumerable`1<JToken> Item
Методы:
  void .ctor(IEnumerable`1<T> enumerable)
  IEnumerator`1<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IJEnumerable`1<JToken> get_Item(object key)
  bool Equals(JEnumerable`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JObject
Наследуется от: JContainer
Поля:
  JPropertyKeyedCollection _properties
  PropertyChangedEventHandler PropertyChanged
  PropertyChangingEventHandler PropertyChanging
Свойства:
  IList`1<JToken> ChildrenTokens
  JTokenType Type
  JToken Item
  JToken Item
  ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.Keys
  ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.Values
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.IsReadOnly
Методы:
  IList`1<JToken> get_ChildrenTokens()
  void add_PropertyChanged(PropertyChangedEventHandler value)
  void remove_PropertyChanged(PropertyChangedEventHandler value)
  void add_PropertyChanging(PropertyChangingEventHandler value)
  void remove_PropertyChanging(PropertyChangingEventHandler value)
  void .ctor()
  void .ctor(JObject other)
  void .ctor(Object[] content)
  void .ctor(object content)
  bool DeepEquals(JToken node)
  int IndexOfItem(JToken item)
  void InsertItem(int index, JToken item, bool skipParentCheck)
  void ValidateToken(JToken o, JToken existing)
  void MergeItem(object content, JsonMergeSettings settings)
  void InternalPropertyChanged(JProperty childProperty)
  void InternalPropertyChanging(JProperty childProperty)
  JToken CloneToken()
  JTokenType get_Type()
  IEnumerable`1<JProperty> Properties()
  JProperty Property(string name)
  JEnumerable`1<JToken> PropertyValues()
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  JToken get_Item(string propertyName)
  void set_Item(string propertyName, JToken value)
  JObject Load(JsonReader reader)
  JObject Load(JsonReader reader, JsonLoadSettings settings)
  JObject Parse(string json)
  JObject Parse(string json, JsonLoadSettings settings)
  JObject FromObject(object o)
  JObject FromObject(object o, JsonSerializer jsonSerializer)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  JToken GetValue(string propertyName)
  JToken GetValue(string propertyName, StringComparison comparison)
  bool TryGetValue(string propertyName, StringComparison comparison, JToken& value)
  void Add(string propertyName, JToken value)
  bool System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.ContainsKey(string key)
  ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Keys()
  bool Remove(string propertyName)
  bool TryGetValue(string propertyName, JToken& value)
  ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values()
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add(KeyValuePair`2<string, JToken> item)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains(KeyValuePair`2<string, JToken> item)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo(KeyValuePair`2[] array, int arrayIndex)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove(KeyValuePair`2<string, JToken> item)
  int GetDeepHashCode()
  IEnumerator`1<KeyValuePair`2<string, JToken>> GetEnumerator()
  void OnPropertyChanged(string propertyName)
  void OnPropertyChanging(string propertyName)
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes)
  AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JArray
Наследуется от: JContainer
Поля:
  List`1<JToken> _values
Свойства:
  IList`1<JToken> ChildrenTokens
  JTokenType Type
  JToken Item
  JToken Item
  bool IsReadOnly
Методы:
  IList`1<JToken> get_ChildrenTokens()
  JTokenType get_Type()
  void .ctor()
  void .ctor(JArray other)
  void .ctor(Object[] content)
  void .ctor(object content)
  bool DeepEquals(JToken node)
  JToken CloneToken()
  JArray Load(JsonReader reader)
  JArray Load(JsonReader reader, JsonLoadSettings settings)
  JArray Parse(string json)
  JArray Parse(string json, JsonLoadSettings settings)
  JArray FromObject(object o)
  JArray FromObject(object o, JsonSerializer jsonSerializer)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  JToken get_Item(int index)
  void set_Item(int index, JToken value)
  int IndexOfItem(JToken item)
  void MergeItem(object content, JsonMergeSettings settings)
  int IndexOf(JToken item)
  void Insert(int index, JToken item)
  void RemoveAt(int index)
  IEnumerator`1<JToken> GetEnumerator()
  void Add(JToken item)
  void Clear()
  bool Contains(JToken item)
  void CopyTo(JToken[] array, int arrayIndex)
  bool get_IsReadOnly()
  bool Remove(JToken item)
  int GetDeepHashCode()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenReader
Наследуется от: JsonReader
Поля:
  JToken _root
  string _initialPath
  JToken _parent
  JToken _current
Свойства:
  JToken CurrentToken
  int Newtonsoft.Json.IJsonLineInfo.LineNumber
  int Newtonsoft.Json.IJsonLineInfo.LinePosition
  string Path
Методы:
  JToken get_CurrentToken()
  void .ctor(JToken token)
  void .ctor(JToken token, string initialPath)
  bool Read()
  bool ReadOver(JToken t)
  bool ReadToEnd()
  Nullable`1<JsonToken> GetEndToken(JContainer c)
  bool ReadInto(JContainer c)
  bool SetEnd(JContainer c)
  void SetToken(JToken token)
  string SafeToString(object value)
  bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  int Newtonsoft.Json.IJsonLineInfo.get_LineNumber()
  int Newtonsoft.Json.IJsonLineInfo.get_LinePosition()
  string get_Path()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenWriter
Наследуется от: JsonWriter
Поля:
  JContainer _token
  JContainer _parent
  JValue _value
  JToken _current
Свойства:
  JToken CurrentToken
  JToken Token
Методы:
  JToken get_CurrentToken()
  JToken get_Token()
  void .ctor(JContainer container)
  void .ctor()
  void Flush()
  void Close()
  void WriteStartObject()
  void AddParent(JContainer container)
  void RemoveParent()
  void WriteStartArray()
  void WriteStartConstructor(string name)
  void WriteEnd(JsonToken token)
  void WritePropertyName(string name)
  void AddValue(object value, JsonToken token)
  void AddValue(JValue value, JsonToken token)
  void WriteValue(object value)
  void WriteNull()
  void WriteUndefined()
  void WriteRaw(string json)
  void WriteComment(string text)
  void WriteValue(string value)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(double value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Byte[] value)
  void WriteValue(TimeSpan value)
  void WriteValue(Guid value)
  void WriteValue(Uri value)
  void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JToken
Наследуется от: object
Поля:
  JTokenEqualityComparer _equalityComparer
  JContainer _parent
  JToken _previous
  JToken _next
  object _annotations
  JTokenType[] BooleanTypes
  JTokenType[] NumberTypes
  JTokenType[] StringTypes
  JTokenType[] GuidTypes
  JTokenType[] TimeSpanTypes
  JTokenType[] UriTypes
  JTokenType[] CharTypes
  JTokenType[] DateTimeTypes
  JTokenType[] BytesTypes
Свойства:
  JTokenEqualityComparer EqualityComparer
  JContainer Parent
  JToken Root
  JTokenType Type
  bool HasValues
  JToken Next
  JToken Previous
  string Path
  JToken Item
  JToken First
  JToken Last
  IJEnumerable`1<JToken> Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item
  int Newtonsoft.Json.IJsonLineInfo.LineNumber
  int Newtonsoft.Json.IJsonLineInfo.LinePosition
Методы:
  JTokenEqualityComparer get_EqualityComparer()
  JContainer get_Parent()
  void set_Parent(JContainer value)
  JToken get_Root()
  JToken CloneToken()
  bool DeepEquals(JToken node)
  JTokenType get_Type()
  bool get_HasValues()
  bool DeepEquals(JToken t1, JToken t2)
  JToken get_Next()
  void set_Next(JToken value)
  JToken get_Previous()
  void set_Previous(JToken value)
  string get_Path()
  void .ctor()
  void AddAfterSelf(object content)
  void AddBeforeSelf(object content)
  IEnumerable`1<JToken> Ancestors()
  IEnumerable`1<JToken> AncestorsAndSelf()
  IEnumerable`1<JToken> GetAncestors(bool self)
  IEnumerable`1<JToken> AfterSelf()
  IEnumerable`1<JToken> BeforeSelf()
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  T Value(object key)
  JToken get_First()
  JToken get_Last()
  JEnumerable`1<JToken> Children()
  JEnumerable`1<T> Children()
  IEnumerable`1<T> Values()
  void Remove()
  void Replace(JToken value)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  string ToString()
  string ToString(Formatting formatting, JsonConverter[] converters)
  JValue EnsureValue(JToken value)
  string GetType(JToken token)
  bool ValidateToken(JToken o, JTokenType[] validTypes, bool nullable)
  bool op_Explicit(JToken value)
  DateTimeOffset op_Explicit(JToken value)
  Nullable`1<bool> op_Explicit(JToken value)
  long op_Explicit(JToken value)
  Nullable`1<DateTime> op_Explicit(JToken value)
  Nullable`1<DateTimeOffset> op_Explicit(JToken value)
  Nullable`1<decimal> op_Explicit(JToken value)
  Nullable`1<double> op_Explicit(JToken value)
  Nullable`1<char> op_Explicit(JToken value)
  int op_Explicit(JToken value)
  short op_Explicit(JToken value)
  ushort op_Explicit(JToken value)
  char op_Explicit(JToken value)
  byte op_Explicit(JToken value)
  sbyte op_Explicit(JToken value)
  Nullable`1<int> op_Explicit(JToken value)
  Nullable`1<short> op_Explicit(JToken value)
  Nullable`1<ushort> op_Explicit(JToken value)
  Nullable`1<byte> op_Explicit(JToken value)
  Nullable`1<sbyte> op_Explicit(JToken value)
  DateTime op_Explicit(JToken value)
  Nullable`1<long> op_Explicit(JToken value)
  Nullable`1<float> op_Explicit(JToken value)
  decimal op_Explicit(JToken value)
  Nullable`1<UInt32> op_Explicit(JToken value)
  Nullable`1<ulong> op_Explicit(JToken value)
  double op_Explicit(JToken value)
  float op_Explicit(JToken value)
  string op_Explicit(JToken value)
  UInt32 op_Explicit(JToken value)
  ulong op_Explicit(JToken value)
  Byte[] op_Explicit(JToken value)
  Guid op_Explicit(JToken value)
  Nullable`1<Guid> op_Explicit(JToken value)
  TimeSpan op_Explicit(JToken value)
  Nullable`1<TimeSpan> op_Explicit(JToken value)
  Uri op_Explicit(JToken value)
  JToken op_Implicit(bool value)
  JToken op_Implicit(DateTimeOffset value)
  JToken op_Implicit(byte value)
  JToken op_Implicit(Nullable`1<byte> value)
  JToken op_Implicit(sbyte value)
  JToken op_Implicit(Nullable`1<sbyte> value)
  JToken op_Implicit(Nullable`1<bool> value)
  JToken op_Implicit(long value)
  JToken op_Implicit(Nullable`1<DateTime> value)
  JToken op_Implicit(Nullable`1<DateTimeOffset> value)
  JToken op_Implicit(Nullable`1<decimal> value)
  JToken op_Implicit(Nullable`1<double> value)
  JToken op_Implicit(short value)
  JToken op_Implicit(ushort value)
  JToken op_Implicit(int value)
  JToken op_Implicit(Nullable`1<int> value)
  JToken op_Implicit(DateTime value)
  JToken op_Implicit(Nullable`1<long> value)
  JToken op_Implicit(Nullable`1<float> value)
  JToken op_Implicit(decimal value)
  JToken op_Implicit(Nullable`1<short> value)
  JToken op_Implicit(Nullable`1<ushort> value)
  JToken op_Implicit(Nullable`1<UInt32> value)
  JToken op_Implicit(Nullable`1<ulong> value)
  JToken op_Implicit(double value)
  JToken op_Implicit(float value)
  JToken op_Implicit(string value)
  JToken op_Implicit(UInt32 value)
  JToken op_Implicit(ulong value)
  JToken op_Implicit(Byte[] value)
  JToken op_Implicit(Uri value)
  JToken op_Implicit(TimeSpan value)
  JToken op_Implicit(Nullable`1<TimeSpan> value)
  JToken op_Implicit(Guid value)
  JToken op_Implicit(Nullable`1<Guid> value)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<JToken> System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()
  int GetDeepHashCode()
  IJEnumerable`1<JToken> Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item(object key)
  JsonReader CreateReader()
  JToken FromObjectInternal(object o, JsonSerializer jsonSerializer)
  JToken FromObject(object o)
  JToken FromObject(object o, JsonSerializer jsonSerializer)
  T ToObject()
  object ToObject(Type objectType)
  T ToObject(JsonSerializer jsonSerializer)
  object ToObject(Type objectType, JsonSerializer jsonSerializer)
  JToken ReadFrom(JsonReader reader)
  JToken ReadFrom(JsonReader reader, JsonLoadSettings settings)
  JToken Parse(string json)
  JToken Parse(string json, JsonLoadSettings settings)
  JToken Load(JsonReader reader, JsonLoadSettings settings)
  JToken Load(JsonReader reader)
  void SetLineInfo(IJsonLineInfo lineInfo, JsonLoadSettings settings)
  void SetLineInfo(int lineNumber, int linePosition)
  bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  int Newtonsoft.Json.IJsonLineInfo.get_LineNumber()
  int Newtonsoft.Json.IJsonLineInfo.get_LinePosition()
  JToken SelectToken(string path)
  JToken SelectToken(string path, bool errorWhenNoMatch)
  IEnumerable`1<JToken> SelectTokens(string path)
  IEnumerable`1<JToken> SelectTokens(string path, bool errorWhenNoMatch)
  object System.ICloneable.Clone()
  JToken DeepClone()
  void AddAnnotation(object annotation)
  T Annotation()
  object Annotation(Type type)
  IEnumerable`1<T> Annotations()
  IEnumerable`1<object> Annotations(Type type)
  void RemoveAnnotations()
  void RemoveAnnotations(Type type)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JProperty
Наследуется от: JContainer
Поля:
  JPropertyList _content
  string _name
Свойства:
  IList`1<JToken> ChildrenTokens
  string Name
  JToken Value
  JTokenType Type
Методы:
  IList`1<JToken> get_ChildrenTokens()
  string get_Name()
  JToken get_Value()
  void set_Value(JToken value)
  void .ctor(JProperty other)
  JToken GetItem(int index)
  void SetItem(int index, JToken item)
  bool RemoveItem(JToken item)
  void RemoveItemAt(int index)
  int IndexOfItem(JToken item)
  void InsertItem(int index, JToken item, bool skipParentCheck)
  bool ContainsItem(JToken item)
  void MergeItem(object content, JsonMergeSettings settings)
  void ClearItems()
  bool DeepEquals(JToken node)
  JToken CloneToken()
  JTokenType get_Type()
  void .ctor(string name)
  void .ctor(string name, Object[] content)
  void .ctor(string name, object content)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  int GetDeepHashCode()
  JProperty Load(JsonReader reader)
  JProperty Load(JsonReader reader, JsonLoadSettings settings)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenType
Наследуется от: Enum
Поля:
  int value__
  JTokenType None
  JTokenType Object
  JTokenType Array
  JTokenType Constructor
  JTokenType Property
  JTokenType Comment
  JTokenType Integer
  JTokenType Float
  JTokenType String
  JTokenType Boolean
  JTokenType Null
  JTokenType Undefined
  JTokenType Date
  JTokenType Raw
  JTokenType Bytes
  JTokenType Guid
  JTokenType Uri
  JTokenType TimeSpan
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JValue
Наследуется от: JToken
Поля:
  JTokenType _valueType
  object _value
Свойства:
  bool HasValues
  JTokenType Type
  object Value
Методы:
  void .ctor(object value, JTokenType type)
  void .ctor(JValue other)
  void .ctor(long value)
  void .ctor(decimal value)
  void .ctor(char value)
  void .ctor(ulong value)
  void .ctor(double value)
  void .ctor(float value)
  void .ctor(DateTime value)
  void .ctor(DateTimeOffset value)
  void .ctor(bool value)
  void .ctor(string value)
  void .ctor(Guid value)
  void .ctor(Uri value)
  void .ctor(TimeSpan value)
  void .ctor(object value)
  bool DeepEquals(JToken node)
  bool get_HasValues()
  int Compare(JTokenType valueType, object objA, object objB)
  int CompareFloat(object objA, object objB)
  JToken CloneToken()
  JValue CreateComment(string value)
  JValue CreateString(string value)
  JValue CreateNull()
  JValue CreateUndefined()
  JTokenType GetValueType(Nullable`1<JTokenType> current, object value)
  JTokenType GetStringValueType(Nullable`1<JTokenType> current)
  JTokenType get_Type()
  object get_Value()
  void set_Value(object value)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  int GetDeepHashCode()
  bool ValuesEquals(JValue v1, JValue v2)
  bool Equals(JValue other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider formatProvider)
  string ToString(string format, IFormatProvider formatProvider)
  int System.IComparable.CompareTo(object obj)
  int CompareTo(JValue obj)
  TypeCode System.IConvertible.GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type conversionType, IFormatProvider provider)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter
Наследуется от: PathFilter
Поля:
  Nullable`1<int> <Index>k__BackingField
Свойства:
  Nullable`1<int> Index
Методы:
  Nullable`1<int> get_Index()
  void set_Index(Nullable`1<int> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter
Наследуется от: PathFilter
Поля:
  List`1<int> <Indexes>k__BackingField
Свойства:
  List`1<int> Indexes
Методы:
  List`1<int> get_Indexes()
  void set_Indexes(List`1<int> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter
Наследуется от: PathFilter
Поля:
  Nullable`1<int> <Start>k__BackingField
  Nullable`1<int> <End>k__BackingField
  Nullable`1<int> <Step>k__BackingField
Свойства:
  Nullable`1<int> Start
  Nullable`1<int> End
  Nullable`1<int> Step
Методы:
  Nullable`1<int> get_Start()
  void set_Start(Nullable`1<int> value)
  Nullable`1<int> get_End()
  void set_End(Nullable`1<int> value)
  Nullable`1<int> get_Step()
  void set_Step(Nullable`1<int> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  bool IsValid(int index, int stopIndex, bool positiveStep)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.FieldFilter
Наследуется от: PathFilter
Поля:
  string <Name>k__BackingField
Свойства:
  string Name
Методы:
  string get_Name()
  void set_Name(string value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter
Наследуется от: PathFilter
Поля:
  List`1<string> <Names>k__BackingField
Свойства:
  List`1<string> Names
Методы:
  List`1<string> get_Names()
  void set_Names(List`1<string> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.JPath
Наследуется от: object
Поля:
  string _expression
  List`1<PathFilter> <Filters>k__BackingField
  int _currentIndex
Свойства:
  List`1<PathFilter> Filters
Методы:
  List`1<PathFilter> get_Filters()
  void set_Filters(List`1<PathFilter> value)
  void .ctor(string expression)
  void ParseMain()
  bool ParsePath(List`1<PathFilter> filters, int currentPartStartIndex, bool query)
  PathFilter ParseIndexer(char indexerOpenChar)
  PathFilter ParseArrayIndexer(char indexerCloseChar)
  void EatWhitespace()
  PathFilter ParseQuery(char indexerCloseChar)
  QueryExpression ParseExpression()
  object ParseValue()
  string ReadQuotedString()
  bool Match(string s)
  QueryOperator ParseOperator()
  PathFilter ParseQuotedField(char indexerCloseChar)
  void EnsureLength(string message)
  IEnumerable`1<JToken> Evaluate(JToken t, bool errorWhenNoMatch)
  IEnumerable`1<JToken> Evaluate(List`1<PathFilter> filters, JToken t, bool errorWhenNoMatch)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.PathFilter
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  JToken GetTokenIndex(JToken t, bool errorWhenNoMatch, int index)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.QueryOperator
Наследуется от: Enum
Поля:
  int value__
  QueryOperator None
  QueryOperator Equals
  QueryOperator NotEquals
  QueryOperator Exists
  QueryOperator LessThan
  QueryOperator LessThanOrEquals
  QueryOperator GreaterThan
  QueryOperator GreaterThanOrEquals
  QueryOperator And
  QueryOperator Or
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.QueryExpression
Наследуется от: object
Поля:
  QueryOperator <Operator>k__BackingField
Свойства:
  QueryOperator Operator
Методы:
  QueryOperator get_Operator()
  void set_Operator(QueryOperator value)
  bool IsMatch(JToken t)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.CompositeExpression
Наследуется от: QueryExpression
Поля:
  List`1<QueryExpression> <Expressions>k__BackingField
Свойства:
  List`1<QueryExpression> Expressions
Методы:
  List`1<QueryExpression> get_Expressions()
  void set_Expressions(List`1<QueryExpression> value)
  void .ctor()
  bool IsMatch(JToken t)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression
Наследуется от: QueryExpression
Поля:
  List`1<PathFilter> <Path>k__BackingField
  JValue <Value>k__BackingField
Свойства:
  List`1<PathFilter> Path
  JValue Value
Методы:
  List`1<PathFilter> get_Path()
  void set_Path(List`1<PathFilter> value)
  JValue get_Value()
  void set_Value(JValue value)
  bool IsMatch(JToken t)
  bool EqualsWithStringCoercion(JValue value, JValue queryValue)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.QueryFilter
Наследуется от: PathFilter
Поля:
  QueryExpression <Expression>k__BackingField
Свойства:
  QueryExpression Expression
Методы:
  QueryExpression get_Expression()
  void set_Expression(QueryExpression value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ScanFilter
Наследуется от: PathFilter
Поля:
  string <Name>k__BackingField
Свойства:
  string Name
Методы:
  string get_Name()
  void set_Name(string value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.BinaryConverter
Наследуется от: JsonConverter
Поля:
  string BinaryTypeName
  string BinaryToArrayName
  ReflectionObject _reflectionObject
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  Byte[] GetByteArray(object value)
  void EnsureReflectionObject(Type t)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  Byte[] ReadByteArray(JsonReader reader)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.ColorConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.CustomCreationConverter`1
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanWrite
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  T Create(Type objectType)
  bool CanConvert(Type objectType)
  bool get_CanWrite()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.DateTimeConverterBase
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.EnumerableVectorConverter`1
Наследуется от: JsonConverter
Поля:
  VectorConverter VectorConverter
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.HashSetConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanWrite
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  bool get_CanWrite()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.KeyValuePairConverter
Наследуется от: JsonConverter
Поля:
  string KeyName
  string ValueName
  ThreadSafeStore`2<Type, ReflectionObject> ReflectionObjectPerType
Свойства:
Методы:
  ReflectionObject InitializeReflectionObject(Type t)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.BsonObjectIdConverter
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.Matrix4x4Converter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.QuaternionConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.RegexConverter
Наследуется от: JsonConverter
Поля:
  string PatternName
  string OptionsName
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool HasFlag(RegexOptions options, RegexOptions flag)
  void WriteBson(BsonWriter writer, Regex regex)
  void WriteJson(JsonWriter writer, Regex regex, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  object ReadRegexString(JsonReader reader)
  Regex ReadRegexObject(JsonReader reader, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.ResolutionConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.StringEnumConverter
Наследуется от: JsonConverter
Поля:
  bool <CamelCaseText>k__BackingField
  bool <AllowIntegerValues>k__BackingField
Свойства:
  bool CamelCaseText
  bool AllowIntegerValues
Методы:
  bool get_CamelCaseText()
  void set_CamelCaseText(bool value)
  bool get_AllowIntegerValues()
  void set_AllowIntegerValues(bool value)
  void .ctor()
  void .ctor(bool camelCaseText)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.UriConverter
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.VectorConverter
Наследуется от: JsonConverter
Поля:
  Type V2
  Type V3
  Type V4
  bool <EnableVector2>k__BackingField
  bool <EnableVector3>k__BackingField
  bool <EnableVector4>k__BackingField
Свойства:
  bool EnableVector2
  bool EnableVector3
  bool EnableVector4
Методы:
  bool get_EnableVector2()
  void set_EnableVector2(bool value)
  bool get_EnableVector3()
  void set_EnableVector3(bool value)
  bool get_EnableVector4()
  void set_EnableVector4(bool value)
  void .ctor()
  void .ctor(bool enableVector2, bool enableVector3, bool enableVector4)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  void WriteVector(JsonWriter writer, float x, float y, Nullable`1<float> z, Nullable`1<float> w)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  Vector2 PopulateVector2(JsonReader reader)
  Vector3 PopulateVector3(JsonReader reader)
  Vector4 PopulateVector4(JsonReader reader)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.VersionConverter
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IsoDateTimeConverter
Наследуется от: DateTimeConverterBase
Поля:
  string DefaultDateTimeFormat
  DateTimeStyles _dateTimeStyles
  string _dateTimeFormat
  CultureInfo _culture
Свойства:
  DateTimeStyles DateTimeStyles
  string DateTimeFormat
  CultureInfo Culture
Методы:
  DateTimeStyles get_DateTimeStyles()
  void set_DateTimeStyles(DateTimeStyles value)
  string get_DateTimeFormat()
  void set_DateTimeFormat(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter
Наследуется от: DateTimeConverterBase
Поля:
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlDocumentWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlDocument _document
Свойства:
  IXmlElement DocumentElement
Методы:
  void .ctor(XmlDocument document)
  IXmlNode CreateComment(string data)
  IXmlNode CreateTextNode(string text)
  IXmlNode CreateCDataSection(string data)
  IXmlNode CreateWhitespace(string text)
  IXmlNode CreateSignificantWhitespace(string text)
  IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone)
  IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset)
  IXmlNode CreateProcessingInstruction(string target, string data)
  IXmlElement CreateElement(string elementName)
  IXmlElement CreateElement(string qualifiedName, string namespaceUri)
  IXmlNode CreateAttribute(string name, string value)
  IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value)
  IXmlElement get_DocumentElement()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlElementWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlElement _element
Свойства:
  bool IsEmpty
Методы:
  void .ctor(XmlElement element)
  void SetAttributeNode(IXmlNode attribute)
  string GetPrefixOfNamespace(string namespaceUri)
  bool get_IsEmpty()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlDeclarationWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlDeclaration _declaration
Свойства:
  string Version
  string Encoding
  string Standalone
Методы:
  void .ctor(XmlDeclaration declaration)
  string get_Version()
  string get_Encoding()
  void set_Encoding(string value)
  string get_Standalone()
  void set_Standalone(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlDocumentType _documentType
Свойства:
  string Name
  string System
  string Public
  string InternalSubset
  string LocalName
Методы:
  void .ctor(XmlDocumentType documentType)
  string get_Name()
  string get_System()
  string get_Public()
  string get_InternalSubset()
  string get_LocalName()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlNodeWrapper
Наследуется от: object
Поля:
  XmlNode _node
  List`1<IXmlNode> _childNodes
  List`1<IXmlNode> _attributes
Свойства:
  object WrappedNode
  XmlNodeType NodeType
  string LocalName
  List`1<IXmlNode> ChildNodes
  List`1<IXmlNode> Attributes
  IXmlNode ParentNode
  string Value
  string NamespaceUri
Методы:
  void .ctor(XmlNode node)
  object get_WrappedNode()
  XmlNodeType get_NodeType()
  string get_LocalName()
  List`1<IXmlNode> get_ChildNodes()
  IXmlNode WrapNode(XmlNode node)
  List`1<IXmlNode> get_Attributes()
  IXmlNode get_ParentNode()
  string get_Value()
  void set_Value(string value)
  IXmlNode AppendChild(IXmlNode newChild)
  string get_NamespaceUri()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlDocument
Поля:
Свойства:
  IXmlElement DocumentElement
Методы:
  IXmlNode CreateComment(string text)
  IXmlNode CreateTextNode(string text)
  IXmlNode CreateCDataSection(string data)
  IXmlNode CreateWhitespace(string text)
  IXmlNode CreateSignificantWhitespace(string text)
  IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone)
  IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset)
  IXmlNode CreateProcessingInstruction(string target, string data)
  IXmlElement CreateElement(string elementName)
  IXmlElement CreateElement(string qualifiedName, string namespaceUri)
  IXmlNode CreateAttribute(string name, string value)
  IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value)
  IXmlElement get_DocumentElement()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlDeclaration
Поля:
Свойства:
  string Version
  string Encoding
  string Standalone
Методы:
  string get_Version()
  string get_Encoding()
  void set_Encoding(string value)
  string get_Standalone()
  void set_Standalone(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlDocumentType
Поля:
Свойства:
  string Name
  string System
  string Public
  string InternalSubset
Методы:
  string get_Name()
  string get_System()
  string get_Public()
  string get_InternalSubset()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlElement
Поля:
Свойства:
  bool IsEmpty
Методы:
  void SetAttributeNode(IXmlNode attribute)
  string GetPrefixOfNamespace(string namespaceUri)
  bool get_IsEmpty()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlNode
Поля:
Свойства:
  XmlNodeType NodeType
  string LocalName
  List`1<IXmlNode> ChildNodes
  List`1<IXmlNode> Attributes
  IXmlNode ParentNode
  string Value
  string NamespaceUri
  object WrappedNode
Методы:
  XmlNodeType get_NodeType()
  string get_LocalName()
  List`1<IXmlNode> get_ChildNodes()
  List`1<IXmlNode> get_Attributes()
  IXmlNode get_ParentNode()
  string get_Value()
  void set_Value(string value)
  IXmlNode AppendChild(IXmlNode newChild)
  string get_NamespaceUri()
  object get_WrappedNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XDeclarationWrapper
Наследуется от: XObjectWrapper
Поля:
  XDeclaration <Declaration>k__BackingField
Свойства:
  XDeclaration Declaration
  XmlNodeType NodeType
  string Version
  string Encoding
  string Standalone
Методы:
  XDeclaration get_Declaration()
  void set_Declaration(XDeclaration value)
  void .ctor(XDeclaration declaration)
  XmlNodeType get_NodeType()
  string get_Version()
  string get_Encoding()
  void set_Encoding(string value)
  string get_Standalone()
  void set_Standalone(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XDocumentTypeWrapper
Наследуется от: XObjectWrapper
Поля:
  XDocumentType _documentType
Свойства:
  string Name
  string System
  string Public
  string InternalSubset
  string LocalName
Методы:
  void .ctor(XDocumentType documentType)
  string get_Name()
  string get_System()
  string get_Public()
  string get_InternalSubset()
  string get_LocalName()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XDocumentWrapper
Наследуется от: XContainerWrapper
Поля:
Свойства:
  XDocument Document
  List`1<IXmlNode> ChildNodes
  IXmlElement DocumentElement
Методы:
  XDocument get_Document()
  void .ctor(XDocument document)
  List`1<IXmlNode> get_ChildNodes()
  IXmlNode CreateComment(string text)
  IXmlNode CreateTextNode(string text)
  IXmlNode CreateCDataSection(string data)
  IXmlNode CreateWhitespace(string text)
  IXmlNode CreateSignificantWhitespace(string text)
  IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone)
  IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset)
  IXmlNode CreateProcessingInstruction(string target, string data)
  IXmlElement CreateElement(string elementName)
  IXmlElement CreateElement(string qualifiedName, string namespaceUri)
  IXmlNode CreateAttribute(string name, string value)
  IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value)
  IXmlElement get_DocumentElement()
  IXmlNode AppendChild(IXmlNode newChild)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XTextWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XText Text
  string Value
  IXmlNode ParentNode
Методы:
  XText get_Text()
  void .ctor(XText text)
  string get_Value()
  void set_Value(string value)
  IXmlNode get_ParentNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XCommentWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XComment Text
  string Value
  IXmlNode ParentNode
Методы:
  XComment get_Text()
  void .ctor(XComment text)
  string get_Value()
  void set_Value(string value)
  IXmlNode get_ParentNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XProcessingInstructionWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XProcessingInstruction ProcessingInstruction
  string LocalName
  string Value
Методы:
  XProcessingInstruction get_ProcessingInstruction()
  void .ctor(XProcessingInstruction processingInstruction)
  string get_LocalName()
  string get_Value()
  void set_Value(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XContainerWrapper
Наследуется от: XObjectWrapper
Поля:
  List`1<IXmlNode> _childNodes
Свойства:
  XContainer Container
  List`1<IXmlNode> ChildNodes
  IXmlNode ParentNode
Методы:
  XContainer get_Container()
  void .ctor(XContainer container)
  List`1<IXmlNode> get_ChildNodes()
  IXmlNode get_ParentNode()
  IXmlNode WrapNode(XObject node)
  IXmlNode AppendChild(IXmlNode newChild)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XObjectWrapper
Наследуется от: object
Поля:
  List`1<IXmlNode> EmptyChildNodes
  XObject _xmlObject
Свойства:
  object WrappedNode
  XmlNodeType NodeType
  string LocalName
  List`1<IXmlNode> ChildNodes
  List`1<IXmlNode> Attributes
  IXmlNode ParentNode
  string Value
  string NamespaceUri
Методы:
  void .ctor(XObject xmlObject)
  object get_WrappedNode()
  XmlNodeType get_NodeType()
  string get_LocalName()
  List`1<IXmlNode> get_ChildNodes()
  List`1<IXmlNode> get_Attributes()
  IXmlNode get_ParentNode()
  string get_Value()
  void set_Value(string value)
  IXmlNode AppendChild(IXmlNode newChild)
  string get_NamespaceUri()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XAttributeWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XAttribute Attribute
  string Value
  string LocalName
  string NamespaceUri
  IXmlNode ParentNode
Методы:
  XAttribute get_Attribute()
  void .ctor(XAttribute attribute)
  string get_Value()
  void set_Value(string value)
  string get_LocalName()
  string get_NamespaceUri()
  IXmlNode get_ParentNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XElementWrapper
Наследуется от: XContainerWrapper
Поля:
  List`1<IXmlNode> _attributes
Свойства:
  XElement Element
  List`1<IXmlNode> Attributes
  string Value
  string LocalName
  string NamespaceUri
  bool IsEmpty
Методы:
  XElement get_Element()
  void .ctor(XElement element)
  void SetAttributeNode(IXmlNode attribute)
  List`1<IXmlNode> get_Attributes()
  IXmlNode AppendChild(IXmlNode newChild)
  string get_Value()
  void set_Value(string value)
  string get_LocalName()
  string get_NamespaceUri()
  string GetPrefixOfNamespace(string namespaceUri)
  bool get_IsEmpty()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlNodeConverter
Наследуется от: JsonConverter
Поля:
  string TextName
  string CommentName
  string CDataName
  string WhitespaceName
  string SignificantWhitespaceName
  string DeclarationName
  string JsonNamespaceUri
  string <DeserializeRootElementName>k__BackingField
  bool <WriteArrayAttribute>k__BackingField
  bool <OmitRootObject>k__BackingField
Свойства:
  string DeserializeRootElementName
  bool WriteArrayAttribute
  bool OmitRootObject
Методы:
  string get_DeserializeRootElementName()
  void set_DeserializeRootElementName(string value)
  bool get_WriteArrayAttribute()
  void set_WriteArrayAttribute(bool value)
  bool get_OmitRootObject()
  void set_OmitRootObject(bool value)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  IXmlNode WrapXml(object value)
  void PushParentNamespaces(IXmlNode node, XmlNamespaceManager manager)
  string ResolveFullName(IXmlNode node, XmlNamespaceManager manager)
  string GetPropertyName(IXmlNode node, XmlNamespaceManager manager)
  bool IsArray(IXmlNode node)
  void SerializeGroupedNodes(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName)
  void SerializeNode(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName)
  bool AllSameName(IXmlNode node)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void DeserializeValue(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, string propertyName, IXmlNode currentNode)
  void ReadElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName, XmlNamespaceManager manager)
  void CreateElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string elementName, XmlNamespaceManager manager, string elementPrefix, Dictionary`2<string, string> attributeNameValues)
  void AddAttribute(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string attributeName, XmlNamespaceManager manager, string attributePrefix)
  string ConvertTokenToXmlValue(JsonReader reader)
  void ReadArrayElements(JsonReader reader, IXmlDocument document, string propertyName, IXmlNode currentNode, XmlNamespaceManager manager)
  void AddJsonArrayAttribute(IXmlElement element, IXmlDocument document)
  Dictionary`2<string, string> ReadAttributeElements(JsonReader reader, XmlNamespaceManager manager)
  void CreateInstruction(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName)
  void CreateDocumentType(JsonReader reader, IXmlDocument document, IXmlNode currentNode)
  IXmlElement CreateElement(string elementName, IXmlDocument document, string elementPrefix, XmlNamespaceManager manager)
  void DeserializeNode(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, IXmlNode currentNode)
  bool IsNamespaceAttribute(string attributeName, String& prefix)
  bool ValueAttributes(List`1<IXmlNode> c)
  bool CanConvert(Type valueType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonBinaryType
Наследуется от: Enum
Поля:
  byte value__
  BsonBinaryType Binary
  BsonBinaryType Function
  BsonBinaryType BinaryOld
  BsonBinaryType UuidOld
  BsonBinaryType Uuid
  BsonBinaryType Md5
  BsonBinaryType UserDefined
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonBinaryWriter
Наследуется от: object
Поля:
  Encoding Encoding
  BinaryWriter _writer
  Byte[] _largeByteBuffer
  DateTimeKind <DateTimeKindHandling>k__BackingField
Свойства:
  DateTimeKind DateTimeKindHandling
Методы:
  DateTimeKind get_DateTimeKindHandling()
  void set_DateTimeKindHandling(DateTimeKind value)
  void .ctor(BinaryWriter writer)
  void Flush()
  void Close()
  void WriteToken(BsonToken t)
  void WriteTokenInternal(BsonToken t)
  void WriteString(string s, int byteCount, Nullable`1<int> calculatedlengthPrefix)
  void WriteUtf8Bytes(string s, int byteCount)
  int CalculateSize(int stringByteCount)
  int CalculateSizeWithLength(int stringByteCount, bool includeSize)
  int CalculateSize(BsonToken t)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonReader
Наследуется от: JsonReader
Поля:
  int MaxCharBytesSize
  Byte[] SeqRange1
  Byte[] SeqRange2
  Byte[] SeqRange3
  Byte[] SeqRange4
  BinaryReader _reader
  List`1<ContainerContext> _stack
  Byte[] _byteBuffer
  Char[] _charBuffer
  BsonType _currentElementType
  BsonReaderState _bsonReaderState
  ContainerContext _currentContext
  bool _readRootValueAsArray
  bool _jsonNet35BinaryCompatibility
  DateTimeKind _dateTimeKindHandling
Свойства:
  bool JsonNet35BinaryCompatibility
  bool ReadRootValueAsArray
  DateTimeKind DateTimeKindHandling
Методы:
  bool get_JsonNet35BinaryCompatibility()
  void set_JsonNet35BinaryCompatibility(bool value)
  bool get_ReadRootValueAsArray()
  void set_ReadRootValueAsArray(bool value)
  DateTimeKind get_DateTimeKindHandling()
  void set_DateTimeKindHandling(DateTimeKind value)
  void .ctor(Stream stream)
  void .ctor(BinaryReader reader)
  void .ctor(Stream stream, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling)
  void .ctor(BinaryReader reader, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling)
  string ReadElement()
  bool Read()
  void Close()
  bool ReadCodeWScope()
  bool ReadReference()
  bool ReadNormal()
  void PopContext()
  void PushContext(ContainerContext newContext)
  byte ReadByte()
  void ReadType(BsonType type)
  Byte[] ReadBinary(BsonBinaryType& binaryType)
  string ReadString()
  string ReadLengthString()
  string GetString(int length)
  int GetLastFullCharStop(int start)
  int BytesInSequence(byte b)
  void EnsureBuffers()
  double ReadDouble()
  int ReadInt32()
  long ReadInt64()
  BsonType ReadType()
  void MovePosition(int count)
  Byte[] ReadBytes(int count)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonToken
Наследуется от: object
Поля:
  BsonToken <Parent>k__BackingField
  int <CalculatedSize>k__BackingField
Свойства:
  BsonType Type
  BsonToken Parent
  int CalculatedSize
Методы:
  BsonType get_Type()
  BsonToken get_Parent()
  void set_Parent(BsonToken value)
  int get_CalculatedSize()
  void set_CalculatedSize(int value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonObject
Наследуется от: BsonToken
Поля:
  List`1<BsonProperty> _children
Свойства:
  BsonType Type
Методы:
  void Add(string name, BsonToken token)
  BsonType get_Type()
  IEnumerator`1<BsonProperty> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonArray
Наследуется от: BsonToken
Поля:
  List`1<BsonToken> _children
Свойства:
  BsonType Type
Методы:
  void Add(BsonToken token)
  BsonType get_Type()
  IEnumerator`1<BsonToken> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonValue
Наследуется от: BsonToken
Поля:
  object _value
  BsonType _type
Свойства:
  object Value
  BsonType Type
Методы:
  void .ctor(object value, BsonType type)
  object get_Value()
  BsonType get_Type()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonString
Наследуется от: BsonValue
Поля:
  int <ByteCount>k__BackingField
  bool <IncludeLength>k__BackingField
Свойства:
  int ByteCount
  bool IncludeLength
Методы:
  int get_ByteCount()
  void set_ByteCount(int value)
  bool get_IncludeLength()
  void set_IncludeLength(bool value)
  void .ctor(object value, bool includeLength)
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonBinary
Наследуется от: BsonValue
Поля:
  BsonBinaryType <BinaryType>k__BackingField
Свойства:
  BsonBinaryType BinaryType
Методы:
  BsonBinaryType get_BinaryType()
  void set_BinaryType(BsonBinaryType value)
  void .ctor(Byte[] value, BsonBinaryType binaryType)
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonRegex
Наследуется от: BsonToken
Поля:
  BsonString <Pattern>k__BackingField
  BsonString <Options>k__BackingField
Свойства:
  BsonString Pattern
  BsonString Options
  BsonType Type
Методы:
  BsonString get_Pattern()
  void set_Pattern(BsonString value)
  BsonString get_Options()
  void set_Options(BsonString value)
  void .ctor(string pattern, string options)
  BsonType get_Type()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonProperty
Наследуется от: object
Поля:
  BsonString <Name>k__BackingField
  BsonToken <Value>k__BackingField
Свойства:
  BsonString Name
  BsonToken Value
Методы:
  BsonString get_Name()
  void set_Name(BsonString value)
  BsonToken get_Value()
  void set_Value(BsonToken value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonType
Наследуется от: Enum
Поля:
  sbyte value__
  BsonType Number
  BsonType String
  BsonType Object
  BsonType Array
  BsonType Binary
  BsonType Undefined
  BsonType Oid
  BsonType Boolean
  BsonType Date
  BsonType Null
  BsonType Regex
  BsonType Reference
  BsonType Code
  BsonType Symbol
  BsonType CodeWScope
  BsonType Integer
  BsonType TimeStamp
  BsonType Long
  BsonType MinKey
  BsonType MaxKey
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonWriter
Наследуется от: JsonWriter
Поля:
  BsonBinaryWriter _writer
  BsonToken _root
  BsonToken _parent
  string _propertyName
Свойства:
  DateTimeKind DateTimeKindHandling
Методы:
  DateTimeKind get_DateTimeKindHandling()
  void set_DateTimeKindHandling(DateTimeKind value)
  void .ctor(Stream stream)
  void .ctor(BinaryWriter writer)
  void Flush()
  void WriteEnd(JsonToken token)
  void WriteComment(string text)
  void WriteStartConstructor(string name)
  void WriteRaw(string json)
  void WriteRawValue(string json)
  void WriteStartArray()
  void WriteStartObject()
  void WritePropertyName(string name)
  void Close()
  void AddParent(BsonToken container)
  void RemoveParent()
  void AddValue(object value, BsonType type)
  void AddToken(BsonToken token)
  void WriteValue(object value)
  void WriteNull()
  void WriteUndefined()
  void WriteValue(string value)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(double value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Byte[] value)
  void WriteValue(Guid value)
  void WriteValue(TimeSpan value)
  void WriteValue(Uri value)
  void WriteObjectId(Byte[] value)
  void WriteRegex(string pattern, string options)
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonObjectId
Наследуется от: object
Поля:
  Byte[] <Value>k__BackingField
Свойства:
  Byte[] Value
Методы:
  Byte[] get_Value()
  void set_Value(Byte[] value)
  void .ctor(Byte[] value)
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=6 3DE43C11C7130AF9014115BCDC2584DFE6B50579
  __StaticArrayInitTypeSize=28 9E31F24F64765FCAA589F589324D17C9FCF6A06D
  __StaticArrayInitTypeSize=12 ADFD2E1C801C825415DD53F4F2F72A13B389313C
  __StaticArrayInitTypeSize=10 D40004AB0E92BF6C8DFE481B56BE3D04ABDA76EB
  __StaticArrayInitTypeSize=52 DD3AEFEADB1CD615F3017763F1568179FEE640B0
  __StaticArrayInitTypeSize=52 E92B39D8233061927D9ACDE54665E68E7535635A
Свойства:
Методы:
--------------------------------------------------
