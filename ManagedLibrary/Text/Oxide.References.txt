Сборка: Oxide.References.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Empty`1
Наследуется от: object
Поля:
  T[] Array
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Mono.Security.Cryptography.CryptoConvert
Наследуется от: object
Поля:
Свойства:
Методы:
  int ToInt32LE(Byte[] bytes, int offset)
  UInt32 ToUInt32LE(Byte[] bytes, int offset)
  Byte[] Trim(Byte[] array)
  RSA FromCapiPrivateKeyBlob(Byte[] blob, int offset)
  RSA FromCapiPublicKeyBlob(Byte[] blob, int offset)
  RSA FromCapiKeyBlob(Byte[] blob)
  RSA FromCapiKeyBlob(Byte[] blob, int offset)
--------------------------------------------------
Класс: Mono.Collections.Generic.Collection`1
Наследуется от: object
Поля:
  T[] items
  int size
  int version
Свойства:
  int Count
  T Item
  int Capacity
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
  object System.Collections.IList.Item
  int System.Collections.ICollection.Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  int get_Count()
  T get_Item(int index)
  void set_Item(int index, T value)
  int get_Capacity()
  void set_Capacity(int value)
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.ICollection.get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void .ctor()
  void .ctor(int capacity)
  void .ctor(ICollection`1<T> items)
  void Add(T item)
  bool Contains(T item)
  int IndexOf(T item)
  void Insert(int index, T item)
  void RemoveAt(int index)
  bool Remove(T item)
  void Clear()
  void CopyTo(T[] array, int arrayIndex)
  T[] ToArray()
  void CheckIndex(int index)
  void Shift(int start, int delta)
  void OnAdd(T item, int index)
  void OnInsert(T item, int index)
  void OnSet(T item, int index)
  void OnRemove(T item, int index)
  void OnClear()
  void Grow(int desired)
  void Resize(int new_size)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  Enumerator<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
--------------------------------------------------
Класс: Mono.Collections.Generic.ReadOnlyCollection`1
Наследуется от: Collection`1<T>
Поля:
  ReadOnlyCollection`1<T> empty
Свойства:
  ReadOnlyCollection`1<T> Empty
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
Методы:
  ReadOnlyCollection`1<T> get_Empty()
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  void .ctor()
  void .ctor(T[] array)
  void .ctor(Collection`1<T> collection)
  void Initialize(T[] items, int size)
  void Grow(int desired)
  void OnAdd(T item, int index)
  void OnClear()
  void OnInsert(T item, int index)
  void OnRemove(T item, int index)
  void OnSet(T item, int index)
--------------------------------------------------
Класс: Mono.Cecil.MetadataToken
Наследуется от: ValueType
Поля:
  UInt32 token
  MetadataToken Zero
Свойства:
  UInt32 RID
  TokenType TokenType
Методы:
  UInt32 get_RID()
  TokenType get_TokenType()
  void .ctor(UInt32 token)
  void .ctor(TokenType type)
  void .ctor(TokenType type, UInt32 rid)
  void .ctor(TokenType type, int rid)
  int ToInt32()
  UInt32 ToUInt32()
  int GetHashCode()
  bool Equals(object obj)
  bool op_Equality(MetadataToken one, MetadataToken other)
  bool op_Inequality(MetadataToken one, MetadataToken other)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.TokenType
Наследуется от: Enum
Поля:
  UInt32 value__
  TokenType Module
  TokenType TypeRef
  TokenType TypeDef
  TokenType Field
  TokenType Method
  TokenType Param
  TokenType InterfaceImpl
  TokenType MemberRef
  TokenType CustomAttribute
  TokenType Permission
  TokenType Signature
  TokenType Event
  TokenType Property
  TokenType ModuleRef
  TokenType TypeSpec
  TokenType Assembly
  TokenType AssemblyRef
  TokenType File
  TokenType ExportedType
  TokenType ManifestResource
  TokenType GenericParam
  TokenType MethodSpec
  TokenType String
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Mixin
Наследуется от: object
Поля:
  object NoValue
  object NotResolved
  int NotResolvedMarker
  int NoDataMarker
Свойства:
Методы:
  UInt32 ReadCompressedUInt32(Byte[] data, Int32& position)
  MetadataToken GetMetadataToken(CodedIndex self, UInt32 data)
  UInt32 CompressMetadataToken(CodedIndex self, MetadataToken token)
  int GetSize(CodedIndex self, Func`2<Table, int> counter)
  bool GetHasSecurityDeclarations(ISecurityDeclarationProvider self, ModuleDefinition module)
  Collection`1<SecurityDeclaration> GetSecurityDeclarations(ISecurityDeclarationProvider self, Collection`1& variable, ModuleDefinition module)
  void CheckName(string name)
  void ResolveConstant(IConstantProvider self, Object& constant, ModuleDefinition module)
  bool GetHasCustomAttributes(ICustomAttributeProvider self, ModuleDefinition module)
  Collection`1<CustomAttribute> GetCustomAttributes(ICustomAttributeProvider self, Collection`1& variable, ModuleDefinition module)
  bool ContainsGenericParameter(IGenericInstance self)
  void GenericInstanceFullName(IGenericInstance self, StringBuilder builder)
  bool GetHasGenericParameters(IGenericParameterProvider self, ModuleDefinition module)
  Collection`1<GenericParameter> GetGenericParameters(IGenericParameterProvider self, Collection`1& collection, ModuleDefinition module)
  bool GetHasMarshalInfo(IMarshalInfoProvider self, ModuleDefinition module)
  MarshalInfo GetMarshalInfo(IMarshalInfoProvider self, MarshalInfo& variable, ModuleDefinition module)
  void CheckModifier(TypeReference modifierType, TypeReference type)
  bool HasImplicitThis(IMethodSignature self)
  void MethodSignatureFullName(IMethodSignature self, StringBuilder builder)
  bool GetAttributes(UInt32 self, UInt32 attributes)
  UInt32 SetAttributes(UInt32 self, UInt32 attributes, bool value)
  bool GetMaskedAttributes(UInt32 self, UInt32 mask, UInt32 attributes)
  UInt32 SetMaskedAttributes(UInt32 self, UInt32 mask, UInt32 attributes, bool value)
  bool GetAttributes(ushort self, ushort attributes)
  ushort SetAttributes(ushort self, ushort attributes, bool value)
  bool GetMaskedAttributes(ushort self, ushort mask, UInt32 attributes)
  ushort SetMaskedAttributes(ushort self, ushort mask, UInt32 attributes, bool value)
  ParameterDefinition GetParameter(MethodBody self, int index)
  VariableDefinition GetVariable(MethodBody self, int index)
  bool GetSemantics(MethodDefinition self, MethodSemanticsAttributes semantics)
  void SetSemantics(MethodDefinition self, MethodSemanticsAttributes semantics, bool value)
  bool IsVarArg(IMethodSignature self)
  int GetSentinelPosition(IMethodSignature self)
  void CheckParameters(object parameters)
  bool HasImage(ModuleDefinition self)
  bool IsCorlib(ModuleDefinition module)
  string GetFullyQualifiedName(Stream self)
  TargetRuntime ParseRuntime(string self)
  string RuntimeVersionString(TargetRuntime runtime)
  TypeReference GetEnumUnderlyingType(TypeDefinition self)
  TypeDefinition GetNestedType(TypeDefinition self, string fullname)
  bool IsPrimitive(ElementType self)
  string TypeFullName(TypeReference self)
  bool IsTypeOf(TypeReference self, string namespace, string name)
  bool IsTypeSpecification(TypeReference type)
  TypeDefinition CheckedResolve(TypeReference self)
  void CheckType(TypeReference type)
  RSA CreateRSA(StrongNameKeyPair key_pair)
  bool TryGetKeyContainer(ISerializable key_pair, Byte[]& key, String& key_container)
  bool IsNullOrEmpty(T[] self)
  bool IsNullOrEmpty(Collection`1<T> self)
  T[] Resize(T[] self, int length)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.ArrayDimension
Наследуется от: ValueType
Поля:
  Nullable`1<int> lower_bound
  Nullable`1<int> upper_bound
Свойства:
  Nullable`1<int> LowerBound
  Nullable`1<int> UpperBound
  bool IsSized
Методы:
  Nullable`1<int> get_LowerBound()
  void set_LowerBound(Nullable`1<int> value)
  Nullable`1<int> get_UpperBound()
  void set_UpperBound(Nullable`1<int> value)
  bool get_IsSized()
  void .ctor(Nullable`1<int> lowerBound, Nullable`1<int> upperBound)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.ArrayType
Наследуется от: TypeSpecification
Поля:
  Collection`1<ArrayDimension> dimensions
Свойства:
  Collection`1<ArrayDimension> Dimensions
  int Rank
  bool IsVector
  bool IsValueType
  string Name
  string FullName
  string Suffix
  bool IsArray
Методы:
  Collection`1<ArrayDimension> get_Dimensions()
  int get_Rank()
  bool get_IsVector()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  string get_Name()
  string get_FullName()
  string get_Suffix()
  bool get_IsArray()
  void .ctor(TypeReference type)
  void .ctor(TypeReference type, int rank)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyDefinition
Наследуется от: object
Поля:
  AssemblyNameDefinition name
  ModuleDefinition main_module
  Collection`1<ModuleDefinition> modules
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<SecurityDeclaration> security_declarations
Свойства:
  AssemblyNameDefinition Name
  string FullName
  MetadataToken MetadataToken
  Collection`1<ModuleDefinition> Modules
  ModuleDefinition MainModule
  MethodDefinition EntryPoint
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
Методы:
  AssemblyNameDefinition get_Name()
  void set_Name(AssemblyNameDefinition value)
  string get_FullName()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  Collection`1<ModuleDefinition> get_Modules()
  ModuleDefinition get_MainModule()
  MethodDefinition get_EntryPoint()
  void set_EntryPoint(MethodDefinition value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
  void .ctor()
  AssemblyDefinition CreateAssembly(AssemblyNameDefinition assemblyName, string moduleName, ModuleKind kind)
  AssemblyDefinition CreateAssembly(AssemblyNameDefinition assemblyName, string moduleName, ModuleParameters parameters)
  AssemblyDefinition ReadAssembly(string fileName)
  AssemblyDefinition ReadAssembly(string fileName, ReaderParameters parameters)
  AssemblyDefinition ReadAssembly(Stream stream)
  AssemblyDefinition ReadAssembly(Stream stream, ReaderParameters parameters)
  AssemblyDefinition ReadAssembly(ModuleDefinition module)
  void Write(string fileName)
  void Write(Stream stream)
  void Write(string fileName, WriterParameters parameters)
  void Write(Stream stream, WriterParameters parameters)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.AssemblyAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  AssemblyAttributes PublicKey
  AssemblyAttributes SideBySideCompatible
  AssemblyAttributes Retargetable
  AssemblyAttributes WindowsRuntime
  AssemblyAttributes DisableJITCompileOptimizer
  AssemblyAttributes EnableJITCompileTracking
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.AssemblyHashAlgorithm
Наследуется от: Enum
Поля:
  UInt32 value__
  AssemblyHashAlgorithm None
  AssemblyHashAlgorithm Reserved
  AssemblyHashAlgorithm SHA1
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.AssemblyLinkedResource
Наследуется от: Resource
Поля:
  AssemblyNameReference reference
Свойства:
  AssemblyNameReference Assembly
  ResourceType ResourceType
Методы:
  AssemblyNameReference get_Assembly()
  void set_Assembly(AssemblyNameReference value)
  ResourceType get_ResourceType()
  void .ctor(string name, ManifestResourceAttributes flags)
  void .ctor(string name, ManifestResourceAttributes flags, AssemblyNameReference reference)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyNameDefinition
Наследуется от: AssemblyNameReference
Поля:
Свойства:
  Byte[] Hash
Методы:
  Byte[] get_Hash()
  void .ctor()
  void .ctor(string name, Version version)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyNameReference
Наследуется от: object
Поля:
  string name
  string culture
  Version version
  UInt32 attributes
  Byte[] public_key
  Byte[] public_key_token
  AssemblyHashAlgorithm hash_algorithm
  Byte[] hash
  MetadataToken token
  string full_name
Свойства:
  string Name
  string Culture
  Version Version
  AssemblyAttributes Attributes
  bool HasPublicKey
  bool IsSideBySideCompatible
  bool IsRetargetable
  bool IsWindowsRuntime
  Byte[] PublicKey
  Byte[] PublicKeyToken
  MetadataScopeType MetadataScopeType
  string FullName
  AssemblyHashAlgorithm HashAlgorithm
  Byte[] Hash
  MetadataToken MetadataToken
Методы:
  string get_Name()
  void set_Name(string value)
  string get_Culture()
  void set_Culture(string value)
  Version get_Version()
  void set_Version(Version value)
  AssemblyAttributes get_Attributes()
  void set_Attributes(AssemblyAttributes value)
  bool get_HasPublicKey()
  void set_HasPublicKey(bool value)
  bool get_IsSideBySideCompatible()
  void set_IsSideBySideCompatible(bool value)
  bool get_IsRetargetable()
  void set_IsRetargetable(bool value)
  bool get_IsWindowsRuntime()
  void set_IsWindowsRuntime(bool value)
  Byte[] get_PublicKey()
  void set_PublicKey(Byte[] value)
  Byte[] get_PublicKeyToken()
  void set_PublicKeyToken(Byte[] value)
  Byte[] HashPublicKey()
  MetadataScopeType get_MetadataScopeType()
  string get_FullName()
  AssemblyNameReference Parse(string fullName)
  AssemblyHashAlgorithm get_HashAlgorithm()
  void set_HashAlgorithm(AssemblyHashAlgorithm value)
  Byte[] get_Hash()
  void set_Hash(Byte[] value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  void .ctor()
  void .ctor(string name, Version version)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.ModuleReader
Наследуется от: object
Поля:
  Image image
  ModuleDefinition module
Свойства:
Методы:
  void .ctor(Image image, ReadingMode mode)
  void ReadModule()
  void ReadModuleManifest(MetadataReader reader)
  void ReadAssembly(MetadataReader reader)
  ModuleDefinition CreateModuleFrom(Image image, ReaderParameters parameters)
  void ReadSymbols(ModuleDefinition module, ReaderParameters parameters)
  ModuleReader CreateModuleReader(Image image, ReadingMode mode)
--------------------------------------------------
Класс: Mono.Cecil.ImmediateModuleReader
Наследуется от: ModuleReader
Поля:
Свойства:
Методы:
  void .ctor(Image image)
  void ReadModule()
  void ReadModule(ModuleDefinition module)
  void ReadTypes(Collection`1<TypeDefinition> types)
  void ReadType(TypeDefinition type)
  void ReadGenericParameters(IGenericParameterProvider provider)
  void ReadSecurityDeclarations(ISecurityDeclarationProvider provider)
  void ReadCustomAttributes(ICustomAttributeProvider provider)
  void ReadFields(TypeDefinition type)
  void ReadMethods(TypeDefinition type)
  void ReadParameters(MethodDefinition method)
  void ReadProperties(TypeDefinition type)
  void ReadEvents(TypeDefinition type)
  void Read(object collection)
  ModuleDefinition <ReadModule>b__1_0(ModuleDefinition module, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.DeferredModuleReader
Наследуется от: ModuleReader
Поля:
Свойства:
Методы:
  void .ctor(Image image)
  void ReadModule()
  ModuleDefinition <ReadModule>b__1_0(ModuleDefinition module, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.MetadataReader
Наследуется от: ByteBuffer
Поля:
  Image image
  ModuleDefinition module
  MetadataSystem metadata
  IGenericContext context
  CodeReader code
Свойства:
  UInt32 Position
Методы:
  UInt32 get_Position()
  void set_Position(UInt32 value)
  void .ctor(ModuleDefinition module)
  int GetCodedIndexSize(CodedIndex index)
  UInt32 ReadByIndexSize(int size)
  Byte[] ReadBlob()
  Byte[] ReadBlob(UInt32 signature)
  UInt32 ReadBlobIndex()
  string ReadString()
  UInt32 ReadStringIndex()
  UInt32 ReadTableIndex(Table table)
  MetadataToken ReadMetadataToken(CodedIndex index)
  int MoveTo(Table table)
  bool MoveTo(Table table, UInt32 row)
  AssemblyNameDefinition ReadAssemblyNameDefinition()
  ModuleDefinition Populate(ModuleDefinition module)
  void InitializeAssemblyReferences()
  Collection`1<AssemblyNameReference> ReadAssemblyReferences()
  MethodDefinition ReadEntryPoint()
  Collection`1<ModuleDefinition> ReadModules()
  string GetModuleFileName(string name)
  void InitializeModuleReferences()
  Collection`1<ModuleReference> ReadModuleReferences()
  bool HasFileResource()
  Collection`1<Resource> ReadResources()
  Row`3<FileAttributes, string, UInt32> ReadFileRecord(UInt32 rid)
  MemoryStream GetManagedResourceStream(UInt32 offset)
  void PopulateVersionAndFlags(AssemblyNameReference name)
  void PopulateNameAndCulture(AssemblyNameReference name)
  TypeDefinitionCollection ReadTypes()
  void CompleteTypes()
  void InitializeTypeDefinitions()
  bool IsNested(TypeAttributes attributes)
  bool HasNestedTypes(TypeDefinition type)
  Collection`1<TypeDefinition> ReadNestedTypes(TypeDefinition type)
  void InitializeNestedTypes()
  void AddNestedMapping(UInt32 declaring, UInt32 nested)
  TValue[] AddMapping(Dictionary`2<TKey, TValue[]> cache, TKey key, TValue value)
  TypeDefinition ReadType(UInt32 rid)
  TypeDefinition GetNestedTypeDeclaringType(TypeDefinition type)
  Range ReadFieldsRange(UInt32 type_index)
  Range ReadMethodsRange(UInt32 type_index)
  Range ReadListRange(UInt32 current_index, Table current, Table target)
  Row`2<short, int> ReadTypeLayout(TypeDefinition type)
  void InitializeTypeLayouts()
  TypeReference GetTypeDefOrRef(MetadataToken token)
  TypeDefinition GetTypeDefinition(UInt32 rid)
  TypeDefinition ReadTypeDefinition(UInt32 rid)
  void InitializeTypeReferences()
  TypeReference GetTypeReference(string scope, string full_name)
  TypeReference GetTypeReference(UInt32 rid)
  TypeReference ReadTypeReference(UInt32 rid)
  IMetadataScope GetTypeReferenceScope(MetadataToken scope)
  IEnumerable`1<TypeReference> GetTypeReferences()
  TypeReference GetTypeSpecification(UInt32 rid)
  SignatureReader ReadSignature(UInt32 signature)
  bool HasInterfaces(TypeDefinition type)
  Collection`1<TypeReference> ReadInterfaces(TypeDefinition type)
  void InitializeInterfaces()
  void AddInterfaceMapping(UInt32 type, MetadataToken interface)
  Collection`1<FieldDefinition> ReadFields(TypeDefinition type)
  void ReadField(UInt32 field_rid, Collection`1<FieldDefinition> fields)
  void InitializeFields()
  TypeReference ReadFieldType(UInt32 signature)
  int ReadFieldRVA(FieldDefinition field)
  Byte[] GetFieldInitializeValue(int size, UInt32 rva)
  int GetFieldTypeSize(TypeReference type)
  void InitializeFieldRVAs()
  int ReadFieldLayout(FieldDefinition field)
  void InitializeFieldLayouts()
  bool HasEvents(TypeDefinition type)
  Collection`1<EventDefinition> ReadEvents(TypeDefinition type)
  void ReadEvent(UInt32 event_rid, Collection`1<EventDefinition> events)
  void InitializeEvents()
  Range ReadEventsRange(UInt32 rid)
  bool HasProperties(TypeDefinition type)
  Collection`1<PropertyDefinition> ReadProperties(TypeDefinition type)
  void ReadProperty(UInt32 property_rid, Collection`1<PropertyDefinition> properties)
  void InitializeProperties()
  Range ReadPropertiesRange(UInt32 rid)
  MethodSemanticsAttributes ReadMethodSemantics(MethodDefinition method)
  EventDefinition GetEvent(TypeDefinition type, MetadataToken token)
  PropertyDefinition GetProperty(TypeDefinition type, MetadataToken token)
  TMember GetMember(Collection`1<TMember> members, MetadataToken token)
  void InitializeMethodSemantics()
  PropertyDefinition ReadMethods(PropertyDefinition property)
  EventDefinition ReadMethods(EventDefinition event)
  MethodSemanticsAttributes ReadAllSemantics(MethodDefinition method)
  void ReadAllSemantics(TypeDefinition type)
  Range ReadParametersRange(UInt32 method_rid)
  Collection`1<MethodDefinition> ReadMethods(TypeDefinition type)
  void ReadPointers(Table ptr, Table table, Range range, Collection`1<TMember> members, Action`2<UInt32, Collection`1<TMember>> reader)
  bool IsDeleted(IMemberDefinition member)
  void InitializeMethods()
  void ReadMethod(UInt32 method_rid, Collection`1<MethodDefinition> methods)
  void ReadParameters(MethodDefinition method, Range param_range)
  void ReadParameterPointers(MethodDefinition method, Range range)
  void ReadParameter(UInt32 param_rid, MethodDefinition method)
  void ReadMethodSignature(UInt32 signature, IMethodSignature method)
  PInvokeInfo ReadPInvokeInfo(MethodDefinition method)
  void InitializePInvokes()
  bool HasGenericParameters(IGenericParameterProvider provider)
  Collection`1<GenericParameter> ReadGenericParameters(IGenericParameterProvider provider)
  void ReadGenericParametersRange(Range range, IGenericParameterProvider provider, GenericParameterCollection generic_parameters)
  void InitializeGenericParameters()
  Dictionary`2<MetadataToken, Range[]> InitializeRanges(Table table, Func`1<MetadataToken> get_next)
  void AddRange(Dictionary`2<MetadataToken, Range[]> ranges, MetadataToken owner, Range range)
  bool HasGenericConstraints(GenericParameter generic_parameter)
  Collection`1<TypeReference> ReadGenericConstraints(GenericParameter generic_parameter)
  void InitializeGenericConstraints()
  void AddGenericConstraintMapping(UInt32 generic_parameter, MetadataToken constraint)
  bool HasOverrides(MethodDefinition method)
  Collection`1<MethodReference> ReadOverrides(MethodDefinition method)
  void InitializeOverrides()
  void AddOverrideMapping(UInt32 method_rid, MetadataToken override)
  MethodBody ReadMethodBody(MethodDefinition method)
  CallSite ReadCallSite(MetadataToken token)
  VariableDefinitionCollection ReadVariables(MetadataToken local_var_token)
  IMetadataTokenProvider LookupToken(MetadataToken token)
  FieldDefinition GetFieldDefinition(UInt32 rid)
  FieldDefinition LookupField(UInt32 rid)
  MethodDefinition GetMethodDefinition(UInt32 rid)
  MethodDefinition LookupMethod(UInt32 rid)
  MethodSpecification GetMethodSpecification(UInt32 rid)
  MethodSpecification ReadMethodSpecSignature(UInt32 signature, MethodReference method)
  MemberReference GetMemberReference(UInt32 rid)
  MemberReference ReadMemberReference(UInt32 rid)
  MemberReference ReadTypeMemberReference(MetadataToken type, string name, UInt32 signature)
  MemberReference ReadMemberReferenceSignature(UInt32 signature, TypeReference declaring_type)
  MemberReference ReadMethodMemberReference(MetadataToken token, string name, UInt32 signature)
  void InitializeMemberReferences()
  IEnumerable`1<MemberReference> GetMemberReferences()
  void InitializeConstants()
  object ReadConstant(IConstantProvider owner)
  string ReadConstantString(Byte[] blob)
  object ReadConstantPrimitive(ElementType type, UInt32 signature)
  void InitializeCustomAttributes()
  bool HasCustomAttributes(ICustomAttributeProvider owner)
  Collection`1<CustomAttribute> ReadCustomAttributes(ICustomAttributeProvider owner)
  void ReadCustomAttributeRange(Range range, Collection`1<CustomAttribute> custom_attributes)
  int RangesSize(Range[] ranges)
  Byte[] ReadCustomAttributeBlob(UInt32 signature)
  void ReadCustomAttributeSignature(CustomAttribute attribute)
  void InitializeMarshalInfos()
  bool HasMarshalInfo(IMarshalInfoProvider owner)
  MarshalInfo ReadMarshalInfo(IMarshalInfoProvider owner)
  void InitializeSecurityDeclarations()
  bool HasSecurityDeclarations(ISecurityDeclarationProvider owner)
  Collection`1<SecurityDeclaration> ReadSecurityDeclarations(ISecurityDeclarationProvider owner)
  void ReadSecurityDeclarationRange(Range range, Collection`1<SecurityDeclaration> security_declarations)
  Byte[] ReadSecurityDeclarationBlob(UInt32 signature)
  void ReadSecurityDeclarationSignature(SecurityDeclaration declaration)
  void ReadXmlSecurityDeclaration(UInt32 signature, SecurityDeclaration declaration)
  Collection`1<ExportedType> ReadExportedTypes()
  IMetadataScope GetExportedTypeScope(MetadataToken token)
  ModuleReference GetModuleReferenceFromFile(MetadataToken token)
  void InitializeCollection(object o)
  MetadataToken <InitializeGenericParameters>b__110_0()
  MetadataToken <InitializeCustomAttributes>b__142_0()
  MetadataToken <InitializeSecurityDeclarations>b__152_0()
--------------------------------------------------
Класс: Mono.Cecil.SignatureReader
Наследуется от: ByteBuffer
Поля:
  MetadataReader reader
  UInt32 start
  UInt32 sig_length
Свойства:
  TypeSystem TypeSystem
Методы:
  TypeSystem get_TypeSystem()
  void .ctor(UInt32 blob, MetadataReader reader)
  void MoveToBlob(UInt32 blob)
  MetadataToken ReadTypeTokenSignature()
  GenericParameter GetGenericParameter(GenericParameterType type, UInt32 var)
  GenericParameter GetUnboundGenericParameter(GenericParameterType type, int index)
  void CheckGenericContext(IGenericParameterProvider owner, int index)
  void ReadGenericInstanceSignature(IGenericParameterProvider provider, IGenericInstance instance)
  ArrayType ReadArrayTypeSignature()
  TypeReference GetTypeDefOrRef(MetadataToken token)
  TypeReference ReadTypeSignature()
  TypeReference ReadTypeSignature(ElementType etype)
  void ReadMethodSignature(IMethodSignature method)
  object ReadConstantSignature(ElementType type)
  void ReadCustomAttributeConstructorArguments(CustomAttribute attribute, Collection`1<ParameterDefinition> parameters)
  CustomAttributeArgument ReadCustomAttributeFixedArgument(TypeReference type)
  void ReadCustomAttributeNamedArguments(ushort count, Collection`1& fields, Collection`1& properties)
  void ReadCustomAttributeNamedArgument(Collection`1& fields, Collection`1& properties)
  Collection`1<CustomAttributeNamedArgument> GetCustomAttributeNamedArgumentCollection(Collection`1& collection)
  CustomAttributeArgument ReadCustomAttributeFixedArrayArgument(ArrayType type)
  CustomAttributeArgument ReadCustomAttributeElement(TypeReference type)
  object ReadCustomAttributeElementValue(TypeReference type)
  object ReadPrimitiveValue(ElementType type)
  TypeReference GetPrimitiveType(ElementType etype)
  TypeReference ReadCustomAttributeFieldOrPropType()
  TypeReference ReadTypeReference()
  object ReadCustomAttributeEnum(TypeReference enum_type)
  SecurityAttribute ReadSecurityAttribute()
  MarshalInfo ReadMarshalInfo()
  NativeType ReadNativeType()
  VariantType ReadVariantType()
  string ReadUTF8String()
  bool CanReadMore()
--------------------------------------------------
Класс: Mono.Cecil.ModuleWriter
Наследуется от: object
Поля:
Свойства:
Методы:
  void WriteModuleTo(ModuleDefinition module, Stream stream, WriterParameters parameters)
  void BuildMetadata(ModuleDefinition module, MetadataBuilder metadata)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, string fq_name, ISymbolWriterProvider symbol_writer_provider)
--------------------------------------------------
Класс: Mono.Cecil.MetadataTable
Наследуется от: object
Поля:
Свойства:
  int Length
  bool IsLarge
Методы:
  int get_Length()
  bool get_IsLarge()
  void Write(TableHeapBuffer buffer)
  void Sort()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.OneRowTable`1
Наследуется от: MetadataTable
Поля:
  TRow row
Свойства:
  int Length
Методы:
  int get_Length()
  void Sort()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MetadataTable`1
Наследуется от: MetadataTable
Поля:
  TRow[] rows
  int length
Свойства:
  int Length
Методы:
  int get_Length()
  int AddRow(TRow row)
  void Grow()
  void Sort()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.SortedTable`1
Наследуется от: MetadataTable`1<TRow>
Поля:
Свойства:
Методы:
  void Sort()
  int Compare(UInt32 x, UInt32 y)
  int Compare(TRow x, TRow y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ModuleTable
Наследуется от: OneRowTable`1<UInt32>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.TypeRefTable
Наследуется от: MetadataTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.TypeDefTable
Наследуется от: MetadataTable`1<Row`6<TypeAttributes, UInt32, UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldTable
Наследуется от: MetadataTable`1<Row`3<FieldAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodTable
Наследуется от: MetadataTable`1<Row`6<UInt32, MethodImplAttributes, MethodAttributes, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ParamTable
Наследуется от: MetadataTable`1<Row`3<ParameterAttributes, ushort, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.InterfaceImplTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MemberRefTable
Наследуется от: MetadataTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ConstantTable
Наследуется от: SortedTable`1<Row`3<ElementType, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<ElementType, UInt32, UInt32> x, Row`3<ElementType, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeTable
Наследуется от: SortedTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<UInt32, UInt32, UInt32> x, Row`3<UInt32, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldMarshalTable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.DeclSecurityTable
Наследуется от: SortedTable`1<Row`3<SecurityAction, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<SecurityAction, UInt32, UInt32> x, Row`3<SecurityAction, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ClassLayoutTable
Наследуется от: SortedTable`1<Row`3<ushort, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<ushort, UInt32, UInt32> x, Row`3<ushort, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldLayoutTable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.StandAloneSigTable
Наследуется от: MetadataTable`1<UInt32>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.EventMapTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.EventTable
Наследуется от: MetadataTable`1<Row`3<EventAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PropertyMapTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PropertyTable
Наследуется от: MetadataTable`1<Row`3<PropertyAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodSemanticsTable
Наследуется от: SortedTable`1<Row`3<MethodSemanticsAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<MethodSemanticsAttributes, UInt32, UInt32> x, Row`3<MethodSemanticsAttributes, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodImplTable
Наследуется от: MetadataTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ModuleRefTable
Наследуется от: MetadataTable`1<UInt32>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.TypeSpecTable
Наследуется от: MetadataTable`1<UInt32>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ImplMapTable
Наследуется от: SortedTable`1<Row`4<PInvokeAttributes, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`4<PInvokeAttributes, UInt32, UInt32, UInt32> x, Row`4<PInvokeAttributes, UInt32, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldRVATable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
  int position
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.AssemblyTable
Наследуется от: OneRowTable`1<Row`9<AssemblyHashAlgorithm, ushort, ushort, ushort, ushort, AssemblyAttributes, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.AssemblyRefTable
Наследуется от: MetadataTable`1<Row`9<ushort, ushort, ushort, ushort, AssemblyAttributes, UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FileTable
Наследуется от: MetadataTable`1<Row`3<FileAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ExportedTypeTable
Наследуется от: MetadataTable`1<Row`5<TypeAttributes, UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ManifestResourceTable
Наследуется от: MetadataTable`1<Row`4<UInt32, ManifestResourceAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.NestedClassTable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.GenericParamTable
Наследуется от: MetadataTable`1<Row`4<ushort, GenericParameterAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodSpecTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.GenericParamConstraintTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MetadataBuilder
Наследуется от: object
Поля:
  ModuleDefinition module
  ISymbolWriterProvider symbol_writer_provider
  ISymbolWriter symbol_writer
  TextMap text_map
  string fq_name
  Dictionary`2<Row`3<UInt32, UInt32, UInt32>, MetadataToken> type_ref_map
  Dictionary`2<UInt32, MetadataToken> type_spec_map
  Dictionary`2<Row`3<UInt32, UInt32, UInt32>, MetadataToken> member_ref_map
  Dictionary`2<Row`2<UInt32, UInt32>, MetadataToken> method_spec_map
  Collection`1<GenericParameter> generic_parameters
  Dictionary`2<MetadataToken, MetadataToken> method_def_map
  CodeWriter code
  DataBuffer data
  ResourceBuffer resources
  StringHeapBuffer string_heap
  UserStringHeapBuffer user_string_heap
  BlobHeapBuffer blob_heap
  TableHeapBuffer table_heap
  MetadataToken entry_point
  UInt32 type_rid
  UInt32 field_rid
  UInt32 method_rid
  UInt32 param_rid
  UInt32 property_rid
  UInt32 event_rid
  TypeRefTable type_ref_table
  TypeDefTable type_def_table
  FieldTable field_table
  MethodTable method_table
  ParamTable param_table
  InterfaceImplTable iface_impl_table
  MemberRefTable member_ref_table
  ConstantTable constant_table
  CustomAttributeTable custom_attribute_table
  DeclSecurityTable declsec_table
  StandAloneSigTable standalone_sig_table
  EventMapTable event_map_table
  EventTable event_table
  PropertyMapTable property_map_table
  PropertyTable property_table
  TypeSpecTable typespec_table
  MethodSpecTable method_spec_table
  bool write_symbols
Свойства:
Методы:
  void .ctor(ModuleDefinition module, string fq_name, ISymbolWriterProvider symbol_writer_provider, ISymbolWriter symbol_writer)
  TextMap CreateTextMap()
  TTable GetTable(Table table)
  UInt32 GetStringIndex(string string)
  UInt32 GetBlobIndex(ByteBuffer blob)
  UInt32 GetBlobIndex(Byte[] blob)
  void BuildMetadata()
  void BuildModule()
  void BuildAssembly()
  void BuildModules()
  string GetModuleFileName(string name)
  void AddAssemblyReferences()
  void AddModuleReferences()
  void AddResources()
  UInt32 AddLinkedResource(LinkedResource resource)
  UInt32 AddEmbeddedResource(EmbeddedResource resource)
  void AddExportedTypes()
  MetadataToken GetExportedTypeScope(ExportedType exported_type)
  void BuildTypes()
  void AttachTokens()
  void AttachTypeDefToken(TypeDefinition type)
  void AttachNestedTypesDefToken(TypeDefinition type)
  void AttachFieldsDefToken(TypeDefinition type)
  void AttachMethodsDefToken(TypeDefinition type)
  bool TryGetOriginalMethodToken(MetadataToken new_token, MetadataToken& original)
  MetadataToken GetTypeToken(TypeReference type)
  MetadataToken GetTypeSpecToken(TypeReference type)
  MetadataToken AddTypeSpecification(TypeReference type, UInt32 row)
  MetadataToken GetTypeRefToken(TypeReference type)
  Row`3<UInt32, UInt32, UInt32> CreateTypeRefRow(TypeReference type)
  MetadataToken GetScopeToken(TypeReference type)
  UInt32 MakeCodedRID(IMetadataTokenProvider provider, CodedIndex index)
  UInt32 MakeCodedRID(MetadataToken token, CodedIndex index)
  MetadataToken AddTypeReference(TypeReference type, Row`3<UInt32, UInt32, UInt32> row)
  void AddTypeDefs()
  void AddType(TypeDefinition type)
  void AddGenericParameters(IGenericParameterProvider owner)
  void AddGenericParameters()
  void AddConstraints(GenericParameter generic_parameter, GenericParamConstraintTable table)
  void AddInterfaces(TypeDefinition type)
  void AddLayoutInfo(TypeDefinition type)
  void AddNestedTypes(TypeDefinition type)
  void AddFields(TypeDefinition type)
  void AddField(FieldDefinition field)
  void AddFieldRVA(FieldDefinition field)
  void AddFieldLayout(FieldDefinition field)
  void AddMethods(TypeDefinition type)
  void AddMethod(MethodDefinition method)
  void AddParameters(MethodDefinition method)
  void AddPInvokeInfo(MethodDefinition method)
  void AddOverrides(MethodDefinition method)
  bool RequiresParameterRow(ParameterDefinition parameter)
  void AddParameter(ushort sequence, ParameterDefinition parameter, ParamTable table)
  void AddMarshalInfo(IMarshalInfoProvider owner)
  void AddProperties(TypeDefinition type)
  void AddProperty(PropertyDefinition property)
  void AddOtherSemantic(IMetadataTokenProvider owner, Collection`1<MethodDefinition> others)
  void AddEvents(TypeDefinition type)
  void AddEvent(EventDefinition event)
  void AddSemantic(MethodSemanticsAttributes semantics, IMetadataTokenProvider provider, MethodDefinition method)
  void AddConstant(IConstantProvider owner, TypeReference type)
  ElementType GetConstantType(TypeReference constant_type, object constant)
  ElementType GetConstantType(Type type)
  void AddCustomAttributes(ICustomAttributeProvider owner)
  void AddSecurityDeclarations(ISecurityDeclarationProvider owner)
  MetadataToken GetMemberRefToken(MemberReference member)
  Row`3<UInt32, UInt32, UInt32> CreateMemberRefRow(MemberReference member)
  void AddMemberReference(MemberReference member, Row`3<UInt32, UInt32, UInt32> row)
  MetadataToken GetMethodSpecToken(MethodSpecification method_spec)
  void AddMethodSpecification(MethodSpecification method_spec, Row`2<UInt32, UInt32> row)
  Row`2<UInt32, UInt32> CreateMethodSpecRow(MethodSpecification method_spec)
  SignatureWriter CreateSignatureWriter()
  SignatureWriter GetMethodSpecSignature(MethodSpecification method_spec)
  UInt32 AddStandAloneSignature(UInt32 signature)
  UInt32 GetLocalVariableBlobIndex(Collection`1<VariableDefinition> variables)
  UInt32 GetCallSiteBlobIndex(CallSite call_site)
  SignatureWriter GetVariablesSignature(Collection`1<VariableDefinition> variables)
  SignatureWriter GetFieldSignature(FieldReference field)
  SignatureWriter GetMethodSignature(IMethodSignature method)
  SignatureWriter GetMemberRefSignature(MemberReference member)
  SignatureWriter GetPropertySignature(PropertyDefinition property)
  SignatureWriter GetTypeSpecSignature(TypeReference type)
  SignatureWriter GetConstantSignature(ElementType type, object value)
  SignatureWriter GetCustomAttributeSignature(CustomAttribute attribute)
  SignatureWriter GetSecurityDeclarationSignature(SecurityDeclaration declaration)
  SignatureWriter GetMarshalInfoSignature(IMarshalInfoProvider owner)
  Exception CreateForeignMemberException(MemberReference member)
  MetadataToken LookupToken(IMetadataTokenProvider provider)
--------------------------------------------------
Класс: Mono.Cecil.SignatureWriter
Наследуется от: ByteBuffer
Поля:
  MetadataBuilder metadata
Свойства:
Методы:
  void .ctor(MetadataBuilder metadata)
  void WriteElementType(ElementType element_type)
  void WriteUTF8String(string string)
  void WriteMethodSignature(IMethodSignature method)
  UInt32 MakeTypeDefOrRefCodedRID(TypeReference type)
  void WriteTypeSignature(TypeReference type)
  void WriteArrayTypeSignature(ArrayType array)
  void WriteGenericInstanceSignature(IGenericInstance instance)
  void WriteModifierSignature(ElementType element_type, IModifierType type)
  bool TryWriteElementType(TypeReference type)
  void WriteConstantString(string value)
  void WriteConstantPrimitive(object value)
  void WriteCustomAttributeConstructorArguments(CustomAttribute attribute)
  void WriteCustomAttributeFixedArgument(TypeReference type, CustomAttributeArgument argument)
  void WriteCustomAttributeFixedArrayArgument(ArrayType type, CustomAttributeArgument argument)
  void WriteCustomAttributeElement(TypeReference type, CustomAttributeArgument argument)
  void WriteCustomAttributeValue(TypeReference type, object value)
  void WritePrimitiveValue(object value)
  void WriteCustomAttributeEnumValue(TypeReference enum_type, object value)
  void WriteCustomAttributeFieldOrPropType(TypeReference type)
  void WriteCustomAttributeNamedArguments(CustomAttribute attribute)
  int GetNamedArgumentCount(ICustomAttribute attribute)
  void WriteICustomAttributeNamedArguments(ICustomAttribute attribute)
  void WriteCustomAttributeNamedArguments(byte kind, Collection`1<CustomAttributeNamedArgument> named_arguments)
  void WriteCustomAttributeNamedArgument(byte kind, CustomAttributeNamedArgument named_argument)
  void WriteSecurityAttribute(SecurityAttribute attribute)
  void WriteSecurityDeclaration(SecurityDeclaration declaration)
  void WriteXmlSecurityDeclaration(SecurityDeclaration declaration)
  string GetXmlSecurityDeclaration(SecurityDeclaration declaration)
  void WriteTypeReference(TypeReference type)
  void WriteMarshalInfo(MarshalInfo marshal_info)
  void WriteNativeType(NativeType native)
  void WriteVariantType(VariantType variant)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyResolveEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  AssemblyDefinition Invoke(object sender, AssemblyNameReference reference)
  IAsyncResult BeginInvoke(object sender, AssemblyNameReference reference, AsyncCallback callback, object object)
  AssemblyDefinition EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyResolveEventArgs
Наследуется от: EventArgs
Поля:
  AssemblyNameReference reference
Свойства:
  AssemblyNameReference AssemblyReference
Методы:
  AssemblyNameReference get_AssemblyReference()
  void .ctor(AssemblyNameReference reference)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyResolutionException
Наследуется от: FileNotFoundException
Поля:
  AssemblyNameReference reference
Свойства:
  AssemblyNameReference AssemblyReference
Методы:
  AssemblyNameReference get_AssemblyReference()
  void .ctor(AssemblyNameReference reference)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: Mono.Cecil.BaseAssemblyResolver
Наследуется от: object
Поля:
  bool on_mono
  Collection`1<string> directories
  Collection`1<string> gac_paths
  AssemblyResolveEventHandler ResolveFailure
Свойства:
Методы:
  void AddSearchDirectory(string directory)
  void RemoveSearchDirectory(string directory)
  String[] GetSearchDirectories()
  AssemblyDefinition Resolve(string fullName)
  AssemblyDefinition Resolve(string fullName, ReaderParameters parameters)
  void add_ResolveFailure(AssemblyResolveEventHandler value)
  void remove_ResolveFailure(AssemblyResolveEventHandler value)
  void .ctor()
  AssemblyDefinition GetAssembly(string file, ReaderParameters parameters)
  AssemblyDefinition Resolve(AssemblyNameReference name)
  AssemblyDefinition Resolve(AssemblyNameReference name, ReaderParameters parameters)
  AssemblyDefinition SearchDirectory(AssemblyNameReference name, IEnumerable`1<string> directories, ReaderParameters parameters)
  bool IsZero(Version version)
  AssemblyDefinition GetCorlib(AssemblyNameReference reference, ReaderParameters parameters)
  Collection`1<string> GetGacPaths()
  Collection`1<string> GetDefaultMonoGacPaths()
  string GetCurrentMonoGac()
  AssemblyDefinition GetAssemblyInGac(AssemblyNameReference reference, ReaderParameters parameters)
  AssemblyDefinition GetAssemblyInMonoGac(AssemblyNameReference reference, ReaderParameters parameters)
  AssemblyDefinition GetAssemblyInNetGac(AssemblyNameReference reference, ReaderParameters parameters)
  string GetAssemblyFile(AssemblyNameReference reference, string prefix, string gac)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.CallSite
Наследуется от: object
Поля:
  MethodReference signature
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
  string Name
  string Namespace
  ModuleDefinition Module
  IMetadataScope Scope
  MetadataToken MetadataToken
  string FullName
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  ModuleDefinition get_Module()
  IMetadataScope get_Scope()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  string get_FullName()
  void .ctor()
  void .ctor(TypeReference returnType)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.TypeParser
Наследуется от: object
Поля:
  string fullname
  int length
  int position
Свойства:
Методы:
  void .ctor(string fullname)
  Type ParseType(bool fq_name)
  bool TryGetArity(Type type)
  bool TryGetArity(string name, Int32& arity)
  bool ParseInt32(string value, Int32& result)
  void TryAddArity(string name, Int32& arity)
  string ParsePart()
  bool IsDelimiter(char chr)
  void TryParseWhiteSpace()
  String[] ParseNestedNames()
  bool TryParse(char chr)
  void Add(T[]& array, T item)
  Int32[] ParseSpecs()
  Type[] ParseGenericArguments(int arity)
  string ParseAssemblyName()
  TypeReference ParseType(ModuleDefinition module, string fullname)
  TypeReference GetTypeReference(ModuleDefinition module, Type type_info)
  TypeReference CreateSpecs(TypeReference type, Type type_info)
  TypeReference TryCreateGenericInstanceType(TypeReference type, Type type_info)
  void SplitFullName(string fullname, String& namespace, String& name)
  TypeReference CreateReference(Type type_info, ModuleDefinition module, IMetadataScope scope)
  void AdjustGenericParameters(TypeReference type)
  IMetadataScope GetMetadataScope(ModuleDefinition module, Type type_info)
  AssemblyNameReference MatchReference(ModuleDefinition module, AssemblyNameReference pattern)
  bool TryGetDefinition(ModuleDefinition module, Type type_info, TypeReference& type)
  bool TryCurrentModule(ModuleDefinition module, Type type_info)
  string ToParseable(TypeReference type)
  void AppendNamePart(string part, StringBuilder name)
  void AppendType(TypeReference type, StringBuilder name, bool fq_name, bool top_level)
  string GetScopeFullName(TypeReference type)
  void AppendTypeSpecification(TypeSpecification type, StringBuilder name)
  bool RequiresFullyQualifiedName(TypeReference type, bool top_level)
--------------------------------------------------
Класс: Mono.Cecil.ImportGenericKind
Наследуется от: Enum
Поля:
  int value__
  ImportGenericKind Definition
  ImportGenericKind Open
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ImportGenericContext
Наследуется от: ValueType
Поля:
  Collection`1<IGenericParameterProvider> stack
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor(IGenericParameterProvider provider)
  void Push(IGenericParameterProvider provider)
  void Pop()
  TypeReference MethodParameter(string method, int position)
  string NormalizeMethodName(MethodReference method)
  TypeReference TypeParameter(string type, int position)
  TypeReference GenericTypeFor(IGenericParameterProvider context)
--------------------------------------------------
Класс: Mono.Cecil.MetadataImporter
Наследуется от: object
Поля:
  ModuleDefinition module
  Dictionary`2<Type, ElementType> type_etype_mapping
Свойства:
Методы:
  void .ctor(ModuleDefinition module)
  TypeReference ImportType(Type type, ImportGenericContext context)
  TypeReference ImportType(Type type, ImportGenericContext context, ImportGenericKind import_kind)
  bool ImportOpenGenericType(Type type, ImportGenericKind import_kind)
  bool ImportOpenGenericMethod(MethodBase method, ImportGenericKind import_kind)
  bool IsNestedType(Type type)
  TypeReference ImportTypeSpecification(Type type, ImportGenericContext context)
  TypeReference ImportGenericParameter(Type type, ImportGenericContext context)
  string NormalizeMethodName(MethodBase method)
  string NormalizeTypeFullName(Type type)
  TypeReference ImportGenericInstance(Type type, ImportGenericContext context)
  bool IsTypeSpecification(Type type)
  bool IsGenericInstance(Type type)
  ElementType ImportElementType(Type type)
  AssemblyNameReference ImportScope(Assembly assembly)
  bool TryGetAssemblyNameReference(AssemblyName name, AssemblyNameReference& assembly_reference)
  FieldReference ImportField(FieldInfo field, ImportGenericContext context)
  FieldInfo ResolveFieldDefinition(FieldInfo field)
  MethodReference ImportMethod(MethodBase method, ImportGenericContext context, ImportGenericKind import_kind)
  void ImportGenericParameters(IGenericParameterProvider provider, Type[] arguments)
  bool IsMethodSpecification(MethodBase method)
  MethodReference ImportMethodSpecification(MethodBase method, ImportGenericContext context)
  bool HasCallingConvention(MethodBase method, CallingConventions conventions)
  TypeReference ImportType(TypeReference type, ImportGenericContext context)
  IMetadataScope ImportScope(IMetadataScope scope)
  AssemblyNameReference ImportAssemblyName(AssemblyNameReference name)
  bool TryGetAssemblyNameReference(AssemblyNameReference name_reference, AssemblyNameReference& assembly_reference)
  void ImportGenericParameters(IGenericParameterProvider imported, IGenericParameterProvider original)
  TypeReference ImportTypeSpecification(TypeReference type, ImportGenericContext context)
  FieldReference ImportField(FieldReference field, ImportGenericContext context)
  MethodReference ImportMethod(MethodReference method, ImportGenericContext context)
  MethodSpecification ImportMethodSpecification(MethodReference method, ImportGenericContext context)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.ExportedType
Наследуется от: object
Поля:
  string namespace
  string name
  UInt32 attributes
  IMetadataScope scope
  ModuleDefinition module
  int identifier
  ExportedType declaring_type
  MetadataToken token
Свойства:
  string Namespace
  string Name
  TypeAttributes Attributes
  IMetadataScope Scope
  ExportedType DeclaringType
  MetadataToken MetadataToken
  int Identifier
  bool IsNotPublic
  bool IsPublic
  bool IsNestedPublic
  bool IsNestedPrivate
  bool IsNestedFamily
  bool IsNestedAssembly
  bool IsNestedFamilyAndAssembly
  bool IsNestedFamilyOrAssembly
  bool IsAutoLayout
  bool IsSequentialLayout
  bool IsExplicitLayout
  bool IsClass
  bool IsInterface
  bool IsAbstract
  bool IsSealed
  bool IsSpecialName
  bool IsImport
  bool IsSerializable
  bool IsAnsiClass
  bool IsUnicodeClass
  bool IsAutoClass
  bool IsBeforeFieldInit
  bool IsRuntimeSpecialName
  bool HasSecurity
  bool IsForwarder
  string FullName
Методы:
  string get_Namespace()
  void set_Namespace(string value)
  string get_Name()
  void set_Name(string value)
  TypeAttributes get_Attributes()
  void set_Attributes(TypeAttributes value)
  IMetadataScope get_Scope()
  ExportedType get_DeclaringType()
  void set_DeclaringType(ExportedType value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  int get_Identifier()
  void set_Identifier(int value)
  bool get_IsNotPublic()
  void set_IsNotPublic(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsNestedPublic()
  void set_IsNestedPublic(bool value)
  bool get_IsNestedPrivate()
  void set_IsNestedPrivate(bool value)
  bool get_IsNestedFamily()
  void set_IsNestedFamily(bool value)
  bool get_IsNestedAssembly()
  void set_IsNestedAssembly(bool value)
  bool get_IsNestedFamilyAndAssembly()
  void set_IsNestedFamilyAndAssembly(bool value)
  bool get_IsNestedFamilyOrAssembly()
  void set_IsNestedFamilyOrAssembly(bool value)
  bool get_IsAutoLayout()
  void set_IsAutoLayout(bool value)
  bool get_IsSequentialLayout()
  void set_IsSequentialLayout(bool value)
  bool get_IsExplicitLayout()
  void set_IsExplicitLayout(bool value)
  bool get_IsClass()
  void set_IsClass(bool value)
  bool get_IsInterface()
  void set_IsInterface(bool value)
  bool get_IsAbstract()
  void set_IsAbstract(bool value)
  bool get_IsSealed()
  void set_IsSealed(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsImport()
  void set_IsImport(bool value)
  bool get_IsSerializable()
  void set_IsSerializable(bool value)
  bool get_IsAnsiClass()
  void set_IsAnsiClass(bool value)
  bool get_IsUnicodeClass()
  void set_IsUnicodeClass(bool value)
  bool get_IsAutoClass()
  void set_IsAutoClass(bool value)
  bool get_IsBeforeFieldInit()
  void set_IsBeforeFieldInit(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasSecurity()
  void set_HasSecurity(bool value)
  bool get_IsForwarder()
  void set_IsForwarder(bool value)
  string get_FullName()
  void .ctor(string namespace, string name, ModuleDefinition module, IMetadataScope scope)
  string ToString()
  TypeDefinition Resolve()
  TypeReference CreateReference()
--------------------------------------------------
Класс: Mono.Cecil.SecurityAction
Наследуется от: Enum
Поля:
  ushort value__
  SecurityAction Request
  SecurityAction Demand
  SecurityAction Assert
  SecurityAction Deny
  SecurityAction PermitOnly
  SecurityAction LinkDemand
  SecurityAction InheritDemand
  SecurityAction RequestMinimum
  SecurityAction RequestOptional
  SecurityAction RequestRefuse
  SecurityAction PreJitGrant
  SecurityAction PreJitDeny
  SecurityAction NonCasDemand
  SecurityAction NonCasLinkDemand
  SecurityAction NonCasInheritance
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ISecurityDeclarationProvider
Поля:
Свойства:
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
Методы:
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
--------------------------------------------------
Класс: Mono.Cecil.SecurityAttribute
Наследуется от: object
Поля:
  TypeReference attribute_type
  Collection`1<CustomAttributeNamedArgument> fields
  Collection`1<CustomAttributeNamedArgument> properties
Свойства:
  TypeReference AttributeType
  bool HasFields
  Collection`1<CustomAttributeNamedArgument> Fields
  bool HasProperties
  Collection`1<CustomAttributeNamedArgument> Properties
Методы:
  TypeReference get_AttributeType()
  void set_AttributeType(TypeReference value)
  bool get_HasFields()
  Collection`1<CustomAttributeNamedArgument> get_Fields()
  bool get_HasProperties()
  Collection`1<CustomAttributeNamedArgument> get_Properties()
  void .ctor(TypeReference attributeType)
--------------------------------------------------
Класс: Mono.Cecil.SecurityDeclaration
Наследуется от: object
Поля:
  UInt32 signature
  Byte[] blob
  ModuleDefinition module
  bool resolved
  SecurityAction action
  Collection`1<SecurityAttribute> security_attributes
Свойства:
  SecurityAction Action
  bool HasSecurityAttributes
  Collection`1<SecurityAttribute> SecurityAttributes
  bool HasImage
Методы:
  SecurityAction get_Action()
  void set_Action(SecurityAction value)
  bool get_HasSecurityAttributes()
  Collection`1<SecurityAttribute> get_SecurityAttributes()
  bool get_HasImage()
  void .ctor(SecurityAction action, UInt32 signature, ModuleDefinition module)
  void .ctor(SecurityAction action)
  void .ctor(SecurityAction action, Byte[] blob)
  Byte[] GetBlob()
  void Resolve()
  SecurityDeclaration <Resolve>b__19_0(SecurityDeclaration declaration, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeArgument
Наследуется от: ValueType
Поля:
  TypeReference type
  object value
Свойства:
  TypeReference Type
  object Value
Методы:
  TypeReference get_Type()
  object get_Value()
  void .ctor(TypeReference type, object value)
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeNamedArgument
Наследуется от: ValueType
Поля:
  string name
  CustomAttributeArgument argument
Свойства:
  string Name
  CustomAttributeArgument Argument
Методы:
  string get_Name()
  CustomAttributeArgument get_Argument()
  void .ctor(string name, CustomAttributeArgument argument)
--------------------------------------------------
Класс: Mono.Cecil.ICustomAttribute
Поля:
Свойства:
  TypeReference AttributeType
  bool HasFields
  bool HasProperties
  Collection`1<CustomAttributeNamedArgument> Fields
  Collection`1<CustomAttributeNamedArgument> Properties
Методы:
  TypeReference get_AttributeType()
  bool get_HasFields()
  bool get_HasProperties()
  Collection`1<CustomAttributeNamedArgument> get_Fields()
  Collection`1<CustomAttributeNamedArgument> get_Properties()
--------------------------------------------------
Класс: Mono.Cecil.CustomAttribute
Наследуется от: object
Поля:
  UInt32 signature
  bool resolved
  MethodReference constructor
  Byte[] blob
  Collection`1<CustomAttributeArgument> arguments
  Collection`1<CustomAttributeNamedArgument> fields
  Collection`1<CustomAttributeNamedArgument> properties
Свойства:
  MethodReference Constructor
  TypeReference AttributeType
  bool IsResolved
  bool HasConstructorArguments
  Collection`1<CustomAttributeArgument> ConstructorArguments
  bool HasFields
  Collection`1<CustomAttributeNamedArgument> Fields
  bool HasProperties
  Collection`1<CustomAttributeNamedArgument> Properties
  bool HasImage
  ModuleDefinition Module
Методы:
  MethodReference get_Constructor()
  void set_Constructor(MethodReference value)
  TypeReference get_AttributeType()
  bool get_IsResolved()
  bool get_HasConstructorArguments()
  Collection`1<CustomAttributeArgument> get_ConstructorArguments()
  bool get_HasFields()
  Collection`1<CustomAttributeNamedArgument> get_Fields()
  bool get_HasProperties()
  Collection`1<CustomAttributeNamedArgument> get_Properties()
  bool get_HasImage()
  ModuleDefinition get_Module()
  void .ctor(UInt32 signature, MethodReference constructor)
  void .ctor(MethodReference constructor)
  void .ctor(MethodReference constructor, Byte[] blob)
  Byte[] GetBlob()
  void Resolve()
  CustomAttribute <Resolve>b__34_0(CustomAttribute attribute, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.DefaultAssemblyResolver
Наследуется от: BaseAssemblyResolver
Поля:
  IDictionary`2<string, AssemblyDefinition> cache
Свойства:
Методы:
  void .ctor()
  AssemblyDefinition Resolve(AssemblyNameReference name)
  void RegisterAssembly(AssemblyDefinition assembly)
--------------------------------------------------
Класс: Mono.Cecil.FileAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  FileAttributes ContainsMetaData
  FileAttributes ContainsNoMetaData
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.FunctionPointerType
Наследуется от: TypeSpecification
Поля:
  MethodReference function
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
  string Name
  string Namespace
  ModuleDefinition Module
  IMetadataScope Scope
  bool IsFunctionPointer
  bool ContainsGenericParameter
  string FullName
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  ModuleDefinition get_Module()
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  bool get_IsFunctionPointer()
  bool get_ContainsGenericParameter()
  string get_FullName()
  void .ctor()
  TypeDefinition Resolve()
  TypeReference GetElementType()
--------------------------------------------------
Класс: Mono.Cecil.GenericInstanceMethod
Наследуется от: MethodSpecification
Поля:
  Collection`1<TypeReference> arguments
Свойства:
  bool HasGenericArguments
  Collection`1<TypeReference> GenericArguments
  bool IsGenericInstance
  IGenericParameterProvider Mono.Cecil.IGenericContext.Method
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
  bool ContainsGenericParameter
  string FullName
Методы:
  bool get_HasGenericArguments()
  Collection`1<TypeReference> get_GenericArguments()
  bool get_IsGenericInstance()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Method()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  bool get_ContainsGenericParameter()
  string get_FullName()
  void .ctor(MethodReference method)
--------------------------------------------------
Класс: Mono.Cecil.GenericInstanceType
Наследуется от: TypeSpecification
Поля:
  Collection`1<TypeReference> arguments
Свойства:
  bool HasGenericArguments
  Collection`1<TypeReference> GenericArguments
  TypeReference DeclaringType
  string FullName
  bool IsGenericInstance
  bool ContainsGenericParameter
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
Методы:
  bool get_HasGenericArguments()
  Collection`1<TypeReference> get_GenericArguments()
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  string get_FullName()
  bool get_IsGenericInstance()
  bool get_ContainsGenericParameter()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.GenericParameter
Наследуется от: TypeReference
Поля:
  int position
  GenericParameterType type
  IGenericParameterProvider owner
  ushort attributes
  Collection`1<TypeReference> constraints
  Collection`1<CustomAttribute> custom_attributes
Свойства:
  GenericParameterAttributes Attributes
  int Position
  GenericParameterType Type
  IGenericParameterProvider Owner
  bool HasConstraints
  Collection`1<TypeReference> Constraints
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  IMetadataScope Scope
  TypeReference DeclaringType
  MethodReference DeclaringMethod
  ModuleDefinition Module
  string Name
  string Namespace
  string FullName
  bool IsGenericParameter
  bool ContainsGenericParameter
  MetadataType MetadataType
  bool IsNonVariant
  bool IsCovariant
  bool IsContravariant
  bool HasReferenceTypeConstraint
  bool HasNotNullableValueTypeConstraint
  bool HasDefaultConstructorConstraint
Методы:
  GenericParameterAttributes get_Attributes()
  void set_Attributes(GenericParameterAttributes value)
  int get_Position()
  GenericParameterType get_Type()
  IGenericParameterProvider get_Owner()
  bool get_HasConstraints()
  Collection`1<TypeReference> get_Constraints()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  MethodReference get_DeclaringMethod()
  ModuleDefinition get_Module()
  string get_Name()
  string get_Namespace()
  void set_Namespace(string value)
  string get_FullName()
  bool get_IsGenericParameter()
  bool get_ContainsGenericParameter()
  MetadataType get_MetadataType()
  bool get_IsNonVariant()
  void set_IsNonVariant(bool value)
  bool get_IsCovariant()
  void set_IsCovariant(bool value)
  bool get_IsContravariant()
  void set_IsContravariant(bool value)
  bool get_HasReferenceTypeConstraint()
  void set_HasReferenceTypeConstraint(bool value)
  bool get_HasNotNullableValueTypeConstraint()
  void set_HasNotNullableValueTypeConstraint(bool value)
  bool get_HasDefaultConstructorConstraint()
  void set_HasDefaultConstructorConstraint(bool value)
  void .ctor(IGenericParameterProvider owner)
  void .ctor(string name, IGenericParameterProvider owner)
  void .ctor(int position, GenericParameterType type, ModuleDefinition module)
  ElementType ConvertGenericParameterType(GenericParameterType type)
  TypeDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.GenericParameterCollection
Наследуется от: Collection`1<GenericParameter>
Поля:
  IGenericParameterProvider owner
Свойства:
Методы:
  void .ctor(IGenericParameterProvider owner)
  void .ctor(IGenericParameterProvider owner, int capacity)
  void OnAdd(GenericParameter item, int index)
  void OnInsert(GenericParameter item, int index)
  void OnSet(GenericParameter item, int index)
  void UpdateGenericParameter(GenericParameter item, int index)
  void OnRemove(GenericParameter item, int index)
--------------------------------------------------
Класс: Mono.Cecil.GenericParameterAttributes
Наследуется от: Enum
Поля:
  ushort value__
  GenericParameterAttributes VarianceMask
  GenericParameterAttributes NonVariant
  GenericParameterAttributes Covariant
  GenericParameterAttributes Contravariant
  GenericParameterAttributes SpecialConstraintMask
  GenericParameterAttributes ReferenceTypeConstraint
  GenericParameterAttributes NotNullableValueTypeConstraint
  GenericParameterAttributes DefaultConstructorConstraint
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.IConstantProvider
Поля:
Свойства:
  bool HasConstant
  object Constant
Методы:
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
--------------------------------------------------
Класс: Mono.Cecil.ICustomAttributeProvider
Поля:
Свойства:
  Collection`1<CustomAttribute> CustomAttributes
  bool HasCustomAttributes
Методы:
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasCustomAttributes()
--------------------------------------------------
Класс: Mono.Cecil.IGenericInstance
Поля:
Свойства:
  bool HasGenericArguments
  Collection`1<TypeReference> GenericArguments
Методы:
  bool get_HasGenericArguments()
  Collection`1<TypeReference> get_GenericArguments()
--------------------------------------------------
Класс: Mono.Cecil.IGenericParameterProvider
Поля:
Свойства:
  bool HasGenericParameters
  bool IsDefinition
  ModuleDefinition Module
  Collection`1<GenericParameter> GenericParameters
  GenericParameterType GenericParameterType
Методы:
  bool get_HasGenericParameters()
  bool get_IsDefinition()
  ModuleDefinition get_Module()
  Collection`1<GenericParameter> get_GenericParameters()
  GenericParameterType get_GenericParameterType()
--------------------------------------------------
Класс: Mono.Cecil.GenericParameterType
Наследуется от: Enum
Поля:
  int value__
  GenericParameterType Type
  GenericParameterType Method
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.IGenericContext
Поля:
Свойства:
  bool IsDefinition
  IGenericParameterProvider Type
  IGenericParameterProvider Method
Методы:
  bool get_IsDefinition()
  IGenericParameterProvider get_Type()
  IGenericParameterProvider get_Method()
--------------------------------------------------
Класс: Mono.Cecil.IMarshalInfoProvider
Поля:
Свойства:
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
Методы:
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
--------------------------------------------------
Класс: Mono.Cecil.MarshalInfo
Наследуется от: object
Поля:
  NativeType native
Свойства:
  NativeType NativeType
Методы:
  NativeType get_NativeType()
  void set_NativeType(NativeType value)
  void .ctor(NativeType native)
--------------------------------------------------
Класс: Mono.Cecil.ArrayMarshalInfo
Наследуется от: MarshalInfo
Поля:
  NativeType element_type
  int size_parameter_index
  int size
  int size_parameter_multiplier
Свойства:
  NativeType ElementType
  int SizeParameterIndex
  int Size
  int SizeParameterMultiplier
Методы:
  NativeType get_ElementType()
  void set_ElementType(NativeType value)
  int get_SizeParameterIndex()
  void set_SizeParameterIndex(int value)
  int get_Size()
  void set_Size(int value)
  int get_SizeParameterMultiplier()
  void set_SizeParameterMultiplier(int value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.CustomMarshalInfo
Наследуется от: MarshalInfo
Поля:
  Guid guid
  string unmanaged_type
  TypeReference managed_type
  string cookie
Свойства:
  Guid Guid
  string UnmanagedType
  TypeReference ManagedType
  string Cookie
Методы:
  Guid get_Guid()
  void set_Guid(Guid value)
  string get_UnmanagedType()
  void set_UnmanagedType(string value)
  TypeReference get_ManagedType()
  void set_ManagedType(TypeReference value)
  string get_Cookie()
  void set_Cookie(string value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.SafeArrayMarshalInfo
Наследуется от: MarshalInfo
Поля:
  VariantType element_type
Свойства:
  VariantType ElementType
Методы:
  VariantType get_ElementType()
  void set_ElementType(VariantType value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FixedArrayMarshalInfo
Наследуется от: MarshalInfo
Поля:
  NativeType element_type
  int size
Свойства:
  NativeType ElementType
  int Size
Методы:
  NativeType get_ElementType()
  void set_ElementType(NativeType value)
  int get_Size()
  void set_Size(int value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FixedSysStringMarshalInfo
Наследуется от: MarshalInfo
Поля:
  int size
Свойства:
  int Size
Методы:
  int get_Size()
  void set_Size(int value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.IAssemblyResolver
Поля:
Свойства:
Методы:
  AssemblyDefinition Resolve(AssemblyNameReference name)
  AssemblyDefinition Resolve(AssemblyNameReference name, ReaderParameters parameters)
  AssemblyDefinition Resolve(string fullName)
  AssemblyDefinition Resolve(string fullName, ReaderParameters parameters)
--------------------------------------------------
Класс: Mono.Cecil.IMetadataResolver
Поля:
Свойства:
Методы:
  TypeDefinition Resolve(TypeReference type)
  FieldDefinition Resolve(FieldReference field)
  MethodDefinition Resolve(MethodReference method)
--------------------------------------------------
Класс: Mono.Cecil.ResolutionException
Наследуется от: Exception
Поля:
  MemberReference member
Свойства:
  MemberReference Member
  IMetadataScope Scope
Методы:
  MemberReference get_Member()
  IMetadataScope get_Scope()
  void .ctor(MemberReference member)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: Mono.Cecil.MetadataResolver
Наследуется от: object
Поля:
  IAssemblyResolver assembly_resolver
Свойства:
  IAssemblyResolver AssemblyResolver
Методы:
  IAssemblyResolver get_AssemblyResolver()
  void .ctor(IAssemblyResolver assemblyResolver)
  TypeDefinition Resolve(TypeReference type)
  TypeDefinition GetType(ModuleDefinition module, TypeReference reference)
  TypeDefinition GetTypeDefinition(ModuleDefinition module, TypeReference type)
  FieldDefinition Resolve(FieldReference field)
  FieldDefinition GetField(TypeDefinition type, FieldReference reference)
  FieldDefinition GetField(Collection`1<FieldDefinition> fields, FieldReference reference)
  MethodDefinition Resolve(MethodReference method)
  MethodDefinition GetMethod(TypeDefinition type, MethodReference reference)
  MethodDefinition GetMethod(Collection`1<MethodDefinition> methods, MethodReference reference)
  bool AreSame(Collection`1<ParameterDefinition> a, Collection`1<ParameterDefinition> b)
  bool AreSame(TypeSpecification a, TypeSpecification b)
  bool AreSame(ArrayType a, ArrayType b)
  bool AreSame(IModifierType a, IModifierType b)
  bool AreSame(GenericInstanceType a, GenericInstanceType b)
  bool AreSame(GenericParameter a, GenericParameter b)
  bool AreSame(TypeReference a, TypeReference b)
--------------------------------------------------
Класс: Mono.Cecil.IModifierType
Поля:
Свойства:
  TypeReference ModifierType
  TypeReference ElementType
Методы:
  TypeReference get_ModifierType()
  TypeReference get_ElementType()
--------------------------------------------------
Класс: Mono.Cecil.OptionalModifierType
Наследуется от: TypeSpecification
Поля:
  TypeReference modifier_type
Свойства:
  TypeReference ModifierType
  string Name
  string FullName
  string Suffix
  bool IsValueType
  bool IsOptionalModifier
  bool ContainsGenericParameter
Методы:
  TypeReference get_ModifierType()
  void set_ModifierType(TypeReference value)
  string get_Name()
  string get_FullName()
  string get_Suffix()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsOptionalModifier()
  bool get_ContainsGenericParameter()
  void .ctor(TypeReference modifierType, TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.RequiredModifierType
Наследуется от: TypeSpecification
Поля:
  TypeReference modifier_type
Свойства:
  TypeReference ModifierType
  string Name
  string FullName
  string Suffix
  bool IsValueType
  bool IsRequiredModifier
  bool ContainsGenericParameter
Методы:
  TypeReference get_ModifierType()
  void set_ModifierType(TypeReference value)
  string get_Name()
  string get_FullName()
  string get_Suffix()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsRequiredModifier()
  bool get_ContainsGenericParameter()
  void .ctor(TypeReference modifierType, TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.NativeType
Наследуется от: Enum
Поля:
  int value__
  NativeType None
  NativeType Boolean
  NativeType I1
  NativeType U1
  NativeType I2
  NativeType U2
  NativeType I4
  NativeType U4
  NativeType I8
  NativeType U8
  NativeType R4
  NativeType R8
  NativeType LPStr
  NativeType Int
  NativeType UInt
  NativeType Func
  NativeType Array
  NativeType Currency
  NativeType BStr
  NativeType LPWStr
  NativeType LPTStr
  NativeType FixedSysString
  NativeType IUnknown
  NativeType IDispatch
  NativeType Struct
  NativeType IntF
  NativeType SafeArray
  NativeType FixedArray
  NativeType ByValStr
  NativeType ANSIBStr
  NativeType TBStr
  NativeType VariantBool
  NativeType ASAny
  NativeType LPStruct
  NativeType CustomMarshaler
  NativeType Error
  NativeType Max
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.PinnedType
Наследуется от: TypeSpecification
Поля:
Свойства:
  bool IsValueType
  bool IsPinned
Методы:
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsPinned()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.Range
Наследуется от: ValueType
Поля:
  UInt32 Start
  UInt32 Length
Свойства:
Методы:
  void .ctor(UInt32 index, UInt32 length)
--------------------------------------------------
Класс: Mono.Cecil.MetadataSystem
Наследуется от: object
Поля:
  AssemblyNameReference[] AssemblyReferences
  ModuleReference[] ModuleReferences
  TypeDefinition[] Types
  TypeReference[] TypeReferences
  FieldDefinition[] Fields
  MethodDefinition[] Methods
  MemberReference[] MemberReferences
  Dictionary`2<UInt32, UInt32[]> NestedTypes
  Dictionary`2<UInt32, UInt32> ReverseNestedTypes
  Dictionary`2<UInt32, MetadataToken[]> Interfaces
  Dictionary`2<UInt32, Row`2<ushort, UInt32>> ClassLayouts
  Dictionary`2<UInt32, UInt32> FieldLayouts
  Dictionary`2<UInt32, UInt32> FieldRVAs
  Dictionary`2<MetadataToken, UInt32> FieldMarshals
  Dictionary`2<MetadataToken, Row`2<ElementType, UInt32>> Constants
  Dictionary`2<UInt32, MetadataToken[]> Overrides
  Dictionary`2<MetadataToken, Range[]> CustomAttributes
  Dictionary`2<MetadataToken, Range[]> SecurityDeclarations
  Dictionary`2<UInt32, Range> Events
  Dictionary`2<UInt32, Range> Properties
  Dictionary`2<UInt32, Row`2<MethodSemanticsAttributes, MetadataToken>> Semantics
  Dictionary`2<UInt32, Row`3<PInvokeAttributes, UInt32, UInt32>> PInvokes
  Dictionary`2<MetadataToken, Range[]> GenericParameters
  Dictionary`2<UInt32, MetadataToken[]> GenericConstraints
  Dictionary`2<string, Row`2<ElementType, bool>> primitive_value_types
Свойства:
Методы:
  void InitializePrimitives()
  void TryProcessPrimitiveTypeReference(TypeReference type)
  bool TryGetPrimitiveElementType(TypeDefinition type, ElementType& etype)
  bool TryGetPrimitiveData(TypeReference type, Row`2& primitive_data)
  void Clear()
  TypeDefinition GetTypeDefinition(UInt32 rid)
  void AddTypeDefinition(TypeDefinition type)
  TypeReference GetTypeReference(UInt32 rid)
  void AddTypeReference(TypeReference type)
  FieldDefinition GetFieldDefinition(UInt32 rid)
  void AddFieldDefinition(FieldDefinition field)
  MethodDefinition GetMethodDefinition(UInt32 rid)
  void AddMethodDefinition(MethodDefinition method)
  MemberReference GetMemberReference(UInt32 rid)
  void AddMemberReference(MemberReference member)
  bool TryGetNestedTypeMapping(TypeDefinition type, UInt32[]& mapping)
  void SetNestedTypeMapping(UInt32 type_rid, UInt32[] mapping)
  void RemoveNestedTypeMapping(TypeDefinition type)
  bool TryGetReverseNestedTypeMapping(TypeDefinition type, UInt32& declaring)
  void SetReverseNestedTypeMapping(UInt32 nested, UInt32 declaring)
  void RemoveReverseNestedTypeMapping(TypeDefinition type)
  bool TryGetInterfaceMapping(TypeDefinition type, MetadataToken[]& mapping)
  void SetInterfaceMapping(UInt32 type_rid, MetadataToken[] mapping)
  void RemoveInterfaceMapping(TypeDefinition type)
  void AddPropertiesRange(UInt32 type_rid, Range range)
  bool TryGetPropertiesRange(TypeDefinition type, Range& range)
  void RemovePropertiesRange(TypeDefinition type)
  void AddEventsRange(UInt32 type_rid, Range range)
  bool TryGetEventsRange(TypeDefinition type, Range& range)
  void RemoveEventsRange(TypeDefinition type)
  bool TryGetGenericParameterRanges(IGenericParameterProvider owner, Range[]& ranges)
  void RemoveGenericParameterRange(IGenericParameterProvider owner)
  bool TryGetCustomAttributeRanges(ICustomAttributeProvider owner, Range[]& ranges)
  void RemoveCustomAttributeRange(ICustomAttributeProvider owner)
  bool TryGetSecurityDeclarationRanges(ISecurityDeclarationProvider owner, Range[]& ranges)
  void RemoveSecurityDeclarationRange(ISecurityDeclarationProvider owner)
  bool TryGetGenericConstraintMapping(GenericParameter generic_parameter, MetadataToken[]& mapping)
  void SetGenericConstraintMapping(UInt32 gp_rid, MetadataToken[] mapping)
  void RemoveGenericConstraintMapping(GenericParameter generic_parameter)
  bool TryGetOverrideMapping(MethodDefinition method, MetadataToken[]& mapping)
  void SetOverrideMapping(UInt32 rid, MetadataToken[] mapping)
  void RemoveOverrideMapping(MethodDefinition method)
  TypeDefinition GetFieldDeclaringType(UInt32 field_rid)
  TypeDefinition GetMethodDeclaringType(UInt32 method_rid)
  TypeDefinition BinaryRangeSearch(TypeDefinition[] types, UInt32 rid, bool field)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.IMethodSignature
Поля:
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
--------------------------------------------------
Класс: Mono.Cecil.ParameterDefinitionCollection
Наследуется от: Collection`1<ParameterDefinition>
Поля:
  IMethodSignature method
Свойства:
Методы:
  void .ctor(IMethodSignature method)
  void .ctor(IMethodSignature method, int capacity)
  void OnAdd(ParameterDefinition item, int index)
  void OnInsert(ParameterDefinition item, int index)
  void OnSet(ParameterDefinition item, int index)
  void OnRemove(ParameterDefinition item, int index)
--------------------------------------------------
Класс: Mono.Cecil.EmbeddedResource
Наследуется от: Resource
Поля:
  MetadataReader reader
  Nullable`1<UInt32> offset
  Byte[] data
  Stream stream
Свойства:
  ResourceType ResourceType
Методы:
  ResourceType get_ResourceType()
  void .ctor(string name, ManifestResourceAttributes attributes, Byte[] data)
  void .ctor(string name, ManifestResourceAttributes attributes, Stream stream)
  void .ctor(string name, ManifestResourceAttributes attributes, UInt32 offset, MetadataReader reader)
  Stream GetResourceStream()
  Byte[] GetResourceData()
  Byte[] ReadStream(Stream stream)
--------------------------------------------------
Класс: Mono.Cecil.EventAttributes
Наследуется от: Enum
Поля:
  ushort value__
  EventAttributes None
  EventAttributes SpecialName
  EventAttributes RTSpecialName
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.EventDefinition
Наследуется от: EventReference
Поля:
  ushort attributes
  Collection`1<CustomAttribute> custom_attributes
  MethodDefinition add_method
  MethodDefinition invoke_method
  MethodDefinition remove_method
  Collection`1<MethodDefinition> other_methods
Свойства:
  EventAttributes Attributes
  MethodDefinition AddMethod
  MethodDefinition InvokeMethod
  MethodDefinition RemoveMethod
  bool HasOtherMethods
  Collection`1<MethodDefinition> OtherMethods
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool IsSpecialName
  bool IsRuntimeSpecialName
  TypeDefinition DeclaringType
  bool IsDefinition
Методы:
  EventAttributes get_Attributes()
  void set_Attributes(EventAttributes value)
  MethodDefinition get_AddMethod()
  void set_AddMethod(MethodDefinition value)
  MethodDefinition get_InvokeMethod()
  void set_InvokeMethod(MethodDefinition value)
  MethodDefinition get_RemoveMethod()
  void set_RemoveMethod(MethodDefinition value)
  bool get_HasOtherMethods()
  Collection`1<MethodDefinition> get_OtherMethods()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  bool get_IsDefinition()
  void .ctor(string name, EventAttributes attributes, TypeReference eventType)
  void InitializeMethods()
  EventDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.EventReference
Наследуется от: MemberReference
Поля:
  TypeReference event_type
Свойства:
  TypeReference EventType
  string FullName
Методы:
  TypeReference get_EventType()
  void set_EventType(TypeReference value)
  string get_FullName()
  void .ctor(string name, TypeReference eventType)
  EventDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.FieldAttributes
Наследуется от: Enum
Поля:
  ushort value__
  FieldAttributes FieldAccessMask
  FieldAttributes CompilerControlled
  FieldAttributes Private
  FieldAttributes FamANDAssem
  FieldAttributes Assembly
  FieldAttributes Family
  FieldAttributes FamORAssem
  FieldAttributes Public
  FieldAttributes Static
  FieldAttributes InitOnly
  FieldAttributes Literal
  FieldAttributes NotSerialized
  FieldAttributes SpecialName
  FieldAttributes PInvokeImpl
  FieldAttributes RTSpecialName
  FieldAttributes HasFieldMarshal
  FieldAttributes HasDefault
  FieldAttributes HasFieldRVA
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.FieldDefinition
Наследуется от: FieldReference
Поля:
  ushort attributes
  Collection`1<CustomAttribute> custom_attributes
  int offset
  int rva
  Byte[] initial_value
  object constant
  MarshalInfo marshal_info
Свойства:
  bool HasLayoutInfo
  int Offset
  int RVA
  Byte[] InitialValue
  FieldAttributes Attributes
  bool HasConstant
  object Constant
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
  bool IsCompilerControlled
  bool IsPrivate
  bool IsFamilyAndAssembly
  bool IsAssembly
  bool IsFamily
  bool IsFamilyOrAssembly
  bool IsPublic
  bool IsStatic
  bool IsInitOnly
  bool IsLiteral
  bool IsNotSerialized
  bool IsSpecialName
  bool IsPInvokeImpl
  bool IsRuntimeSpecialName
  bool HasDefault
  bool IsDefinition
  TypeDefinition DeclaringType
Методы:
  void ResolveLayout()
  bool get_HasLayoutInfo()
  int get_Offset()
  void set_Offset(int value)
  void ResolveRVA()
  int get_RVA()
  Byte[] get_InitialValue()
  void set_InitialValue(Byte[] value)
  FieldAttributes get_Attributes()
  void set_Attributes(FieldAttributes value)
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
  bool get_IsCompilerControlled()
  void set_IsCompilerControlled(bool value)
  bool get_IsPrivate()
  void set_IsPrivate(bool value)
  bool get_IsFamilyAndAssembly()
  void set_IsFamilyAndAssembly(bool value)
  bool get_IsAssembly()
  void set_IsAssembly(bool value)
  bool get_IsFamily()
  void set_IsFamily(bool value)
  bool get_IsFamilyOrAssembly()
  void set_IsFamilyOrAssembly(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsStatic()
  void set_IsStatic(bool value)
  bool get_IsInitOnly()
  void set_IsInitOnly(bool value)
  bool get_IsLiteral()
  void set_IsLiteral(bool value)
  bool get_IsNotSerialized()
  void set_IsNotSerialized(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsPInvokeImpl()
  void set_IsPInvokeImpl(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasDefault()
  void set_HasDefault(bool value)
  bool get_IsDefinition()
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  void .ctor(string name, FieldAttributes attributes, TypeReference fieldType)
  FieldDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.FieldReference
Наследуется от: MemberReference
Поля:
  TypeReference field_type
Свойства:
  TypeReference FieldType
  string FullName
  bool ContainsGenericParameter
Методы:
  TypeReference get_FieldType()
  void set_FieldType(TypeReference value)
  string get_FullName()
  bool get_ContainsGenericParameter()
  void .ctor()
  void .ctor(string name, TypeReference fieldType)
  void .ctor(string name, TypeReference fieldType, TypeReference declaringType)
  FieldDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.IMemberDefinition
Поля:
Свойства:
  string Name
  string FullName
  bool IsSpecialName
  bool IsRuntimeSpecialName
  TypeDefinition DeclaringType
Методы:
  string get_Name()
  void set_Name(string value)
  string get_FullName()
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
--------------------------------------------------
Класс: Mono.Cecil.LinkedResource
Наследуется от: Resource
Поля:
  Byte[] hash
  string file
Свойства:
  Byte[] Hash
  string File
  ResourceType ResourceType
Методы:
  Byte[] get_Hash()
  string get_File()
  void set_File(string value)
  ResourceType get_ResourceType()
  void .ctor(string name, ManifestResourceAttributes flags)
  void .ctor(string name, ManifestResourceAttributes flags, string file)
--------------------------------------------------
Класс: Mono.Cecil.MemberReference
Наследуется от: object
Поля:
  string name
  TypeReference declaring_type
  MetadataToken token
Свойства:
  string Name
  string FullName
  TypeReference DeclaringType
  MetadataToken MetadataToken
  bool HasImage
  ModuleDefinition Module
  bool IsDefinition
  bool ContainsGenericParameter
Методы:
  string get_Name()
  void set_Name(string value)
  string get_FullName()
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  bool get_HasImage()
  ModuleDefinition get_Module()
  bool get_IsDefinition()
  bool get_ContainsGenericParameter()
  void .ctor()
  void .ctor(string name)
  string MemberFullName()
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.MethodAttributes
Наследуется от: Enum
Поля:
  ushort value__
  MethodAttributes MemberAccessMask
  MethodAttributes CompilerControlled
  MethodAttributes Private
  MethodAttributes FamANDAssem
  MethodAttributes Assembly
  MethodAttributes Family
  MethodAttributes FamORAssem
  MethodAttributes Public
  MethodAttributes Static
  MethodAttributes Final
  MethodAttributes Virtual
  MethodAttributes HideBySig
  MethodAttributes VtableLayoutMask
  MethodAttributes ReuseSlot
  MethodAttributes NewSlot
  MethodAttributes CheckAccessOnOverride
  MethodAttributes Abstract
  MethodAttributes SpecialName
  MethodAttributes PInvokeImpl
  MethodAttributes UnmanagedExport
  MethodAttributes RTSpecialName
  MethodAttributes HasSecurity
  MethodAttributes RequireSecObject
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodCallingConvention
Наследуется от: Enum
Поля:
  byte value__
  MethodCallingConvention Default
  MethodCallingConvention C
  MethodCallingConvention StdCall
  MethodCallingConvention ThisCall
  MethodCallingConvention FastCall
  MethodCallingConvention VarArg
  MethodCallingConvention Generic
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodDefinition
Наследуется от: MethodReference
Поля:
  ushort attributes
  ushort impl_attributes
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) sem_attrs_ready
  MethodSemanticsAttributes sem_attrs
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<SecurityDeclaration> security_declarations
  UInt32 rva
  PInvokeInfo pinvoke
  Collection`1<MethodReference> overrides
  MethodBody body
Свойства:
  MethodAttributes Attributes
  MethodImplAttributes ImplAttributes
  MethodSemanticsAttributes SemanticsAttributes
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  int RVA
  bool HasBody
  MethodBody Body
  bool HasPInvokeInfo
  PInvokeInfo PInvokeInfo
  bool HasOverrides
  Collection`1<MethodReference> Overrides
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  bool IsCompilerControlled
  bool IsPrivate
  bool IsFamilyAndAssembly
  bool IsAssembly
  bool IsFamily
  bool IsFamilyOrAssembly
  bool IsPublic
  bool IsStatic
  bool IsFinal
  bool IsVirtual
  bool IsHideBySig
  bool IsReuseSlot
  bool IsNewSlot
  bool IsCheckAccessOnOverride
  bool IsAbstract
  bool IsSpecialName
  bool IsPInvokeImpl
  bool IsUnmanagedExport
  bool IsRuntimeSpecialName
  bool HasSecurity
  bool IsIL
  bool IsNative
  bool IsRuntime
  bool IsUnmanaged
  bool IsManaged
  bool IsForwardRef
  bool IsPreserveSig
  bool IsInternalCall
  bool IsSynchronized
  bool NoInlining
  bool NoOptimization
  bool IsSetter
  bool IsGetter
  bool IsOther
  bool IsAddOn
  bool IsRemoveOn
  bool IsFire
  TypeDefinition DeclaringType
  bool IsConstructor
  bool IsDefinition
Методы:
  MethodAttributes get_Attributes()
  void set_Attributes(MethodAttributes value)
  MethodImplAttributes get_ImplAttributes()
  void set_ImplAttributes(MethodImplAttributes value)
  MethodSemanticsAttributes get_SemanticsAttributes()
  void set_SemanticsAttributes(MethodSemanticsAttributes value)
  void ReadSemantics()
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  int get_RVA()
  bool get_HasBody()
  MethodBody get_Body()
  void set_Body(MethodBody value)
  bool get_HasPInvokeInfo()
  PInvokeInfo get_PInvokeInfo()
  void set_PInvokeInfo(PInvokeInfo value)
  bool get_HasOverrides()
  Collection`1<MethodReference> get_Overrides()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  bool get_IsCompilerControlled()
  void set_IsCompilerControlled(bool value)
  bool get_IsPrivate()
  void set_IsPrivate(bool value)
  bool get_IsFamilyAndAssembly()
  void set_IsFamilyAndAssembly(bool value)
  bool get_IsAssembly()
  void set_IsAssembly(bool value)
  bool get_IsFamily()
  void set_IsFamily(bool value)
  bool get_IsFamilyOrAssembly()
  void set_IsFamilyOrAssembly(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsStatic()
  void set_IsStatic(bool value)
  bool get_IsFinal()
  void set_IsFinal(bool value)
  bool get_IsVirtual()
  void set_IsVirtual(bool value)
  bool get_IsHideBySig()
  void set_IsHideBySig(bool value)
  bool get_IsReuseSlot()
  void set_IsReuseSlot(bool value)
  bool get_IsNewSlot()
  void set_IsNewSlot(bool value)
  bool get_IsCheckAccessOnOverride()
  void set_IsCheckAccessOnOverride(bool value)
  bool get_IsAbstract()
  void set_IsAbstract(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsPInvokeImpl()
  void set_IsPInvokeImpl(bool value)
  bool get_IsUnmanagedExport()
  void set_IsUnmanagedExport(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasSecurity()
  void set_HasSecurity(bool value)
  bool get_IsIL()
  void set_IsIL(bool value)
  bool get_IsNative()
  void set_IsNative(bool value)
  bool get_IsRuntime()
  void set_IsRuntime(bool value)
  bool get_IsUnmanaged()
  void set_IsUnmanaged(bool value)
  bool get_IsManaged()
  void set_IsManaged(bool value)
  bool get_IsForwardRef()
  void set_IsForwardRef(bool value)
  bool get_IsPreserveSig()
  void set_IsPreserveSig(bool value)
  bool get_IsInternalCall()
  void set_IsInternalCall(bool value)
  bool get_IsSynchronized()
  void set_IsSynchronized(bool value)
  bool get_NoInlining()
  void set_NoInlining(bool value)
  bool get_NoOptimization()
  void set_NoOptimization(bool value)
  bool get_IsSetter()
  void set_IsSetter(bool value)
  bool get_IsGetter()
  void set_IsGetter(bool value)
  bool get_IsOther()
  void set_IsOther(bool value)
  bool get_IsAddOn()
  void set_IsAddOn(bool value)
  bool get_IsRemoveOn()
  void set_IsRemoveOn(bool value)
  bool get_IsFire()
  void set_IsFire(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  bool get_IsConstructor()
  bool get_IsDefinition()
  void .ctor()
  void .ctor(string name, MethodAttributes attributes, TypeReference returnType)
  MethodDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.MethodImplAttributes
Наследуется от: Enum
Поля:
  ushort value__
  MethodImplAttributes CodeTypeMask
  MethodImplAttributes IL
  MethodImplAttributes Native
  MethodImplAttributes OPTIL
  MethodImplAttributes Runtime
  MethodImplAttributes ManagedMask
  MethodImplAttributes Unmanaged
  MethodImplAttributes Managed
  MethodImplAttributes ForwardRef
  MethodImplAttributes PreserveSig
  MethodImplAttributes InternalCall
  MethodImplAttributes Synchronized
  MethodImplAttributes NoOptimization
  MethodImplAttributes NoInlining
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodReference
Наследуется от: MemberReference
Поля:
  ParameterDefinitionCollection parameters
  MethodReturnType return_type
  bool has_this
  bool explicit_this
  MethodCallingConvention calling_convention
  Collection`1<GenericParameter> generic_parameters
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
  IGenericParameterProvider Mono.Cecil.IGenericContext.Method
  GenericParameterType Mono.Cecil.IGenericParameterProvider.GenericParameterType
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
  string FullName
  bool IsGenericInstance
  bool ContainsGenericParameter
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Method()
  GenericParameterType Mono.Cecil.IGenericParameterProvider.get_GenericParameterType()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
  void set_MethodReturnType(MethodReturnType value)
  string get_FullName()
  bool get_IsGenericInstance()
  bool get_ContainsGenericParameter()
  void .ctor()
  void .ctor(string name, TypeReference returnType)
  void .ctor(string name, TypeReference returnType, TypeReference declaringType)
  MethodReference GetElementMethod()
  MethodDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.MethodReturnType
Наследуется от: object
Поля:
  IMethodSignature method
  ParameterDefinition parameter
  TypeReference return_type
Свойства:
  IMethodSignature Method
  TypeReference ReturnType
  ParameterDefinition Parameter
  MetadataToken MetadataToken
  ParameterAttributes Attributes
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasDefault
  bool HasConstant
  object Constant
  bool HasFieldMarshal
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
Методы:
  IMethodSignature get_Method()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  ParameterDefinition get_Parameter()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  ParameterAttributes get_Attributes()
  void set_Attributes(ParameterAttributes value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasDefault()
  void set_HasDefault(bool value)
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_HasFieldMarshal()
  void set_HasFieldMarshal(bool value)
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
  void .ctor(IMethodSignature method)
--------------------------------------------------
Класс: Mono.Cecil.MethodSemanticsAttributes
Наследуется от: Enum
Поля:
  ushort value__
  MethodSemanticsAttributes None
  MethodSemanticsAttributes Setter
  MethodSemanticsAttributes Getter
  MethodSemanticsAttributes Other
  MethodSemanticsAttributes AddOn
  MethodSemanticsAttributes RemoveOn
  MethodSemanticsAttributes Fire
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodSpecification
Наследуется от: MethodReference
Поля:
  MethodReference method
Свойства:
  MethodReference ElementMethod
  string Name
  MethodCallingConvention CallingConvention
  bool HasThis
  bool ExplicitThis
  MethodReturnType MethodReturnType
  TypeReference DeclaringType
  ModuleDefinition Module
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  bool ContainsGenericParameter
Методы:
  MethodReference get_ElementMethod()
  string get_Name()
  void set_Name(string value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodReturnType get_MethodReturnType()
  void set_MethodReturnType(MethodReturnType value)
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  ModuleDefinition get_Module()
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  bool get_ContainsGenericParameter()
  void .ctor(MethodReference method)
  MethodReference GetElementMethod()
--------------------------------------------------
Класс: Mono.Cecil.ParameterAttributes
Наследуется от: Enum
Поля:
  ushort value__
  ParameterAttributes None
  ParameterAttributes In
  ParameterAttributes Out
  ParameterAttributes Lcid
  ParameterAttributes Retval
  ParameterAttributes Optional
  ParameterAttributes HasDefault
  ParameterAttributes HasFieldMarshal
  ParameterAttributes Unused
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ParameterDefinition
Наследуется от: ParameterReference
Поля:
  ushort attributes
  IMethodSignature method
  object constant
  Collection`1<CustomAttribute> custom_attributes
  MarshalInfo marshal_info
Свойства:
  ParameterAttributes Attributes
  IMethodSignature Method
  int Sequence
  bool HasConstant
  object Constant
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
  bool IsIn
  bool IsOut
  bool IsLcid
  bool IsReturnValue
  bool IsOptional
  bool HasDefault
  bool HasFieldMarshal
Методы:
  ParameterAttributes get_Attributes()
  void set_Attributes(ParameterAttributes value)
  IMethodSignature get_Method()
  int get_Sequence()
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
  bool get_IsIn()
  void set_IsIn(bool value)
  bool get_IsOut()
  void set_IsOut(bool value)
  bool get_IsLcid()
  void set_IsLcid(bool value)
  bool get_IsReturnValue()
  void set_IsReturnValue(bool value)
  bool get_IsOptional()
  void set_IsOptional(bool value)
  bool get_HasDefault()
  void set_HasDefault(bool value)
  bool get_HasFieldMarshal()
  void set_HasFieldMarshal(bool value)
  void .ctor(TypeReference parameterType, IMethodSignature method)
  void .ctor(TypeReference parameterType)
  void .ctor(string name, ParameterAttributes attributes, TypeReference parameterType)
  ParameterDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.ParameterReference
Наследуется от: object
Поля:
  string name
  int index
  TypeReference parameter_type
  MetadataToken token
Свойства:
  string Name
  int Index
  TypeReference ParameterType
  MetadataToken MetadataToken
Методы:
  string get_Name()
  void set_Name(string value)
  int get_Index()
  TypeReference get_ParameterType()
  void set_ParameterType(TypeReference value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  void .ctor(string name, TypeReference parameterType)
  string ToString()
  ParameterDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.PInvokeAttributes
Наследуется от: Enum
Поля:
  ushort value__
  PInvokeAttributes NoMangle
  PInvokeAttributes CharSetMask
  PInvokeAttributes CharSetNotSpec
  PInvokeAttributes CharSetAnsi
  PInvokeAttributes CharSetUnicode
  PInvokeAttributes CharSetAuto
  PInvokeAttributes SupportsLastError
  PInvokeAttributes CallConvMask
  PInvokeAttributes CallConvWinapi
  PInvokeAttributes CallConvCdecl
  PInvokeAttributes CallConvStdCall
  PInvokeAttributes CallConvThiscall
  PInvokeAttributes CallConvFastcall
  PInvokeAttributes BestFitMask
  PInvokeAttributes BestFitEnabled
  PInvokeAttributes BestFitDisabled
  PInvokeAttributes ThrowOnUnmappableCharMask
  PInvokeAttributes ThrowOnUnmappableCharEnabled
  PInvokeAttributes ThrowOnUnmappableCharDisabled
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.PInvokeInfo
Наследуется от: object
Поля:
  ushort attributes
  string entry_point
  ModuleReference module
Свойства:
  PInvokeAttributes Attributes
  string EntryPoint
  ModuleReference Module
  bool IsNoMangle
  bool IsCharSetNotSpec
  bool IsCharSetAnsi
  bool IsCharSetUnicode
  bool IsCharSetAuto
  bool SupportsLastError
  bool IsCallConvWinapi
  bool IsCallConvCdecl
  bool IsCallConvStdCall
  bool IsCallConvThiscall
  bool IsCallConvFastcall
  bool IsBestFitEnabled
  bool IsBestFitDisabled
  bool IsThrowOnUnmappableCharEnabled
  bool IsThrowOnUnmappableCharDisabled
Методы:
  PInvokeAttributes get_Attributes()
  void set_Attributes(PInvokeAttributes value)
  string get_EntryPoint()
  void set_EntryPoint(string value)
  ModuleReference get_Module()
  void set_Module(ModuleReference value)
  bool get_IsNoMangle()
  void set_IsNoMangle(bool value)
  bool get_IsCharSetNotSpec()
  void set_IsCharSetNotSpec(bool value)
  bool get_IsCharSetAnsi()
  void set_IsCharSetAnsi(bool value)
  bool get_IsCharSetUnicode()
  void set_IsCharSetUnicode(bool value)
  bool get_IsCharSetAuto()
  void set_IsCharSetAuto(bool value)
  bool get_SupportsLastError()
  void set_SupportsLastError(bool value)
  bool get_IsCallConvWinapi()
  void set_IsCallConvWinapi(bool value)
  bool get_IsCallConvCdecl()
  void set_IsCallConvCdecl(bool value)
  bool get_IsCallConvStdCall()
  void set_IsCallConvStdCall(bool value)
  bool get_IsCallConvThiscall()
  void set_IsCallConvThiscall(bool value)
  bool get_IsCallConvFastcall()
  void set_IsCallConvFastcall(bool value)
  bool get_IsBestFitEnabled()
  void set_IsBestFitEnabled(bool value)
  bool get_IsBestFitDisabled()
  void set_IsBestFitDisabled(bool value)
  bool get_IsThrowOnUnmappableCharEnabled()
  void set_IsThrowOnUnmappableCharEnabled(bool value)
  bool get_IsThrowOnUnmappableCharDisabled()
  void set_IsThrowOnUnmappableCharDisabled(bool value)
  void .ctor(PInvokeAttributes attributes, string entryPoint, ModuleReference module)
--------------------------------------------------
Класс: Mono.Cecil.PointerType
Наследуется от: TypeSpecification
Поля:
Свойства:
  string Name
  string FullName
  bool IsValueType
  bool IsPointer
Методы:
  string get_Name()
  string get_FullName()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsPointer()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.PropertyAttributes
Наследуется от: Enum
Поля:
  ushort value__
  PropertyAttributes None
  PropertyAttributes SpecialName
  PropertyAttributes RTSpecialName
  PropertyAttributes HasDefault
  PropertyAttributes Unused
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.PropertyDefinition
Наследуется от: PropertyReference
Поля:
  Nullable`1<bool> has_this
  ushort attributes
  Collection`1<CustomAttribute> custom_attributes
  MethodDefinition get_method
  MethodDefinition set_method
  Collection`1<MethodDefinition> other_methods
  object constant
Свойства:
  PropertyAttributes Attributes
  bool HasThis
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  MethodDefinition GetMethod
  MethodDefinition SetMethod
  bool HasOtherMethods
  Collection`1<MethodDefinition> OtherMethods
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  bool HasConstant
  object Constant
  bool IsSpecialName
  bool IsRuntimeSpecialName
  bool HasDefault
  TypeDefinition DeclaringType
  bool IsDefinition
  string FullName
Методы:
  PropertyAttributes get_Attributes()
  void set_Attributes(PropertyAttributes value)
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  MethodDefinition get_GetMethod()
  void set_GetMethod(MethodDefinition value)
  MethodDefinition get_SetMethod()
  void set_SetMethod(MethodDefinition value)
  bool get_HasOtherMethods()
  Collection`1<MethodDefinition> get_OtherMethods()
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  Collection`1<ParameterDefinition> MirrorParameters(MethodDefinition method, int bound)
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasDefault()
  void set_HasDefault(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  bool get_IsDefinition()
  string get_FullName()
  void .ctor(string name, PropertyAttributes attributes, TypeReference propertyType)
  void InitializeMethods()
  PropertyDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.PropertyReference
Наследуется от: MemberReference
Поля:
  TypeReference property_type
Свойства:
  TypeReference PropertyType
  Collection`1<ParameterDefinition> Parameters
Методы:
  TypeReference get_PropertyType()
  void set_PropertyType(TypeReference value)
  Collection`1<ParameterDefinition> get_Parameters()
  void .ctor(string name, TypeReference propertyType)
  PropertyDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.ByReferenceType
Наследуется от: TypeSpecification
Поля:
Свойства:
  string Name
  string FullName
  bool IsValueType
  bool IsByReference
Методы:
  string get_Name()
  string get_FullName()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsByReference()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.MetadataScopeType
Наследуется от: Enum
Поля:
  int value__
  MetadataScopeType AssemblyNameReference
  MetadataScopeType ModuleReference
  MetadataScopeType ModuleDefinition
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.IMetadataScope
Поля:
Свойства:
  MetadataScopeType MetadataScopeType
  string Name
Методы:
  MetadataScopeType get_MetadataScopeType()
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: Mono.Cecil.IMetadataTokenProvider
Поля:
Свойства:
  MetadataToken MetadataToken
Методы:
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
--------------------------------------------------
Класс: Mono.Cecil.ManifestResourceAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  ManifestResourceAttributes VisibilityMask
  ManifestResourceAttributes Public
  ManifestResourceAttributes Private
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ModuleReference
Наследуется от: object
Поля:
  string name
  MetadataToken token
Свойства:
  string Name
  MetadataScopeType MetadataScopeType
  MetadataToken MetadataToken
Методы:
  string get_Name()
  void set_Name(string value)
  MetadataScopeType get_MetadataScopeType()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  void .ctor()
  void .ctor(string name)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.MemberDefinitionCollection`1
Наследуется от: Collection`1<T>
Поля:
  TypeDefinition container
Свойства:
Методы:
  void .ctor(TypeDefinition container)
  void .ctor(TypeDefinition container, int capacity)
  void OnAdd(T item, int index)
  void OnSet(T item, int index)
  void OnInsert(T item, int index)
  void OnRemove(T item, int index)
  void OnClear()
  void Attach(T element)
  void Detach(T element)
--------------------------------------------------
Класс: Mono.Cecil.ReadingMode
Наследуется от: Enum
Поля:
  int value__
  ReadingMode Immediate
  ReadingMode Deferred
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ReaderParameters
Наследуется от: object
Поля:
  ReadingMode reading_mode
  IAssemblyResolver assembly_resolver
  IMetadataResolver metadata_resolver
  Stream symbol_stream
  ISymbolReaderProvider symbol_reader_provider
  bool read_symbols
Свойства:
  ReadingMode ReadingMode
  IAssemblyResolver AssemblyResolver
  IMetadataResolver MetadataResolver
  Stream SymbolStream
  ISymbolReaderProvider SymbolReaderProvider
  bool ReadSymbols
Методы:
  ReadingMode get_ReadingMode()
  void set_ReadingMode(ReadingMode value)
  IAssemblyResolver get_AssemblyResolver()
  void set_AssemblyResolver(IAssemblyResolver value)
  IMetadataResolver get_MetadataResolver()
  void set_MetadataResolver(IMetadataResolver value)
  Stream get_SymbolStream()
  void set_SymbolStream(Stream value)
  ISymbolReaderProvider get_SymbolReaderProvider()
  void set_SymbolReaderProvider(ISymbolReaderProvider value)
  bool get_ReadSymbols()
  void set_ReadSymbols(bool value)
  void .ctor()
  void .ctor(ReadingMode readingMode)
--------------------------------------------------
Класс: Mono.Cecil.ModuleParameters
Наследуется от: object
Поля:
  ModuleKind kind
  TargetRuntime runtime
  TargetArchitecture architecture
  IAssemblyResolver assembly_resolver
  IMetadataResolver metadata_resolver
Свойства:
  ModuleKind Kind
  TargetRuntime Runtime
  TargetArchitecture Architecture
  IAssemblyResolver AssemblyResolver
  IMetadataResolver MetadataResolver
Методы:
  ModuleKind get_Kind()
  void set_Kind(ModuleKind value)
  TargetRuntime get_Runtime()
  void set_Runtime(TargetRuntime value)
  TargetArchitecture get_Architecture()
  void set_Architecture(TargetArchitecture value)
  IAssemblyResolver get_AssemblyResolver()
  void set_AssemblyResolver(IAssemblyResolver value)
  IMetadataResolver get_MetadataResolver()
  void set_MetadataResolver(IMetadataResolver value)
  void .ctor()
  TargetRuntime GetCurrentRuntime()
--------------------------------------------------
Класс: Mono.Cecil.WriterParameters
Наследуется от: object
Поля:
  Stream symbol_stream
  ISymbolWriterProvider symbol_writer_provider
  bool write_symbols
  StrongNameKeyPair key_pair
Свойства:
  Stream SymbolStream
  ISymbolWriterProvider SymbolWriterProvider
  bool WriteSymbols
  StrongNameKeyPair StrongNameKeyPair
Методы:
  Stream get_SymbolStream()
  void set_SymbolStream(Stream value)
  ISymbolWriterProvider get_SymbolWriterProvider()
  void set_SymbolWriterProvider(ISymbolWriterProvider value)
  bool get_WriteSymbols()
  void set_WriteSymbols(bool value)
  StrongNameKeyPair get_StrongNameKeyPair()
  void set_StrongNameKeyPair(StrongNameKeyPair value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ModuleDefinition
Наследуется от: ModuleReference
Поля:
  Image Image
  MetadataSystem MetadataSystem
  ReadingMode ReadingMode
  ISymbolReaderProvider SymbolReaderProvider
  ISymbolReader symbol_reader
  IAssemblyResolver assembly_resolver
  IMetadataResolver metadata_resolver
  TypeSystem type_system
  MetadataReader reader
  string fq_name
  string runtime_version
  ModuleKind kind
  TargetRuntime runtime
  TargetArchitecture architecture
  ModuleAttributes attributes
  ModuleCharacteristics characteristics
  Guid mvid
  AssemblyDefinition assembly
  MethodDefinition entry_point
  MetadataImporter importer
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<AssemblyNameReference> references
  Collection`1<ModuleReference> modules
  Collection`1<Resource> resources
  Collection`1<ExportedType> exported_types
  TypeDefinitionCollection types
  object module_lock
Свойства:
  bool IsMain
  ModuleKind Kind
  TargetRuntime Runtime
  string RuntimeVersion
  TargetArchitecture Architecture
  ModuleAttributes Attributes
  ModuleCharacteristics Characteristics
  string FullyQualifiedName
  Guid Mvid
  bool HasImage
  bool HasSymbols
  ISymbolReader SymbolReader
  MetadataScopeType MetadataScopeType
  AssemblyDefinition Assembly
  MetadataImporter MetadataImporter
  IAssemblyResolver AssemblyResolver
  IMetadataResolver MetadataResolver
  TypeSystem TypeSystem
  bool HasAssemblyReferences
  Collection`1<AssemblyNameReference> AssemblyReferences
  bool HasModuleReferences
  Collection`1<ModuleReference> ModuleReferences
  bool HasResources
  Collection`1<Resource> Resources
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasTypes
  Collection`1<TypeDefinition> Types
  bool HasExportedTypes
  Collection`1<ExportedType> ExportedTypes
  MethodDefinition EntryPoint
  object SyncRoot
  bool HasDebugHeader
Методы:
  bool get_IsMain()
  ModuleKind get_Kind()
  void set_Kind(ModuleKind value)
  TargetRuntime get_Runtime()
  void set_Runtime(TargetRuntime value)
  string get_RuntimeVersion()
  void set_RuntimeVersion(string value)
  TargetArchitecture get_Architecture()
  void set_Architecture(TargetArchitecture value)
  ModuleAttributes get_Attributes()
  void set_Attributes(ModuleAttributes value)
  ModuleCharacteristics get_Characteristics()
  void set_Characteristics(ModuleCharacteristics value)
  string get_FullyQualifiedName()
  Guid get_Mvid()
  void set_Mvid(Guid value)
  bool get_HasImage()
  bool get_HasSymbols()
  ISymbolReader get_SymbolReader()
  MetadataScopeType get_MetadataScopeType()
  AssemblyDefinition get_Assembly()
  MetadataImporter get_MetadataImporter()
  IAssemblyResolver get_AssemblyResolver()
  IMetadataResolver get_MetadataResolver()
  TypeSystem get_TypeSystem()
  bool get_HasAssemblyReferences()
  Collection`1<AssemblyNameReference> get_AssemblyReferences()
  bool get_HasModuleReferences()
  Collection`1<ModuleReference> get_ModuleReferences()
  bool get_HasResources()
  Collection`1<Resource> get_Resources()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasTypes()
  Collection`1<TypeDefinition> get_Types()
  bool get_HasExportedTypes()
  Collection`1<ExportedType> get_ExportedTypes()
  MethodDefinition get_EntryPoint()
  void set_EntryPoint(MethodDefinition value)
  void .ctor()
  void .ctor(Image image)
  bool HasTypeReference(string fullName)
  bool HasTypeReference(string scope, string fullName)
  bool TryGetTypeReference(string fullName, TypeReference& type)
  bool TryGetTypeReference(string scope, string fullName, TypeReference& type)
  TypeReference GetTypeReference(string scope, string fullname)
  IEnumerable`1<TypeReference> GetTypeReferences()
  IEnumerable`1<MemberReference> GetMemberReferences()
  TypeReference GetType(string fullName, bool runtimeName)
  TypeDefinition GetType(string fullName)
  TypeDefinition GetType(string namespace, string name)
  IEnumerable`1<TypeDefinition> GetTypes()
  IEnumerable`1<TypeDefinition> GetTypes(Collection`1<TypeDefinition> types)
  void CheckFullName(string fullName)
  TypeDefinition GetNestedType(string fullname)
  FieldDefinition Resolve(FieldReference field)
  MethodDefinition Resolve(MethodReference method)
  TypeDefinition Resolve(TypeReference type)
  void CheckType(object type)
  void CheckField(object field)
  void CheckMethod(object method)
  void CheckContext(IGenericParameterProvider context, ModuleDefinition module)
  ImportGenericContext GenericContextFor(IGenericParameterProvider context)
  TypeReference Import(Type type)
  TypeReference Import(Type type, IGenericParameterProvider context)
  FieldReference Import(FieldInfo field)
  FieldReference Import(FieldInfo field, IGenericParameterProvider context)
  MethodReference Import(MethodBase method)
  MethodReference Import(MethodBase method, IGenericParameterProvider context)
  TypeReference Import(TypeReference type)
  TypeReference Import(TypeReference type, IGenericParameterProvider context)
  FieldReference Import(FieldReference field)
  FieldReference Import(FieldReference field, IGenericParameterProvider context)
  MethodReference Import(MethodReference method)
  MethodReference Import(MethodReference method, IGenericParameterProvider context)
  IMetadataTokenProvider LookupToken(int token)
  IMetadataTokenProvider LookupToken(MetadataToken token)
  object get_SyncRoot()
  TRet Read(TItem item, Func`3<TItem, MetadataReader, TRet> read)
  TRet Read(TRet& variable, TItem item, Func`3<TItem, MetadataReader, TRet> read)
  bool get_HasDebugHeader()
  ImageDebugDirectory GetDebugHeader(Byte[]& header)
  void ProcessDebugHeader()
  ModuleDefinition CreateModule(string name, ModuleKind kind)
  ModuleDefinition CreateModule(string name, ModuleParameters parameters)
  AssemblyNameDefinition CreateAssemblyName(string name)
  void ReadSymbols()
  void ReadSymbols(ISymbolReader reader)
  ModuleDefinition ReadModule(string fileName)
  ModuleDefinition ReadModule(Stream stream)
  ModuleDefinition ReadModule(string fileName, ReaderParameters parameters)
  void CheckStream(object stream)
  ModuleDefinition ReadModule(Stream stream, ReaderParameters parameters)
  Stream GetFileStream(string fileName, FileMode mode, FileAccess access, FileShare share)
  void Write(string fileName)
  void Write(Stream stream)
  void Write(string fileName, WriterParameters parameters)
  void Write(Stream stream, WriterParameters parameters)
--------------------------------------------------
Класс: Mono.Cecil.ModuleKind
Наследуется от: Enum
Поля:
  int value__
  ModuleKind Dll
  ModuleKind Console
  ModuleKind Windows
  ModuleKind NetModule
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TargetArchitecture
Наследуется от: Enum
Поля:
  int value__
  TargetArchitecture I386
  TargetArchitecture AMD64
  TargetArchitecture IA64
  TargetArchitecture ARMv7
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ModuleAttributes
Наследуется от: Enum
Поля:
  int value__
  ModuleAttributes ILOnly
  ModuleAttributes Required32Bit
  ModuleAttributes StrongNameSigned
  ModuleAttributes Preferred32Bit
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ModuleCharacteristics
Наследуется от: Enum
Поля:
  int value__
  ModuleCharacteristics HighEntropyVA
  ModuleCharacteristics DynamicBase
  ModuleCharacteristics NoSEH
  ModuleCharacteristics NXCompat
  ModuleCharacteristics AppContainer
  ModuleCharacteristics TerminalServerAware
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ResourceType
Наследуется от: Enum
Поля:
  int value__
  ResourceType Linked
  ResourceType Embedded
  ResourceType AssemblyLinked
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Resource
Наследуется от: object
Поля:
  string name
  UInt32 attributes
Свойства:
  string Name
  ManifestResourceAttributes Attributes
  ResourceType ResourceType
  bool IsPublic
  bool IsPrivate
Методы:
  string get_Name()
  void set_Name(string value)
  ManifestResourceAttributes get_Attributes()
  void set_Attributes(ManifestResourceAttributes value)
  ResourceType get_ResourceType()
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsPrivate()
  void set_IsPrivate(bool value)
  void .ctor(string name, ManifestResourceAttributes attributes)
--------------------------------------------------
Класс: Mono.Cecil.SentinelType
Наследуется от: TypeSpecification
Поля:
Свойства:
  bool IsValueType
  bool IsSentinel
Методы:
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsSentinel()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.TargetRuntime
Наследуется от: Enum
Поля:
  int value__
  TargetRuntime Net_1_0
  TargetRuntime Net_1_1
  TargetRuntime Net_2_0
  TargetRuntime Net_4_0
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  TypeAttributes VisibilityMask
  TypeAttributes NotPublic
  TypeAttributes Public
  TypeAttributes NestedPublic
  TypeAttributes NestedPrivate
  TypeAttributes NestedFamily
  TypeAttributes NestedAssembly
  TypeAttributes NestedFamANDAssem
  TypeAttributes NestedFamORAssem
  TypeAttributes LayoutMask
  TypeAttributes AutoLayout
  TypeAttributes SequentialLayout
  TypeAttributes ExplicitLayout
  TypeAttributes ClassSemanticMask
  TypeAttributes Class
  TypeAttributes Interface
  TypeAttributes Abstract
  TypeAttributes Sealed
  TypeAttributes SpecialName
  TypeAttributes Import
  TypeAttributes Serializable
  TypeAttributes WindowsRuntime
  TypeAttributes StringFormatMask
  TypeAttributes AnsiClass
  TypeAttributes UnicodeClass
  TypeAttributes AutoClass
  TypeAttributes BeforeFieldInit
  TypeAttributes RTSpecialName
  TypeAttributes HasSecurity
  TypeAttributes Forwarder
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeDefinition
Наследуется от: TypeReference
Поля:
  UInt32 attributes
  TypeReference base_type
  Range fields_range
  Range methods_range
  short packing_size
  int class_size
  Collection`1<TypeReference> interfaces
  Collection`1<TypeDefinition> nested_types
  Collection`1<MethodDefinition> methods
  Collection`1<FieldDefinition> fields
  Collection`1<EventDefinition> events
  Collection`1<PropertyDefinition> properties
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<SecurityDeclaration> security_declarations
Свойства:
  TypeAttributes Attributes
  TypeReference BaseType
  bool HasLayoutInfo
  short PackingSize
  int ClassSize
  bool HasInterfaces
  Collection`1<TypeReference> Interfaces
  bool HasNestedTypes
  Collection`1<TypeDefinition> NestedTypes
  bool HasMethods
  Collection`1<MethodDefinition> Methods
  bool HasFields
  Collection`1<FieldDefinition> Fields
  bool HasEvents
  Collection`1<EventDefinition> Events
  bool HasProperties
  Collection`1<PropertyDefinition> Properties
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  bool IsNotPublic
  bool IsPublic
  bool IsNestedPublic
  bool IsNestedPrivate
  bool IsNestedFamily
  bool IsNestedAssembly
  bool IsNestedFamilyAndAssembly
  bool IsNestedFamilyOrAssembly
  bool IsAutoLayout
  bool IsSequentialLayout
  bool IsExplicitLayout
  bool IsClass
  bool IsInterface
  bool IsAbstract
  bool IsSealed
  bool IsSpecialName
  bool IsImport
  bool IsSerializable
  bool IsWindowsRuntime
  bool IsAnsiClass
  bool IsUnicodeClass
  bool IsAutoClass
  bool IsBeforeFieldInit
  bool IsRuntimeSpecialName
  bool HasSecurity
  bool IsEnum
  bool IsValueType
  bool IsPrimitive
  MetadataType MetadataType
  bool IsDefinition
  TypeDefinition DeclaringType
Методы:
  TypeAttributes get_Attributes()
  void set_Attributes(TypeAttributes value)
  TypeReference get_BaseType()
  void set_BaseType(TypeReference value)
  void ResolveLayout()
  bool get_HasLayoutInfo()
  short get_PackingSize()
  void set_PackingSize(short value)
  int get_ClassSize()
  void set_ClassSize(int value)
  bool get_HasInterfaces()
  Collection`1<TypeReference> get_Interfaces()
  bool get_HasNestedTypes()
  Collection`1<TypeDefinition> get_NestedTypes()
  bool get_HasMethods()
  Collection`1<MethodDefinition> get_Methods()
  bool get_HasFields()
  Collection`1<FieldDefinition> get_Fields()
  bool get_HasEvents()
  Collection`1<EventDefinition> get_Events()
  bool get_HasProperties()
  Collection`1<PropertyDefinition> get_Properties()
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  bool get_IsNotPublic()
  void set_IsNotPublic(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsNestedPublic()
  void set_IsNestedPublic(bool value)
  bool get_IsNestedPrivate()
  void set_IsNestedPrivate(bool value)
  bool get_IsNestedFamily()
  void set_IsNestedFamily(bool value)
  bool get_IsNestedAssembly()
  void set_IsNestedAssembly(bool value)
  bool get_IsNestedFamilyAndAssembly()
  void set_IsNestedFamilyAndAssembly(bool value)
  bool get_IsNestedFamilyOrAssembly()
  void set_IsNestedFamilyOrAssembly(bool value)
  bool get_IsAutoLayout()
  void set_IsAutoLayout(bool value)
  bool get_IsSequentialLayout()
  void set_IsSequentialLayout(bool value)
  bool get_IsExplicitLayout()
  void set_IsExplicitLayout(bool value)
  bool get_IsClass()
  void set_IsClass(bool value)
  bool get_IsInterface()
  void set_IsInterface(bool value)
  bool get_IsAbstract()
  void set_IsAbstract(bool value)
  bool get_IsSealed()
  void set_IsSealed(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsImport()
  void set_IsImport(bool value)
  bool get_IsSerializable()
  void set_IsSerializable(bool value)
  bool get_IsWindowsRuntime()
  void set_IsWindowsRuntime(bool value)
  bool get_IsAnsiClass()
  void set_IsAnsiClass(bool value)
  bool get_IsUnicodeClass()
  void set_IsUnicodeClass(bool value)
  bool get_IsAutoClass()
  void set_IsAutoClass(bool value)
  bool get_IsBeforeFieldInit()
  void set_IsBeforeFieldInit(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasSecurity()
  void set_HasSecurity(bool value)
  bool get_IsEnum()
  bool get_IsValueType()
  bool get_IsPrimitive()
  MetadataType get_MetadataType()
  bool get_IsDefinition()
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  void .ctor(string namespace, string name, TypeAttributes attributes)
  void .ctor(string namespace, string name, TypeAttributes attributes, TypeReference baseType)
  TypeDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.TypeDefinitionCollection
Наследуется от: Collection`1<TypeDefinition>
Поля:
  ModuleDefinition container
  Dictionary`2<Row`2<string, string>, TypeDefinition> name_cache
Свойства:
Методы:
  void .ctor(ModuleDefinition container)
  void .ctor(ModuleDefinition container, int capacity)
  void OnAdd(TypeDefinition item, int index)
  void OnSet(TypeDefinition item, int index)
  void OnInsert(TypeDefinition item, int index)
  void OnRemove(TypeDefinition item, int index)
  void OnClear()
  void Attach(TypeDefinition type)
  void Detach(TypeDefinition type)
  TypeDefinition GetType(string fullname)
  TypeDefinition GetType(string namespace, string name)
--------------------------------------------------
Класс: Mono.Cecil.MetadataType
Наследуется от: Enum
Поля:
  byte value__
  MetadataType Void
  MetadataType Boolean
  MetadataType Char
  MetadataType SByte
  MetadataType Byte
  MetadataType Int16
  MetadataType UInt16
  MetadataType Int32
  MetadataType UInt32
  MetadataType Int64
  MetadataType UInt64
  MetadataType Single
  MetadataType Double
  MetadataType String
  MetadataType Pointer
  MetadataType ByReference
  MetadataType ValueType
  MetadataType Class
  MetadataType Var
  MetadataType Array
  MetadataType GenericInstance
  MetadataType TypedByReference
  MetadataType IntPtr
  MetadataType UIntPtr
  MetadataType FunctionPointer
  MetadataType Object
  MetadataType MVar
  MetadataType RequiredModifier
  MetadataType OptionalModifier
  MetadataType Sentinel
  MetadataType Pinned
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeReference
Наследуется от: MemberReference
Поля:
  string namespace
  bool value_type
  IMetadataScope scope
  ModuleDefinition module
  ElementType etype
  string fullname
  Collection`1<GenericParameter> generic_parameters
Свойства:
  string Name
  string Namespace
  bool IsValueType
  ModuleDefinition Module
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
  IGenericParameterProvider Mono.Cecil.IGenericContext.Method
  GenericParameterType Mono.Cecil.IGenericParameterProvider.GenericParameterType
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  IMetadataScope Scope
  bool IsNested
  TypeReference DeclaringType
  string FullName
  bool IsByReference
  bool IsPointer
  bool IsSentinel
  bool IsArray
  bool IsGenericParameter
  bool IsGenericInstance
  bool IsRequiredModifier
  bool IsOptionalModifier
  bool IsPinned
  bool IsFunctionPointer
  bool IsPrimitive
  MetadataType MetadataType
Методы:
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  bool get_IsValueType()
  void set_IsValueType(bool value)
  ModuleDefinition get_Module()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Method()
  GenericParameterType Mono.Cecil.IGenericParameterProvider.get_GenericParameterType()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  bool get_IsNested()
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  string get_FullName()
  bool get_IsByReference()
  bool get_IsPointer()
  bool get_IsSentinel()
  bool get_IsArray()
  bool get_IsGenericParameter()
  bool get_IsGenericInstance()
  bool get_IsRequiredModifier()
  bool get_IsOptionalModifier()
  bool get_IsPinned()
  bool get_IsFunctionPointer()
  bool get_IsPrimitive()
  MetadataType get_MetadataType()
  void .ctor(string namespace, string name)
  void .ctor(string namespace, string name, ModuleDefinition module, IMetadataScope scope)
  void .ctor(string namespace, string name, ModuleDefinition module, IMetadataScope scope, bool valueType)
  TypeReference GetElementType()
  TypeDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.TypeSpecification
Наследуется от: TypeReference
Поля:
  TypeReference element_type
Свойства:
  TypeReference ElementType
  string Name
  string Namespace
  IMetadataScope Scope
  ModuleDefinition Module
  string FullName
  bool ContainsGenericParameter
  MetadataType MetadataType
Методы:
  TypeReference get_ElementType()
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  ModuleDefinition get_Module()
  string get_FullName()
  bool get_ContainsGenericParameter()
  MetadataType get_MetadataType()
  void .ctor(TypeReference type)
  TypeReference GetElementType()
--------------------------------------------------
Класс: Mono.Cecil.TypeSystem
Наследуется от: object
Поля:
  ModuleDefinition module
  TypeReference type_object
  TypeReference type_void
  TypeReference type_bool
  TypeReference type_char
  TypeReference type_sbyte
  TypeReference type_byte
  TypeReference type_int16
  TypeReference type_uint16
  TypeReference type_int32
  TypeReference type_uint32
  TypeReference type_int64
  TypeReference type_uint64
  TypeReference type_single
  TypeReference type_double
  TypeReference type_intptr
  TypeReference type_uintptr
  TypeReference type_string
  TypeReference type_typedref
Свойства:
  IMetadataScope Corlib
  TypeReference Object
  TypeReference Void
  TypeReference Boolean
  TypeReference Char
  TypeReference SByte
  TypeReference Byte
  TypeReference Int16
  TypeReference UInt16
  TypeReference Int32
  TypeReference UInt32
  TypeReference Int64
  TypeReference UInt64
  TypeReference Single
  TypeReference Double
  TypeReference IntPtr
  TypeReference UIntPtr
  TypeReference String
  TypeReference TypedReference
Методы:
  void .ctor(ModuleDefinition module)
  TypeSystem CreateTypeSystem(ModuleDefinition module)
  TypeReference LookupType(string namespace, string name)
  TypeReference LookupSystemType(TypeReference& reference, string name, ElementType element_type)
  TypeReference LookupSystemValueType(TypeReference& typeRef, string name, ElementType element_type)
  IMetadataScope get_Corlib()
  TypeReference get_Object()
  TypeReference get_Void()
  TypeReference get_Boolean()
  TypeReference get_Char()
  TypeReference get_SByte()
  TypeReference get_Byte()
  TypeReference get_Int16()
  TypeReference get_UInt16()
  TypeReference get_Int32()
  TypeReference get_UInt32()
  TypeReference get_Int64()
  TypeReference get_UInt64()
  TypeReference get_Single()
  TypeReference get_Double()
  TypeReference get_IntPtr()
  TypeReference get_UIntPtr()
  TypeReference get_String()
  TypeReference get_TypedReference()
--------------------------------------------------
Класс: Mono.Cecil.VariantType
Наследуется от: Enum
Поля:
  int value__
  VariantType None
  VariantType I2
  VariantType I4
  VariantType R4
  VariantType R8
  VariantType CY
  VariantType Date
  VariantType BStr
  VariantType Dispatch
  VariantType Error
  VariantType Bool
  VariantType Variant
  VariantType Unknown
  VariantType Decimal
  VariantType I1
  VariantType UI1
  VariantType UI2
  VariantType UI4
  VariantType Int
  VariantType UInt
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.CryptoService
Наследуется от: object
Поля:
Свойства:
Методы:
  void StrongName(Stream stream, ImageWriter writer, StrongNameKeyPair key_pair)
  void PatchStrongName(Stream stream, int strong_name_pointer, Byte[] strong_name)
  Byte[] CreateStrongName(StrongNameKeyPair key_pair, Byte[] hash)
  Byte[] HashStream(Stream stream, ImageWriter writer, Int32& strong_name_pointer)
  void CopyStreamChunk(Stream stream, Stream dest_stream, Byte[] buffer, int length)
  Byte[] ComputeHash(string file)
--------------------------------------------------
Класс: Mono.Cecil.PE.BinaryStreamReader
Наследуется от: BinaryReader
Поля:
Свойства:
Методы:
  void .ctor(Stream stream)
  void Advance(int bytes)
  DataDirectory ReadDataDirectory()
--------------------------------------------------
Класс: Mono.Cecil.PE.BinaryStreamWriter
Наследуется от: BinaryWriter
Поля:
Свойства:
Методы:
  void .ctor(Stream stream)
  void WriteByte(byte value)
  void WriteUInt16(ushort value)
  void WriteInt16(short value)
  void WriteUInt32(UInt32 value)
  void WriteInt32(int value)
  void WriteUInt64(ulong value)
  void WriteBytes(Byte[] bytes)
  void WriteDataDirectory(DataDirectory directory)
  void WriteBuffer(ByteBuffer buffer)
  void Advance(int bytes)
--------------------------------------------------
Класс: Mono.Cecil.PE.ByteBufferEqualityComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(ByteBuffer x, ByteBuffer y)
  int GetHashCode(ByteBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PE.ByteBuffer
Наследуется от: object
Поля:
  Byte[] buffer
  int length
  int position
Свойства:
Методы:
  void .ctor()
  void .ctor(int length)
  void .ctor(Byte[] buffer)
  void Reset(Byte[] buffer)
  void Advance(int length)
  byte ReadByte()
  sbyte ReadSByte()
  Byte[] ReadBytes(int length)
  ushort ReadUInt16()
  short ReadInt16()
  UInt32 ReadUInt32()
  int ReadInt32()
  ulong ReadUInt64()
  long ReadInt64()
  UInt32 ReadCompressedUInt32()
  int ReadCompressedInt32()
  float ReadSingle()
  double ReadDouble()
  void WriteByte(byte value)
  void WriteSByte(sbyte value)
  void WriteUInt16(ushort value)
  void WriteInt16(short value)
  void WriteUInt32(UInt32 value)
  void WriteInt32(int value)
  void WriteUInt64(ulong value)
  void WriteInt64(long value)
  void WriteCompressedUInt32(UInt32 value)
  void WriteCompressedInt32(int value)
  void WriteBytes(Byte[] bytes)
  void WriteBytes(int length)
  void WriteBytes(ByteBuffer buffer)
  void WriteSingle(float value)
  void WriteDouble(double value)
  void Grow(int desired)
--------------------------------------------------
Класс: Mono.Cecil.PE.DataDirectory
Наследуется от: ValueType
Поля:
  UInt32 VirtualAddress
  UInt32 Size
Свойства:
  bool IsZero
Методы:
  bool get_IsZero()
  void .ctor(UInt32 rva, UInt32 size)
--------------------------------------------------
Класс: Mono.Cecil.PE.Image
Наследуется от: object
Поля:
  ModuleKind Kind
  string RuntimeVersion
  TargetArchitecture Architecture
  ModuleCharacteristics Characteristics
  string FileName
  Section[] Sections
  Section MetadataSection
  UInt32 EntryPointToken
  ModuleAttributes Attributes
  DataDirectory Debug
  DataDirectory Resources
  DataDirectory StrongName
  StringHeap StringHeap
  BlobHeap BlobHeap
  UserStringHeap UserStringHeap
  GuidHeap GuidHeap
  TableHeap TableHeap
  Int32[] coded_index_sizes
  Func`2<Table, int> counter
Свойства:
Методы:
  void .ctor()
  bool HasTable(Table table)
  int GetTableLength(Table table)
  int GetTableIndexSize(Table table)
  int GetCodedIndexSize(CodedIndex coded_index)
  UInt32 ResolveVirtualAddress(UInt32 rva)
  UInt32 ResolveVirtualAddressInSection(UInt32 rva, Section section)
  Section GetSection(string name)
  Section GetSectionAtVirtualAddress(UInt32 rva)
  ImageDebugDirectory GetDebugHeader(Byte[]& header)
--------------------------------------------------
Класс: Mono.Cecil.PE.ImageReader
Наследуется от: BinaryStreamReader
Поля:
  Image image
  DataDirectory cli
  DataDirectory metadata
Свойства:
Методы:
  void .ctor(Stream stream)
  void MoveTo(DataDirectory directory)
  void MoveTo(UInt32 position)
  void ReadImage()
  TargetArchitecture ReadArchitecture()
  ModuleKind GetModuleKind(ushort characteristics, ushort subsystem)
  void ReadOptionalHeaders(UInt16& subsystem, UInt16& dll_characteristics)
  string ReadAlignedString(int length)
  string ReadZeroTerminatedString(int length)
  void ReadSections(ushort count)
  void ReadSectionData(Section section)
  void ReadCLIHeader()
  void ReadMetadata()
  void ReadMetadataStream(Section section)
  void ReadTableHeap()
  void SetIndexSize(Heap heap, UInt32 sizes, byte flag)
  int GetTableIndexSize(Table table)
  int GetCodedIndexSize(CodedIndex index)
  void ComputeTableInformations()
  Image ReadImageFrom(Stream stream)
--------------------------------------------------
Класс: Mono.Cecil.PE.ImageWriter
Наследуется от: BinaryStreamWriter
Поля:
  ModuleDefinition module
  MetadataBuilder metadata
  TextMap text_map
  ImageDebugDirectory debug_directory
  Byte[] debug_data
  ByteBuffer win32_resources
  UInt32 pe_header_size
  UInt32 section_header_size
  UInt32 file_alignment
  UInt32 section_alignment
  ulong image_base
  UInt32 text_rva
  bool pe64
  bool has_reloc
  UInt32 time_stamp
  Section text
  Section rsrc
  Section reloc
  ushort sections
Свойства:
Методы:
  void .ctor(ModuleDefinition module, MetadataBuilder metadata, Stream stream)
  void GetDebugHeader()
  void GetWin32Resources()
  Section GetImageResourceSection()
  ImageWriter CreateWriter(ModuleDefinition module, MetadataBuilder metadata, Stream stream)
  void BuildSections()
  Section CreateSection(string name, UInt32 size, Section previous)
  UInt32 Align(UInt32 value, UInt32 align)
  void WriteDOSHeader()
  ushort SizeOfOptionalHeader()
  void WritePEFileHeader()
  ushort GetMachine()
  Section LastSection()
  void WriteOptionalHeaders()
  void WriteZeroDataDirectory()
  ushort GetSubSystem()
  void WriteSectionHeaders()
  void WriteSection(Section section, UInt32 characteristics)
  void MoveTo(UInt32 pointer)
  void MoveToRVA(Section section, UInt32 rva)
  void MoveToRVA(TextSegment segment)
  void WriteRVA(UInt32 rva)
  void PrepareSection(Section section)
  void WriteText()
  UInt32 GetMetadataLength()
  void WriteMetadataHeader()
  ushort GetStreamCount()
  void WriteStreamHeader(UInt32& offset, TextSegment heap, string name)
  Byte[] GetZeroTerminatedString(string string)
  Byte[] GetSimpleString(string string)
  Byte[] GetString(string string, int length)
  void WriteMetadata()
  void WriteHeap(TextSegment heap, HeapBuffer buffer)
  void WriteGuidHeap()
  void WriteDebugDirectory()
  void WriteImportDirectory()
  Byte[] GetRuntimeMain()
  void WriteStartupStub()
  void WriteRsrc()
  void WriteReloc()
  void WriteImage()
  TextMap BuildTextMap()
  UInt32 GetStartupStubLength()
  int GetMetadataHeaderLength()
  int GetStrongNameLength()
  DataDirectory GetStrongNameSignatureDirectory()
  UInt32 GetHeaderSize()
  void PatchWin32Resources(ByteBuffer resources)
  void PatchResourceDirectoryTable(ByteBuffer resources)
  void PatchResourceDirectoryEntry(ByteBuffer resources)
  void PatchResourceDataEntry(ByteBuffer resources)
--------------------------------------------------
Класс: Mono.Cecil.PE.Section
Наследуется от: object
Поля:
  string Name
  UInt32 VirtualAddress
  UInt32 VirtualSize
  UInt32 SizeOfRawData
  UInt32 PointerToRawData
  Byte[] Data
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PE.TextSegment
Наследуется от: Enum
Поля:
  int value__
  TextSegment ImportAddressTable
  TextSegment CLIHeader
  TextSegment Code
  TextSegment Resources
  TextSegment Data
  TextSegment StrongNameSignature
  TextSegment MetadataHeader
  TextSegment TableHeap
  TextSegment StringHeap
  TextSegment UserStringHeap
  TextSegment GuidHeap
  TextSegment BlobHeap
  TextSegment DebugDirectory
  TextSegment ImportDirectory
  TextSegment ImportHintNameTable
  TextSegment StartupStub
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.PE.TextMap
Наследуется от: object
Поля:
  Range[] map
Свойства:
Методы:
  void AddMap(TextSegment segment, int length)
  void AddMap(TextSegment segment, int length, int align)
  void AddMap(TextSegment segment, Range range)
  Range GetRange(TextSegment segment)
  DataDirectory GetDataDirectory(TextSegment segment)
  UInt32 GetRVA(TextSegment segment)
  UInt32 GetNextRVA(TextSegment segment)
  int GetLength(TextSegment segment)
  UInt32 GetStart(TextSegment segment)
  UInt32 ComputeStart(int index)
  UInt32 GetLength()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.BlobHeap
Наследуется от: Heap
Поля:
Свойства:
Методы:
  void .ctor(Section section, UInt32 start, UInt32 size)
  Byte[] Read(UInt32 index)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.TableHeapBuffer
Наследуется от: HeapBuffer
Поля:
  ModuleDefinition module
  MetadataBuilder metadata
  MetadataTable[] tables
  bool large_string
  bool large_blob
  Int32[] coded_index_sizes
  Func`2<Table, int> counter
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor(ModuleDefinition module, MetadataBuilder metadata)
  int GetTableLength(Table table)
  TTable GetTable(Table table)
  void WriteBySize(UInt32 value, int size)
  void WriteBySize(UInt32 value, bool large)
  void WriteString(UInt32 string)
  void WriteBlob(UInt32 blob)
  void WriteRID(UInt32 rid, Table table)
  int GetCodedIndexSize(CodedIndex coded_index)
  void WriteCodedRID(UInt32 rid, CodedIndex coded_index)
  void WriteTableHeap()
  void WriteRowCount()
  void WriteTables()
  ulong GetValid()
  byte GetHeapSizes()
  byte GetTableHeapVersion()
  void FixupData(UInt32 data_rva)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.ResourceBuffer
Наследуется от: ByteBuffer
Поля:
Свойства:
Методы:
  void .ctor()
  UInt32 AddResource(Byte[] resource)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.DataBuffer
Наследуется от: ByteBuffer
Поля:
Свойства:
Методы:
  void .ctor()
  UInt32 AddData(Byte[] data)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.HeapBuffer
Наследуется от: ByteBuffer
Поля:
Свойства:
  bool IsLarge
  bool IsEmpty
Методы:
  bool get_IsLarge()
  bool get_IsEmpty()
  void .ctor(int length)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.StringHeapBuffer
Наследуется от: HeapBuffer
Поля:
  Dictionary`2<string, UInt32> strings
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor()
  UInt32 GetStringIndex(string string)
  void WriteString(string string)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.BlobHeapBuffer
Наследуется от: HeapBuffer
Поля:
  Dictionary`2<ByteBuffer, UInt32> blobs
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor()
  UInt32 GetBlobIndex(ByteBuffer blob)
  void WriteBlob(ByteBuffer blob)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.UserStringHeapBuffer
Наследуется от: StringHeapBuffer
Поля:
Свойства:
Методы:
  void WriteString(string string)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.CodedIndex
Наследуется от: Enum
Поля:
  int value__
  CodedIndex TypeDefOrRef
  CodedIndex HasConstant
  CodedIndex HasCustomAttribute
  CodedIndex HasFieldMarshal
  CodedIndex HasDeclSecurity
  CodedIndex MemberRefParent
  CodedIndex HasSemantics
  CodedIndex MethodDefOrRef
  CodedIndex MemberForwarded
  CodedIndex Implementation
  CodedIndex CustomAttributeType
  CodedIndex ResolutionScope
  CodedIndex TypeOrMethodDef
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Metadata.ElementType
Наследуется от: Enum
Поля:
  byte value__
  ElementType None
  ElementType Void
  ElementType Boolean
  ElementType Char
  ElementType I1
  ElementType U1
  ElementType I2
  ElementType U2
  ElementType I4
  ElementType U4
  ElementType I8
  ElementType U8
  ElementType R4
  ElementType R8
  ElementType String
  ElementType Ptr
  ElementType ByRef
  ElementType ValueType
  ElementType Class
  ElementType Var
  ElementType Array
  ElementType GenericInst
  ElementType TypedByRef
  ElementType I
  ElementType U
  ElementType FnPtr
  ElementType Object
  ElementType SzArray
  ElementType MVar
  ElementType CModReqD
  ElementType CModOpt
  ElementType Internal
  ElementType Modifier
  ElementType Sentinel
  ElementType Pinned
  ElementType Type
  ElementType Boxed
  ElementType Enum
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Metadata.GuidHeap
Наследуется от: Heap
Поля:
Свойства:
Методы:
  void .ctor(Section section, UInt32 start, UInt32 size)
  Guid Read(UInt32 index)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Heap
Наследуется от: object
Поля:
  int IndexSize
  Section Section
  UInt32 Offset
  UInt32 Size
Свойства:
Методы:
  void .ctor(Section section, UInt32 offset, UInt32 size)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`2
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`3
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`4
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`5
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
  T5 Col5
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4, T5 col5)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`6
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
  T5 Col5
  T6 Col6
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4, T5 col5, T6 col6)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`9
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
  T5 Col5
  T6 Col6
  T7 Col7
  T8 Col8
  T9 Col9
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4, T5 col5, T6 col6, T7 col7, T8 col8, T9 col9)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.RowEqualityComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(Row`2<string, string> x, Row`2<string, string> y)
  int GetHashCode(Row`2<string, string> obj)
  bool Equals(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  int GetHashCode(Row`2<UInt32, UInt32> obj)
  bool Equals(Row`3<UInt32, UInt32, UInt32> x, Row`3<UInt32, UInt32, UInt32> y)
  int GetHashCode(Row`3<UInt32, UInt32, UInt32> obj)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.StringHeap
Наследуется от: Heap
Поля:
  Dictionary`2<UInt32, string> strings
Свойства:
Методы:
  void .ctor(Section section, UInt32 start, UInt32 size)
  string Read(UInt32 index)
  string ReadStringAt(UInt32 index)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Table
Наследуется от: Enum
Поля:
  byte value__
  Table Module
  Table TypeRef
  Table TypeDef
  Table FieldPtr
  Table Field
  Table MethodPtr
  Table Method
  Table ParamPtr
  Table Param
  Table InterfaceImpl
  Table MemberRef
  Table Constant
  Table CustomAttribute
  Table FieldMarshal
  Table DeclSecurity
  Table ClassLayout
  Table FieldLayout
  Table StandAloneSig
  Table EventMap
  Table EventPtr
  Table Event
  Table PropertyMap
  Table PropertyPtr
  Table Property
  Table MethodSemantics
  Table MethodImpl
  Table ModuleRef
  Table TypeSpec
  Table ImplMap
  Table FieldRVA
  Table EncLog
  Table EncMap
  Table Assembly
  Table AssemblyProcessor
  Table AssemblyOS
  Table AssemblyRef
  Table AssemblyRefProcessor
  Table AssemblyRefOS
  Table File
  Table ExportedType
  Table ManifestResource
  Table NestedClass
  Table GenericParam
  Table MethodSpec
  Table GenericParamConstraint
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Metadata.TableInformation
Наследуется от: ValueType
Поля:
  UInt32 Offset
  UInt32 Length
  UInt32 RowSize
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Metadata.TableHeap
Наследуется от: Heap
Поля:
  long Valid
  long Sorted
  int TableCount
  TableInformation[] Tables
Свойства:
  TableInformation Item
Методы:
  TableInformation get_Item(Table table)
  void .ctor(Section section, UInt32 start, UInt32 size)
  bool HasTable(Table table)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.UserStringHeap
Наследуется от: StringHeap
Поля:
Свойства:
Методы:
  void .ctor(Section section, UInt32 start, UInt32 size)
  string ReadStringAt(UInt32 index)
--------------------------------------------------
Класс: Mono.Cecil.Cil.Code
Наследуется от: Enum
Поля:
  int value__
  Code Nop
  Code Break
  Code Ldarg_0
  Code Ldarg_1
  Code Ldarg_2
  Code Ldarg_3
  Code Ldloc_0
  Code Ldloc_1
  Code Ldloc_2
  Code Ldloc_3
  Code Stloc_0
  Code Stloc_1
  Code Stloc_2
  Code Stloc_3
  Code Ldarg_S
  Code Ldarga_S
  Code Starg_S
  Code Ldloc_S
  Code Ldloca_S
  Code Stloc_S
  Code Ldnull
  Code Ldc_I4_M1
  Code Ldc_I4_0
  Code Ldc_I4_1
  Code Ldc_I4_2
  Code Ldc_I4_3
  Code Ldc_I4_4
  Code Ldc_I4_5
  Code Ldc_I4_6
  Code Ldc_I4_7
  Code Ldc_I4_8
  Code Ldc_I4_S
  Code Ldc_I4
  Code Ldc_I8
  Code Ldc_R4
  Code Ldc_R8
  Code Dup
  Code Pop
  Code Jmp
  Code Call
  Code Calli
  Code Ret
  Code Br_S
  Code Brfalse_S
  Code Brtrue_S
  Code Beq_S
  Code Bge_S
  Code Bgt_S
  Code Ble_S
  Code Blt_S
  Code Bne_Un_S
  Code Bge_Un_S
  Code Bgt_Un_S
  Code Ble_Un_S
  Code Blt_Un_S
  Code Br
  Code Brfalse
  Code Brtrue
  Code Beq
  Code Bge
  Code Bgt
  Code Ble
  Code Blt
  Code Bne_Un
  Code Bge_Un
  Code Bgt_Un
  Code Ble_Un
  Code Blt_Un
  Code Switch
  Code Ldind_I1
  Code Ldind_U1
  Code Ldind_I2
  Code Ldind_U2
  Code Ldind_I4
  Code Ldind_U4
  Code Ldind_I8
  Code Ldind_I
  Code Ldind_R4
  Code Ldind_R8
  Code Ldind_Ref
  Code Stind_Ref
  Code Stind_I1
  Code Stind_I2
  Code Stind_I4
  Code Stind_I8
  Code Stind_R4
  Code Stind_R8
  Code Add
  Code Sub
  Code Mul
  Code Div
  Code Div_Un
  Code Rem
  Code Rem_Un
  Code And
  Code Or
  Code Xor
  Code Shl
  Code Shr
  Code Shr_Un
  Code Neg
  Code Not
  Code Conv_I1
  Code Conv_I2
  Code Conv_I4
  Code Conv_I8
  Code Conv_R4
  Code Conv_R8
  Code Conv_U4
  Code Conv_U8
  Code Callvirt
  Code Cpobj
  Code Ldobj
  Code Ldstr
  Code Newobj
  Code Castclass
  Code Isinst
  Code Conv_R_Un
  Code Unbox
  Code Throw
  Code Ldfld
  Code Ldflda
  Code Stfld
  Code Ldsfld
  Code Ldsflda
  Code Stsfld
  Code Stobj
  Code Conv_Ovf_I1_Un
  Code Conv_Ovf_I2_Un
  Code Conv_Ovf_I4_Un
  Code Conv_Ovf_I8_Un
  Code Conv_Ovf_U1_Un
  Code Conv_Ovf_U2_Un
  Code Conv_Ovf_U4_Un
  Code Conv_Ovf_U8_Un
  Code Conv_Ovf_I_Un
  Code Conv_Ovf_U_Un
  Code Box
  Code Newarr
  Code Ldlen
  Code Ldelema
  Code Ldelem_I1
  Code Ldelem_U1
  Code Ldelem_I2
  Code Ldelem_U2
  Code Ldelem_I4
  Code Ldelem_U4
  Code Ldelem_I8
  Code Ldelem_I
  Code Ldelem_R4
  Code Ldelem_R8
  Code Ldelem_Ref
  Code Stelem_I
  Code Stelem_I1
  Code Stelem_I2
  Code Stelem_I4
  Code Stelem_I8
  Code Stelem_R4
  Code Stelem_R8
  Code Stelem_Ref
  Code Ldelem_Any
  Code Stelem_Any
  Code Unbox_Any
  Code Conv_Ovf_I1
  Code Conv_Ovf_U1
  Code Conv_Ovf_I2
  Code Conv_Ovf_U2
  Code Conv_Ovf_I4
  Code Conv_Ovf_U4
  Code Conv_Ovf_I8
  Code Conv_Ovf_U8
  Code Refanyval
  Code Ckfinite
  Code Mkrefany
  Code Ldtoken
  Code Conv_U2
  Code Conv_U1
  Code Conv_I
  Code Conv_Ovf_I
  Code Conv_Ovf_U
  Code Add_Ovf
  Code Add_Ovf_Un
  Code Mul_Ovf
  Code Mul_Ovf_Un
  Code Sub_Ovf
  Code Sub_Ovf_Un
  Code Endfinally
  Code Leave
  Code Leave_S
  Code Stind_I
  Code Conv_U
  Code Arglist
  Code Ceq
  Code Cgt
  Code Cgt_Un
  Code Clt
  Code Clt_Un
  Code Ldftn
  Code Ldvirtftn
  Code Ldarg
  Code Ldarga
  Code Starg
  Code Ldloc
  Code Ldloca
  Code Stloc
  Code Localloc
  Code Endfilter
  Code Unaligned
  Code Volatile
  Code Tail
  Code Initobj
  Code Constrained
  Code Cpblk
  Code Initblk
  Code No
  Code Rethrow
  Code Sizeof
  Code Refanytype
  Code Readonly
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.CodeWriter
Наследуется от: ByteBuffer
Поля:
  UInt32 code_base
  MetadataBuilder metadata
  Dictionary`2<UInt32, MetadataToken> standalone_signatures
  UInt32 current
  MethodBody body
Свойства:
Методы:
  void .ctor(MetadataBuilder metadata)
  UInt32 WriteMethodBody(MethodDefinition method)
  bool IsEmptyMethodBody(MethodBody body)
  bool IsUnresolved(MethodDefinition method)
  void WriteUnresolvedMethodBody(MethodDefinition method)
  MetadataToken GetLocalVarToken(ByteBuffer buffer, MethodSymbols symbols)
  void WriteResolvedMethodBody(MethodDefinition method)
  void WriteFatHeader()
  void WriteInstructions()
  void WriteOpCode(OpCode opcode)
  void WriteOperand(Instruction instruction)
  int GetTargetOffset(Instruction instruction)
  UInt32 GetUserStringIndex(string string)
  int GetVariableIndex(VariableDefinition variable)
  int GetParameterIndex(ParameterDefinition parameter)
  bool RequiresFatHeader()
  void ComputeHeader()
  void ComputeExceptionHandlerStackSize(Dictionary`2& stack_sizes)
  void AddExceptionStackSize(Instruction handler_start, Dictionary`2& stack_sizes)
  void ComputeStackSize(Instruction instruction, Dictionary`2& stack_sizes, Int32& stack_size, Int32& max_stack)
  void CopyBranchStackSize(Instruction instruction, Dictionary`2& stack_sizes, int stack_size)
  void CopyBranchStackSize(Dictionary`2& stack_sizes, Instruction target, int stack_size)
  void ComputeStackSize(Instruction instruction, Int32& stack_size)
  void ComputeStackDelta(Instruction instruction, Int32& stack_size)
  void ComputePopDelta(StackBehaviour pop_behavior, Int32& stack_size)
  void ComputePushDelta(StackBehaviour push_behaviour, Int32& stack_size)
  void WriteExceptionHandlers()
  bool RequiresFatSection(Collection`1<ExceptionHandler> handlers)
  bool IsFatRange(Instruction start, Instruction end)
  void WriteSmallSection(Collection`1<ExceptionHandler> handlers)
  void WriteFatSection(Collection`1<ExceptionHandler> handlers)
  void WriteExceptionHandlers(Collection`1<ExceptionHandler> handlers, Action`1<int> write_entry, Action`1<int> write_length)
  void WriteExceptionHandlerSpecific(ExceptionHandler handler)
  MetadataToken GetStandAloneSignature(Collection`1<VariableDefinition> variables)
  MetadataToken GetStandAloneSignature(CallSite call_site)
  MetadataToken GetStandAloneSignatureToken(UInt32 signature)
  UInt32 BeginMethod()
  void WriteMetadataToken(MetadataToken token)
  void Align(int align)
  void EndMethod()
  void <WriteSmallSection>b__34_0(int i)
  void <WriteSmallSection>b__34_1(int i)
--------------------------------------------------
Класс: Mono.Cecil.Cil.CodeReader
Наследуется от: ByteBuffer
Поля:
  MetadataReader reader
  int start
  Section code_section
  MethodDefinition method
  MethodBody body
Свойства:
  int Offset
Методы:
  int get_Offset()
  void .ctor(Section section, MetadataReader reader)
  MethodBody ReadMethodBody(MethodDefinition method)
  void MoveTo(int rva)
  bool IsInSection(int rva)
  void ReadMethodBody()
  void ReadFatMethod()
  VariableDefinitionCollection ReadVariables(MetadataToken local_var_token)
  void ReadCode()
  OpCode ReadOpCode()
  object ReadOperand(Instruction instruction)
  string GetString(MetadataToken token)
  ParameterDefinition GetParameter(int index)
  VariableDefinition GetVariable(int index)
  CallSite GetCallSite(MetadataToken token)
  void ResolveBranches(Collection`1<Instruction> instructions)
  Instruction GetInstruction(int offset)
  Instruction GetInstruction(Collection`1<Instruction> instructions, int offset)
  void ReadSection()
  void ReadSmallSection()
  void ReadFatSection()
  void ReadExceptionHandlers(int count, Func`1<int> read_entry, Func`1<int> read_length)
  void ReadExceptionHandlerSpecific(ExceptionHandler handler)
  void Align(int align)
  MetadataToken ReadToken()
  ByteBuffer PatchRawMethodBody(MethodDefinition method, CodeWriter writer, MethodSymbols& symbols)
  void PatchRawFatMethod(ByteBuffer buffer, MethodSymbols symbols, CodeWriter writer, MetadataToken& local_var_token)
  MetadataToken GetOriginalToken(MetadataBuilder metadata, MethodDefinition method)
  void PatchRawCode(ByteBuffer buffer, int code_size, CodeWriter writer)
  void PatchRawSection(ByteBuffer buffer, MetadataBuilder metadata)
  void PatchRawSmallSection(ByteBuffer buffer, MetadataBuilder metadata)
  void PatchRawFatSection(ByteBuffer buffer, MetadataBuilder metadata)
  void PatchRawExceptionHandlers(ByteBuffer buffer, MetadataBuilder metadata, int count, bool fat_entry)
  int <ReadSmallSection>b__25_0()
  int <ReadSmallSection>b__25_1()
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentType
Наследуется от: Enum
Поля:
  int value__
  DocumentType Other
  DocumentType Text
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentHashAlgorithm
Наследуется от: Enum
Поля:
  int value__
  DocumentHashAlgorithm None
  DocumentHashAlgorithm MD5
  DocumentHashAlgorithm SHA1
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentLanguage
Наследуется от: Enum
Поля:
  int value__
  DocumentLanguage Other
  DocumentLanguage C
  DocumentLanguage Cpp
  DocumentLanguage CSharp
  DocumentLanguage Basic
  DocumentLanguage Java
  DocumentLanguage Cobol
  DocumentLanguage Pascal
  DocumentLanguage Cil
  DocumentLanguage JScript
  DocumentLanguage Smc
  DocumentLanguage MCpp
  DocumentLanguage FSharp
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentLanguageVendor
Наследуется от: Enum
Поля:
  int value__
  DocumentLanguageVendor Other
  DocumentLanguageVendor Microsoft
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.Document
Наследуется от: object
Поля:
  string url
  byte type
  byte hash_algorithm
  byte language
  byte language_vendor
  Byte[] hash
Свойства:
  string Url
  DocumentType Type
  DocumentHashAlgorithm HashAlgorithm
  DocumentLanguage Language
  DocumentLanguageVendor LanguageVendor
  Byte[] Hash
Методы:
  string get_Url()
  void set_Url(string value)
  DocumentType get_Type()
  void set_Type(DocumentType value)
  DocumentHashAlgorithm get_HashAlgorithm()
  void set_HashAlgorithm(DocumentHashAlgorithm value)
  DocumentLanguage get_Language()
  void set_Language(DocumentLanguage value)
  DocumentLanguageVendor get_LanguageVendor()
  void set_LanguageVendor(DocumentLanguageVendor value)
  Byte[] get_Hash()
  void set_Hash(Byte[] value)
  void .ctor(string url)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ExceptionHandlerType
Наследуется от: Enum
Поля:
  int value__
  ExceptionHandlerType Catch
  ExceptionHandlerType Filter
  ExceptionHandlerType Finally
  ExceptionHandlerType Fault
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.ExceptionHandler
Наследуется от: object
Поля:
  Instruction try_start
  Instruction try_end
  Instruction filter_start
  Instruction handler_start
  Instruction handler_end
  TypeReference catch_type
  ExceptionHandlerType handler_type
Свойства:
  Instruction TryStart
  Instruction TryEnd
  Instruction FilterStart
  Instruction HandlerStart
  Instruction HandlerEnd
  TypeReference CatchType
  ExceptionHandlerType HandlerType
Методы:
  Instruction get_TryStart()
  void set_TryStart(Instruction value)
  Instruction get_TryEnd()
  void set_TryEnd(Instruction value)
  Instruction get_FilterStart()
  void set_FilterStart(Instruction value)
  Instruction get_HandlerStart()
  void set_HandlerStart(Instruction value)
  Instruction get_HandlerEnd()
  void set_HandlerEnd(Instruction value)
  TypeReference get_CatchType()
  void set_CatchType(TypeReference value)
  ExceptionHandlerType get_HandlerType()
  void set_HandlerType(ExceptionHandlerType value)
  void .ctor(ExceptionHandlerType handlerType)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ILProcessor
Наследуется от: object
Поля:
  MethodBody body
  Collection`1<Instruction> instructions
Свойства:
  MethodBody Body
Методы:
  MethodBody get_Body()
  void .ctor(MethodBody body)
  Instruction Create(OpCode opcode)
  Instruction Create(OpCode opcode, TypeReference type)
  Instruction Create(OpCode opcode, CallSite site)
  Instruction Create(OpCode opcode, MethodReference method)
  Instruction Create(OpCode opcode, FieldReference field)
  Instruction Create(OpCode opcode, string value)
  Instruction Create(OpCode opcode, sbyte value)
  Instruction Create(OpCode opcode, byte value)
  Instruction Create(OpCode opcode, int value)
  Instruction Create(OpCode opcode, long value)
  Instruction Create(OpCode opcode, float value)
  Instruction Create(OpCode opcode, double value)
  Instruction Create(OpCode opcode, Instruction target)
  Instruction Create(OpCode opcode, Instruction[] targets)
  Instruction Create(OpCode opcode, VariableDefinition variable)
  Instruction Create(OpCode opcode, ParameterDefinition parameter)
  void Emit(OpCode opcode)
  void Emit(OpCode opcode, TypeReference type)
  void Emit(OpCode opcode, MethodReference method)
  void Emit(OpCode opcode, CallSite site)
  void Emit(OpCode opcode, FieldReference field)
  void Emit(OpCode opcode, string value)
  void Emit(OpCode opcode, byte value)
  void Emit(OpCode opcode, sbyte value)
  void Emit(OpCode opcode, int value)
  void Emit(OpCode opcode, long value)
  void Emit(OpCode opcode, float value)
  void Emit(OpCode opcode, double value)
  void Emit(OpCode opcode, Instruction target)
  void Emit(OpCode opcode, Instruction[] targets)
  void Emit(OpCode opcode, VariableDefinition variable)
  void Emit(OpCode opcode, ParameterDefinition parameter)
  void InsertBefore(Instruction target, Instruction instruction)
  void InsertAfter(Instruction target, Instruction instruction)
  void Append(Instruction instruction)
  void Replace(Instruction target, Instruction instruction)
  void Remove(Instruction instruction)
--------------------------------------------------
Класс: Mono.Cecil.Cil.Instruction
Наследуется от: object
Поля:
  int offset
  OpCode opcode
  object operand
  Instruction previous
  Instruction next
  SequencePoint sequence_point
Свойства:
  int Offset
  OpCode OpCode
  object Operand
  Instruction Previous
  Instruction Next
  SequencePoint SequencePoint
Методы:
  int get_Offset()
  void set_Offset(int value)
  OpCode get_OpCode()
  void set_OpCode(OpCode value)
  object get_Operand()
  void set_Operand(object value)
  Instruction get_Previous()
  void set_Previous(Instruction value)
  Instruction get_Next()
  void set_Next(Instruction value)
  SequencePoint get_SequencePoint()
  void set_SequencePoint(SequencePoint value)
  void .ctor(int offset, OpCode opCode)
  void .ctor(OpCode opcode, object operand)
  int GetSize()
  string ToString()
  void AppendLabel(StringBuilder builder, Instruction instruction)
  Instruction Create(OpCode opcode)
  Instruction Create(OpCode opcode, TypeReference type)
  Instruction Create(OpCode opcode, CallSite site)
  Instruction Create(OpCode opcode, MethodReference method)
  Instruction Create(OpCode opcode, FieldReference field)
  Instruction Create(OpCode opcode, string value)
  Instruction Create(OpCode opcode, sbyte value)
  Instruction Create(OpCode opcode, byte value)
  Instruction Create(OpCode opcode, int value)
  Instruction Create(OpCode opcode, long value)
  Instruction Create(OpCode opcode, float value)
  Instruction Create(OpCode opcode, double value)
  Instruction Create(OpCode opcode, Instruction target)
  Instruction Create(OpCode opcode, Instruction[] targets)
  Instruction Create(OpCode opcode, VariableDefinition variable)
  Instruction Create(OpCode opcode, ParameterDefinition parameter)
--------------------------------------------------
Класс: Mono.Cecil.Cil.MethodBody
Наследуется от: object
Поля:
  MethodDefinition method
  ParameterDefinition this_parameter
  int max_stack_size
  int code_size
  bool init_locals
  MetadataToken local_var_token
  Collection`1<Instruction> instructions
  Collection`1<ExceptionHandler> exceptions
  Collection`1<VariableDefinition> variables
  Scope scope
Свойства:
  MethodDefinition Method
  int MaxStackSize
  int CodeSize
  bool InitLocals
  MetadataToken LocalVarToken
  Collection`1<Instruction> Instructions
  bool HasExceptionHandlers
  Collection`1<ExceptionHandler> ExceptionHandlers
  bool HasVariables
  Collection`1<VariableDefinition> Variables
  Scope Scope
  ParameterDefinition ThisParameter
Методы:
  MethodDefinition get_Method()
  int get_MaxStackSize()
  void set_MaxStackSize(int value)
  int get_CodeSize()
  bool get_InitLocals()
  void set_InitLocals(bool value)
  MetadataToken get_LocalVarToken()
  void set_LocalVarToken(MetadataToken value)
  Collection`1<Instruction> get_Instructions()
  bool get_HasExceptionHandlers()
  Collection`1<ExceptionHandler> get_ExceptionHandlers()
  bool get_HasVariables()
  Collection`1<VariableDefinition> get_Variables()
  Scope get_Scope()
  void set_Scope(Scope value)
  ParameterDefinition get_ThisParameter()
  ParameterDefinition CreateThisParameter(MethodDefinition method)
  void .ctor(MethodDefinition method)
  ILProcessor GetILProcessor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.IVariableDefinitionProvider
Поля:
Свойства:
  bool HasVariables
  Collection`1<VariableDefinition> Variables
Методы:
  bool get_HasVariables()
  Collection`1<VariableDefinition> get_Variables()
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableDefinitionCollection
Наследуется от: Collection`1<VariableDefinition>
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(int capacity)
  void OnAdd(VariableDefinition item, int index)
  void OnInsert(VariableDefinition item, int index)
  void OnSet(VariableDefinition item, int index)
  void OnRemove(VariableDefinition item, int index)
--------------------------------------------------
Класс: Mono.Cecil.Cil.InstructionCollection
Наследуется от: Collection`1<Instruction>
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(int capacity)
  void OnAdd(Instruction item, int index)
  void OnInsert(Instruction item, int index)
  void OnSet(Instruction item, int index)
  void OnRemove(Instruction item, int index)
--------------------------------------------------
Класс: Mono.Cecil.Cil.FlowControl
Наследуется от: Enum
Поля:
  int value__
  FlowControl Branch
  FlowControl Break
  FlowControl Call
  FlowControl Cond_Branch
  FlowControl Meta
  FlowControl Next
  FlowControl Phi
  FlowControl Return
  FlowControl Throw
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCodeType
Наследуется от: Enum
Поля:
  int value__
  OpCodeType Annotation
  OpCodeType Macro
  OpCodeType Nternal
  OpCodeType Objmodel
  OpCodeType Prefix
  OpCodeType Primitive
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.OperandType
Наследуется от: Enum
Поля:
  int value__
  OperandType InlineBrTarget
  OperandType InlineField
  OperandType InlineI
  OperandType InlineI8
  OperandType InlineMethod
  OperandType InlineNone
  OperandType InlinePhi
  OperandType InlineR
  OperandType InlineSig
  OperandType InlineString
  OperandType InlineSwitch
  OperandType InlineTok
  OperandType InlineType
  OperandType InlineVar
  OperandType InlineArg
  OperandType ShortInlineBrTarget
  OperandType ShortInlineI
  OperandType ShortInlineR
  OperandType ShortInlineVar
  OperandType ShortInlineArg
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.StackBehaviour
Наследуется от: Enum
Поля:
  int value__
  StackBehaviour Pop0
  StackBehaviour Pop1
  StackBehaviour Pop1_pop1
  StackBehaviour Popi
  StackBehaviour Popi_pop1
  StackBehaviour Popi_popi
  StackBehaviour Popi_popi8
  StackBehaviour Popi_popi_popi
  StackBehaviour Popi_popr4
  StackBehaviour Popi_popr8
  StackBehaviour Popref
  StackBehaviour Popref_pop1
  StackBehaviour Popref_popi
  StackBehaviour Popref_popi_popi
  StackBehaviour Popref_popi_popi8
  StackBehaviour Popref_popi_popr4
  StackBehaviour Popref_popi_popr8
  StackBehaviour Popref_popi_popref
  StackBehaviour PopAll
  StackBehaviour Push0
  StackBehaviour Push1
  StackBehaviour Push1_push1
  StackBehaviour Pushi
  StackBehaviour Pushi8
  StackBehaviour Pushr4
  StackBehaviour Pushr8
  StackBehaviour Pushref
  StackBehaviour Varpop
  StackBehaviour Varpush
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCode
Наследуется от: ValueType
Поля:
  byte op1
  byte op2
  byte code
  byte flow_control
  byte opcode_type
  byte operand_type
  byte stack_behavior_pop
  byte stack_behavior_push
Свойства:
  string Name
  int Size
  byte Op1
  byte Op2
  short Value
  Code Code
  FlowControl FlowControl
  OpCodeType OpCodeType
  OperandType OperandType
  StackBehaviour StackBehaviourPop
  StackBehaviour StackBehaviourPush
Методы:
  string get_Name()
  int get_Size()
  byte get_Op1()
  byte get_Op2()
  short get_Value()
  Code get_Code()
  FlowControl get_FlowControl()
  OpCodeType get_OpCodeType()
  OperandType get_OperandType()
  StackBehaviour get_StackBehaviourPop()
  StackBehaviour get_StackBehaviourPush()
  void .ctor(int x, int y)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(OpCode opcode)
  bool op_Equality(OpCode one, OpCode other)
  bool op_Inequality(OpCode one, OpCode other)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCodeNames
Наследуется от: object
Поля:
  String[] names
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCodes
Наследуется от: object
Поля:
  OpCode[] OneByteOpCode
  OpCode[] TwoBytesOpCode
  OpCode Nop
  OpCode Break
  OpCode Ldarg_0
  OpCode Ldarg_1
  OpCode Ldarg_2
  OpCode Ldarg_3
  OpCode Ldloc_0
  OpCode Ldloc_1
  OpCode Ldloc_2
  OpCode Ldloc_3
  OpCode Stloc_0
  OpCode Stloc_1
  OpCode Stloc_2
  OpCode Stloc_3
  OpCode Ldarg_S
  OpCode Ldarga_S
  OpCode Starg_S
  OpCode Ldloc_S
  OpCode Ldloca_S
  OpCode Stloc_S
  OpCode Ldnull
  OpCode Ldc_I4_M1
  OpCode Ldc_I4_0
  OpCode Ldc_I4_1
  OpCode Ldc_I4_2
  OpCode Ldc_I4_3
  OpCode Ldc_I4_4
  OpCode Ldc_I4_5
  OpCode Ldc_I4_6
  OpCode Ldc_I4_7
  OpCode Ldc_I4_8
  OpCode Ldc_I4_S
  OpCode Ldc_I4
  OpCode Ldc_I8
  OpCode Ldc_R4
  OpCode Ldc_R8
  OpCode Dup
  OpCode Pop
  OpCode Jmp
  OpCode Call
  OpCode Calli
  OpCode Ret
  OpCode Br_S
  OpCode Brfalse_S
  OpCode Brtrue_S
  OpCode Beq_S
  OpCode Bge_S
  OpCode Bgt_S
  OpCode Ble_S
  OpCode Blt_S
  OpCode Bne_Un_S
  OpCode Bge_Un_S
  OpCode Bgt_Un_S
  OpCode Ble_Un_S
  OpCode Blt_Un_S
  OpCode Br
  OpCode Brfalse
  OpCode Brtrue
  OpCode Beq
  OpCode Bge
  OpCode Bgt
  OpCode Ble
  OpCode Blt
  OpCode Bne_Un
  OpCode Bge_Un
  OpCode Bgt_Un
  OpCode Ble_Un
  OpCode Blt_Un
  OpCode Switch
  OpCode Ldind_I1
  OpCode Ldind_U1
  OpCode Ldind_I2
  OpCode Ldind_U2
  OpCode Ldind_I4
  OpCode Ldind_U4
  OpCode Ldind_I8
  OpCode Ldind_I
  OpCode Ldind_R4
  OpCode Ldind_R8
  OpCode Ldind_Ref
  OpCode Stind_Ref
  OpCode Stind_I1
  OpCode Stind_I2
  OpCode Stind_I4
  OpCode Stind_I8
  OpCode Stind_R4
  OpCode Stind_R8
  OpCode Add
  OpCode Sub
  OpCode Mul
  OpCode Div
  OpCode Div_Un
  OpCode Rem
  OpCode Rem_Un
  OpCode And
  OpCode Or
  OpCode Xor
  OpCode Shl
  OpCode Shr
  OpCode Shr_Un
  OpCode Neg
  OpCode Not
  OpCode Conv_I1
  OpCode Conv_I2
  OpCode Conv_I4
  OpCode Conv_I8
  OpCode Conv_R4
  OpCode Conv_R8
  OpCode Conv_U4
  OpCode Conv_U8
  OpCode Callvirt
  OpCode Cpobj
  OpCode Ldobj
  OpCode Ldstr
  OpCode Newobj
  OpCode Castclass
  OpCode Isinst
  OpCode Conv_R_Un
  OpCode Unbox
  OpCode Throw
  OpCode Ldfld
  OpCode Ldflda
  OpCode Stfld
  OpCode Ldsfld
  OpCode Ldsflda
  OpCode Stsfld
  OpCode Stobj
  OpCode Conv_Ovf_I1_Un
  OpCode Conv_Ovf_I2_Un
  OpCode Conv_Ovf_I4_Un
  OpCode Conv_Ovf_I8_Un
  OpCode Conv_Ovf_U1_Un
  OpCode Conv_Ovf_U2_Un
  OpCode Conv_Ovf_U4_Un
  OpCode Conv_Ovf_U8_Un
  OpCode Conv_Ovf_I_Un
  OpCode Conv_Ovf_U_Un
  OpCode Box
  OpCode Newarr
  OpCode Ldlen
  OpCode Ldelema
  OpCode Ldelem_I1
  OpCode Ldelem_U1
  OpCode Ldelem_I2
  OpCode Ldelem_U2
  OpCode Ldelem_I4
  OpCode Ldelem_U4
  OpCode Ldelem_I8
  OpCode Ldelem_I
  OpCode Ldelem_R4
  OpCode Ldelem_R8
  OpCode Ldelem_Ref
  OpCode Stelem_I
  OpCode Stelem_I1
  OpCode Stelem_I2
  OpCode Stelem_I4
  OpCode Stelem_I8
  OpCode Stelem_R4
  OpCode Stelem_R8
  OpCode Stelem_Ref
  OpCode Ldelem_Any
  OpCode Stelem_Any
  OpCode Unbox_Any
  OpCode Conv_Ovf_I1
  OpCode Conv_Ovf_U1
  OpCode Conv_Ovf_I2
  OpCode Conv_Ovf_U2
  OpCode Conv_Ovf_I4
  OpCode Conv_Ovf_U4
  OpCode Conv_Ovf_I8
  OpCode Conv_Ovf_U8
  OpCode Refanyval
  OpCode Ckfinite
  OpCode Mkrefany
  OpCode Ldtoken
  OpCode Conv_U2
  OpCode Conv_U1
  OpCode Conv_I
  OpCode Conv_Ovf_I
  OpCode Conv_Ovf_U
  OpCode Add_Ovf
  OpCode Add_Ovf_Un
  OpCode Mul_Ovf
  OpCode Mul_Ovf_Un
  OpCode Sub_Ovf
  OpCode Sub_Ovf_Un
  OpCode Endfinally
  OpCode Leave
  OpCode Leave_S
  OpCode Stind_I
  OpCode Conv_U
  OpCode Arglist
  OpCode Ceq
  OpCode Cgt
  OpCode Cgt_Un
  OpCode Clt
  OpCode Clt_Un
  OpCode Ldftn
  OpCode Ldvirtftn
  OpCode Ldarg
  OpCode Ldarga
  OpCode Starg
  OpCode Ldloc
  OpCode Ldloca
  OpCode Stloc
  OpCode Localloc
  OpCode Endfilter
  OpCode Unaligned
  OpCode Volatile
  OpCode Tail
  OpCode Initobj
  OpCode Constrained
  OpCode Cpblk
  OpCode Initblk
  OpCode No
  OpCode Rethrow
  OpCode Sizeof
  OpCode Refanytype
  OpCode Readonly
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.SequencePoint
Наследуется от: object
Поля:
  Document document
  int start_line
  int start_column
  int end_line
  int end_column
Свойства:
  int StartLine
  int StartColumn
  int EndLine
  int EndColumn
  Document Document
Методы:
  int get_StartLine()
  void set_StartLine(int value)
  int get_StartColumn()
  void set_StartColumn(int value)
  int get_EndLine()
  void set_EndLine(int value)
  int get_EndColumn()
  void set_EndColumn(int value)
  Document get_Document()
  void set_Document(Document value)
  void .ctor(Document document)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImageDebugDirectory
Наследуется от: ValueType
Поля:
  int Characteristics
  int TimeDateStamp
  short MajorVersion
  short MinorVersion
  int Type
  int SizeOfData
  int AddressOfRawData
  int PointerToRawData
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.Scope
Наследуется от: object
Поля:
  Instruction start
  Instruction end
  Collection`1<Scope> scopes
  Collection`1<VariableDefinition> variables
Свойства:
  Instruction Start
  Instruction End
  bool HasScopes
  Collection`1<Scope> Scopes
  bool HasVariables
  Collection`1<VariableDefinition> Variables
Методы:
  Instruction get_Start()
  void set_Start(Instruction value)
  Instruction get_End()
  void set_End(Instruction value)
  bool get_HasScopes()
  Collection`1<Scope> get_Scopes()
  bool get_HasVariables()
  Collection`1<VariableDefinition> get_Variables()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.InstructionSymbol
Наследуется от: ValueType
Поля:
  int Offset
  SequencePoint SequencePoint
Свойства:
Методы:
  void .ctor(int offset, SequencePoint sequencePoint)
--------------------------------------------------
Класс: Mono.Cecil.Cil.MethodSymbols
Наследуется от: object
Поля:
  int code_size
  string method_name
  MetadataToken method_token
  MetadataToken local_var_token
  Collection`1<VariableDefinition> variables
  Collection`1<InstructionSymbol> instructions
Свойства:
  bool HasVariables
  Collection`1<VariableDefinition> Variables
  Collection`1<InstructionSymbol> Instructions
  int CodeSize
  string MethodName
  MetadataToken MethodToken
  MetadataToken LocalVarToken
Методы:
  bool get_HasVariables()
  Collection`1<VariableDefinition> get_Variables()
  Collection`1<InstructionSymbol> get_Instructions()
  int get_CodeSize()
  string get_MethodName()
  MetadataToken get_MethodToken()
  MetadataToken get_LocalVarToken()
  void .ctor(string methodName)
  void .ctor(MetadataToken methodToken)
--------------------------------------------------
Класс: Mono.Cecil.Cil.InstructionMapper
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  Instruction Invoke(int offset)
  IAsyncResult BeginInvoke(int offset, AsyncCallback callback, object object)
  Instruction EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolReader
Поля:
Свойства:
Методы:
  bool ProcessDebugHeader(ImageDebugDirectory directory, Byte[] header)
  void Read(MethodBody body, InstructionMapper mapper)
  void Read(MethodSymbols symbols)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolReaderProvider
Поля:
Свойства:
Методы:
  ISymbolReader GetSymbolReader(ModuleDefinition module, string fileName)
  ISymbolReader GetSymbolReader(ModuleDefinition module, Stream symbolStream)
--------------------------------------------------
Класс: Mono.Cecil.Cil.SymbolProvider
Наследуется от: object
Поля:
  string symbol_kind
  ISymbolReaderProvider reader_provider
  ISymbolWriterProvider writer_provider
Свойства:
Методы:
  AssemblyName GetPlatformSymbolAssemblyName()
  Type GetPlatformType(string fullname)
  ISymbolReaderProvider GetPlatformReaderProvider()
  string GetProviderTypeName(string name)
  ISymbolWriterProvider GetPlatformWriterProvider()
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolWriter
Поля:
Свойства:
Методы:
  bool GetDebugHeader(ImageDebugDirectory& directory, Byte[]& header)
  void Write(MethodBody body)
  void Write(MethodSymbols symbols)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolWriterProvider
Поля:
Свойства:
Методы:
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, string fileName)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, Stream symbolStream)
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableDefinition
Наследуется от: VariableReference
Поля:
Свойства:
  bool IsPinned
Методы:
  bool get_IsPinned()
  void .ctor(TypeReference variableType)
  void .ctor(string name, TypeReference variableType)
  VariableDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableReference
Наследуется от: object
Поля:
  string name
  int index
  TypeReference variable_type
Свойства:
  string Name
  TypeReference VariableType
  int Index
Методы:
  string get_Name()
  void set_Name(string value)
  TypeReference get_VariableType()
  void set_VariableType(TypeReference value)
  int get_Index()
  void .ctor(TypeReference variable_type)
  void .ctor(string name, TypeReference variable_type)
  VariableDefinition Resolve()
  string ToString()
--------------------------------------------------
Класс: <ebf16fee-b68b-425d-bf00-99f3c15c7db1><PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=1790 11EFE417082EF85B0D9D6E3099593B910C1A506F
  long 504BD08902B7EE1EA70852EE7B30B06CD4130E90
  __StaticArrayInitTypeSize=128 F11665C8721466F78A96C106B08F17FC29A12F6C
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Rocks.MethodDefinitionRocks
Наследуется от: object
Поля:
Свойства:
Методы:
  MethodDefinition GetBaseMethod(MethodDefinition self)
  MethodDefinition GetOriginalBaseMethod(MethodDefinition self)
  TypeDefinition ResolveBaseType(TypeDefinition type)
  MethodDefinition GetMatchingMethod(TypeDefinition type, MethodDefinition method)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.SecurityDeclarationRocks
Наследуется от: object
Поля:
Свойства:
Методы:
  PermissionSet ToPermissionSet(SecurityDeclaration self)
  bool TryProcessPermissionSetAttribute(SecurityDeclaration declaration, PermissionSet& set)
  PermissionSet CreatePermissionSet(SecurityDeclaration declaration)
  IPermission CreatePermission(SecurityDeclaration declaration, SecurityAttribute attribute)
  void CompleteSecurityAttribute(SecurityAttribute security_attribute, SecurityAttribute attribute)
  void CompleteSecurityAttributeFields(SecurityAttribute security_attribute, SecurityAttribute attribute)
  void CompleteSecurityAttributeProperties(SecurityAttribute security_attribute, SecurityAttribute attribute)
  SecurityAttribute CreateSecurityAttribute(Type attribute_type, SecurityDeclaration declaration)
  SecurityDeclaration ToSecurityDeclaration(PermissionSet self, SecurityAction action, ModuleDefinition module)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.MethodBodyRocks
Наследуется от: object
Поля:
Свойства:
Методы:
  void SimplifyMacros(MethodBody self)
  void ExpandMacro(Instruction instruction, OpCode opcode, object operand)
  void MakeMacro(Instruction instruction, OpCode opcode)
  void OptimizeMacros(MethodBody self)
  void OptimizeBranches(MethodBody body)
  bool OptimizeBranch(Instruction instruction)
  void ComputeOffsets(MethodBody body)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.IILVisitor
Поля:
Свойства:
Методы:
  void OnInlineNone(OpCode opcode)
  void OnInlineSByte(OpCode opcode, sbyte value)
  void OnInlineByte(OpCode opcode, byte value)
  void OnInlineInt32(OpCode opcode, int value)
  void OnInlineInt64(OpCode opcode, long value)
  void OnInlineSingle(OpCode opcode, float value)
  void OnInlineDouble(OpCode opcode, double value)
  void OnInlineString(OpCode opcode, string value)
  void OnInlineBranch(OpCode opcode, int offset)
  void OnInlineSwitch(OpCode opcode, Int32[] offsets)
  void OnInlineVariable(OpCode opcode, VariableDefinition variable)
  void OnInlineArgument(OpCode opcode, ParameterDefinition parameter)
  void OnInlineSignature(OpCode opcode, CallSite callSite)
  void OnInlineType(OpCode opcode, TypeReference type)
  void OnInlineField(OpCode opcode, FieldReference field)
  void OnInlineMethod(OpCode opcode, MethodReference method)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.ILParser
Наследуется от: object
Поля:
Свойства:
Методы:
  void Parse(MethodDefinition method, IILVisitor visitor)
  ParseContext CreateContext(MethodDefinition method, IILVisitor visitor)
  void ParseFatMethod(ParseContext context)
  void ParseCode(int code_size, ParseContext context)
  VariableDefinition GetVariable(ParseContext context, int index)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.TypeReferenceRocks
Наследуется от: object
Поля:
Свойства:
Методы:
  ArrayType MakeArrayType(TypeReference self)
  ArrayType MakeArrayType(TypeReference self, int rank)
  PointerType MakePointerType(TypeReference self)
  ByReferenceType MakeByReferenceType(TypeReference self)
  OptionalModifierType MakeOptionalModifierType(TypeReference self, TypeReference modifierType)
  RequiredModifierType MakeRequiredModifierType(TypeReference self, TypeReference modifierType)
  GenericInstanceType MakeGenericInstanceType(TypeReference self, TypeReference[] arguments)
  PinnedType MakePinnedType(TypeReference self)
  SentinelType MakeSentinelType(TypeReference self)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.Functional
Наследуется от: object
Поля:
Свойства:
Методы:
  Func`2<A, R> Y(Func`2<Func`2<A, R>, Func`2<A, R>> f)
  IEnumerable`1<TSource> Prepend(IEnumerable`1<TSource> source, TSource element)
  IEnumerable`1<TSource> PrependIterator(IEnumerable`1<TSource> source, TSource element)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.ModuleDefinitionRocks
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerable`1<TypeDefinition> GetAllTypes(ModuleDefinition self)
--------------------------------------------------
Класс: Mono.Cecil.Rocks.TypeDefinitionRocks
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerable`1<MethodDefinition> GetConstructors(TypeDefinition self)
  MethodDefinition GetStaticConstructor(TypeDefinition self)
  IEnumerable`1<MethodDefinition> GetMethods(TypeDefinition self)
  TypeReference GetEnumUnderlyingType(TypeDefinition self)
--------------------------------------------------
Класс: WebSocketSharp.Ext
Наследуется от: object
Поля:
  Byte[] _last
  int _retry
  string _tspecials
Свойства:
Методы:
  Byte[] compress(Byte[] data)
  MemoryStream compress(Stream stream)
  Byte[] compressToArray(Stream stream)
  Byte[] decompress(Byte[] data)
  MemoryStream decompress(Stream stream)
  Byte[] decompressToArray(Stream stream)
  void times(ulong n, Action action)
  Byte[] Append(ushort code, string reason)
  string CheckIfAvailable(ServerState state, bool ready, bool start, bool shutting)
  string CheckIfAvailable(WebSocketState state, bool connecting, bool open, bool closing, bool closed)
  string CheckIfValidProtocols(String[] protocols)
  string CheckIfValidServicePath(string path)
  string CheckIfValidSessionID(string id)
  string CheckIfValidWaitTime(TimeSpan time)
  bool CheckWaitTime(TimeSpan time, String& message)
  void Close(HttpListenerResponse response, HttpStatusCode code)
  void CloseWithAuthChallenge(HttpListenerResponse response, string challenge)
  Byte[] Compress(Byte[] data, CompressionMethod method)
  Stream Compress(Stream stream, CompressionMethod method)
  Byte[] CompressToArray(Stream stream, CompressionMethod method)
  bool Contains(IEnumerable`1<T> source, Func`2<T, bool> condition)
  bool ContainsTwice(String[] values)
  T[] Copy(T[] source, long length)
  void CopyTo(Stream source, Stream destination, int bufferLength)
  void CopyToAsync(Stream source, Stream destination, int bufferLength, Action completed, Action`1<Exception> error)
  Byte[] Decompress(Byte[] data, CompressionMethod method)
  Stream Decompress(Stream stream, CompressionMethod method)
  Byte[] DecompressToArray(Stream stream, CompressionMethod method)
  bool EqualsWith(int value, char c, Action`1<int> action)
  string GetAbsolutePath(Uri uri)
  string GetMessage(CloseStatusCode code)
  string GetName(string nameAndValue, char separator)
  string GetValue(string nameAndValue, char separator)
  string GetValue(string nameAndValue, char separator, bool unquote)
  TcpListenerWebSocketContext GetWebSocketContext(TcpClient tcpClient, string protocol, bool secure, ServerSslConfiguration sslConfig, Logger logger)
  Byte[] InternalToByteArray(ushort value, ByteOrder order)
  Byte[] InternalToByteArray(ulong value, ByteOrder order)
  bool IsCompressionExtension(string value, CompressionMethod method)
  bool IsControl(byte opcode)
  bool IsControl(Opcode opcode)
  bool IsData(byte opcode)
  bool IsData(Opcode opcode)
  bool IsPortNumber(int value)
  bool IsReserved(ushort code)
  bool IsReserved(CloseStatusCode code)
  bool IsSupported(byte opcode)
  bool IsText(string value)
  bool IsToken(string value)
  string Quote(string value)
  Byte[] ReadBytes(Stream stream, int length)
  Byte[] ReadBytes(Stream stream, long length, int bufferLength)
  void ReadBytesAsync(Stream stream, int length, Action`1<Byte[]> completed, Action`1<Exception> error)
  void ReadBytesAsync(Stream stream, long length, int bufferLength, Action`1<Byte[]> completed, Action`1<Exception> error)
  string RemovePrefix(string value, String[] prefixes)
  T[] Reverse(T[] array)
  IEnumerable`1<string> SplitHeaderValue(string value, Char[] separators)
  Byte[] ToByteArray(Stream stream)
  CompressionMethod ToCompressionMethod(string value)
  string ToExtensionString(CompressionMethod method, String[] parameters)
  IPAddress ToIPAddress(string hostnameOrAddress)
  List`1<TSource> ToList(IEnumerable`1<TSource> source)
  ushort ToUInt16(Byte[] source, ByteOrder sourceOrder)
  ulong ToUInt64(Byte[] source, ByteOrder sourceOrder)
  string TrimEndSlash(string value)
  bool TryCreateWebSocketUri(string uriString, Uri& result, String& message)
  string Unquote(string value)
  string UTF8Decode(Byte[] bytes)
  Byte[] UTF8Encode(string s)
  void WriteBytes(Stream stream, Byte[] bytes, int bufferLength)
  void WriteBytesAsync(Stream stream, Byte[] bytes, int bufferLength, Action completed, Action`1<Exception> error)
  bool Contains(string value, Char[] chars)
  bool Contains(NameValueCollection collection, string name)
  bool Contains(NameValueCollection collection, string name, string value)
  void Emit(EventHandler eventHandler, object sender, EventArgs e)
  void Emit(EventHandler`1<TEventArgs> eventHandler, object sender, TEventArgs e)
  CookieCollection GetCookies(NameValueCollection headers, bool response)
  string GetDescription(HttpStatusCode code)
  string GetStatusDescription(int code)
  bool IsCloseStatusCode(ushort value)
  bool IsEnclosedIn(string value, char c)
  bool IsHostOrder(ByteOrder order)
  bool IsLocal(IPAddress address)
  bool IsNullOrEmpty(string value)
  bool IsPredefinedScheme(string value)
  bool IsUpgradeTo(HttpListenerRequest request, string protocol)
  bool MaybeUri(string value)
  T[] SubArray(T[] array, int startIndex, int length)
  T[] SubArray(T[] array, long startIndex, long length)
  void Times(int n, Action action)
  void Times(long n, Action action)
  void Times(UInt32 n, Action action)
  void Times(ulong n, Action action)
  void Times(int n, Action`1<int> action)
  void Times(long n, Action`1<long> action)
  void Times(UInt32 n, Action`1<UInt32> action)
  void Times(ulong n, Action`1<ulong> action)
  T To(Byte[] source, ByteOrder sourceOrder)
  Byte[] ToByteArray(T value, ByteOrder order)
  Byte[] ToHostOrder(Byte[] source, ByteOrder sourceOrder)
  string ToString(T[] array, string separator)
  Uri ToUri(string uriString)
  string UrlDecode(string value)
  string UrlEncode(string value)
  void WriteContent(HttpListenerResponse response, Byte[] content)
  void .cctor()
--------------------------------------------------
Класс: WebSocketSharp.MessageEventArgs
Наследуется от: EventArgs
Поля:
  string _data
  bool _dataSet
  Opcode _opcode
  Byte[] _rawData
Свойства:
  Opcode Opcode
  string Data
  bool IsBinary
  bool IsPing
  bool IsText
  bool IsClose
  Byte[] RawData
Методы:
  void .ctor(WebSocketFrame frame)
  void .ctor(Opcode opcode, Byte[] rawData)
  Opcode get_Opcode()
  string get_Data()
  bool get_IsBinary()
  bool get_IsPing()
  bool get_IsText()
  bool get_IsClose()
  Byte[] get_RawData()
--------------------------------------------------
Класс: WebSocketSharp.CloseEventArgs
Наследуется от: EventArgs
Поля:
  bool _clean
  PayloadData _payloadData
Свойства:
  PayloadData PayloadData
  ushort Code
  string Reason
  bool WasClean
Методы:
  void .ctor()
  void .ctor(ushort code)
  void .ctor(CloseStatusCode code)
  void .ctor(PayloadData payloadData)
  void .ctor(ushort code, string reason)
  void .ctor(CloseStatusCode code, string reason)
  PayloadData get_PayloadData()
  ushort get_Code()
  string get_Reason()
  bool get_WasClean()
  void set_WasClean(bool value)
--------------------------------------------------
Класс: WebSocketSharp.ByteOrder
Наследуется от: Enum
Поля:
  int value__
  ByteOrder Little
  ByteOrder Big
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.ErrorEventArgs
Наследуется от: EventArgs
Поля:
  Exception _exception
  string _message
Свойства:
  Exception Exception
  string Message
Методы:
  void .ctor(string message)
  void .ctor(string message, Exception exception)
  Exception get_Exception()
  string get_Message()
--------------------------------------------------
Класс: WebSocketSharp.WebSocket
Наследуется от: object
Поля:
  AuthenticationChallenge _authChallenge
  string _base64Key
  bool _client
  Action _closeContext
  CompressionMethod _compression
  WebSocketContext _context
  CookieCollection _cookies
  NetworkCredential _credentials
  bool _emitOnPing
  bool _enableRedirection
  AutoResetEvent _exitReceiving
  string _extensions
  bool _extensionsRequested
  object _forMessageEventQueue
  object _forSend
  object _forState
  MemoryStream _fragmentsBuffer
  bool _fragmentsCompressed
  Opcode _fragmentsOpcode
  string _guid
  Func`2<WebSocketContext, string> _handshakeRequestChecker
  bool _ignoreExtensions
  bool _inContinuation
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _inMessage
  Logger modreq(System.Runtime.CompilerServices.IsVolatile) _logger
  Action`1<MessageEventArgs> _message
  Queue`1<MessageEventArgs> _messageEventQueue
  UInt32 _nonceCount
  string _origin
  bool _preAuth
  string _protocol
  String[] _protocols
  bool _protocolsRequested
  NetworkCredential _proxyCredentials
  Uri _proxyUri
  WebSocketState modreq(System.Runtime.CompilerServices.IsVolatile) _readyState
  AutoResetEvent _receivePong
  bool _secure
  ClientSslConfiguration _sslConfig
  Stream _stream
  TcpClient _tcpClient
  Uri _uri
  string _version
  TimeSpan _waitTime
  Byte[] EmptyBytes
  int FragmentLength
  RandomNumberGenerator RandomNumber
  EventHandler`1<CloseEventArgs> OnClose
  EventHandler`1<ErrorEventArgs> OnError
  EventHandler`1<MessageEventArgs> OnMessage
  EventHandler OnOpen
Свойства:
  CookieCollection CookieCollection
  Func`2<WebSocketContext, string> CustomHandshakeRequestChecker
  bool HasMessage
  bool IgnoreExtensions
  bool IsConnected
  CompressionMethod Compression
  IEnumerable`1<Cookie> Cookies
  NetworkCredential Credentials
  bool EmitOnPing
  bool EnableRedirection
  string Extensions
  bool IsAlive
  bool IsSecure
  Logger Log
  string Origin
  string Protocol
  WebSocketState ReadyState
  ClientSslConfiguration SslConfiguration
  Uri Url
  TimeSpan WaitTime
Методы:
  void .cctor()
  void .ctor(HttpListenerWebSocketContext context, string protocol)
  void .ctor(TcpListenerWebSocketContext context, string protocol)
  void .ctor(string url, String[] protocols)
  CookieCollection get_CookieCollection()
  Func`2<WebSocketContext, string> get_CustomHandshakeRequestChecker()
  void set_CustomHandshakeRequestChecker(Func`2<WebSocketContext, string> value)
  bool get_HasMessage()
  bool get_IgnoreExtensions()
  void set_IgnoreExtensions(bool value)
  bool get_IsConnected()
  CompressionMethod get_Compression()
  void set_Compression(CompressionMethod value)
  IEnumerable`1<Cookie> get_Cookies()
  NetworkCredential get_Credentials()
  bool get_EmitOnPing()
  void set_EmitOnPing(bool value)
  bool get_EnableRedirection()
  void set_EnableRedirection(bool value)
  string get_Extensions()
  bool get_IsAlive()
  bool get_IsSecure()
  Logger get_Log()
  void set_Log(Logger value)
  string get_Origin()
  void set_Origin(string value)
  string get_Protocol()
  void set_Protocol(string value)
  WebSocketState get_ReadyState()
  ClientSslConfiguration get_SslConfiguration()
  void set_SslConfiguration(ClientSslConfiguration value)
  Uri get_Url()
  TimeSpan get_WaitTime()
  void set_WaitTime(TimeSpan value)
  void add_OnClose(EventHandler`1<CloseEventArgs> value)
  void remove_OnClose(EventHandler`1<CloseEventArgs> value)
  void add_OnError(EventHandler`1<ErrorEventArgs> value)
  void remove_OnError(EventHandler`1<ErrorEventArgs> value)
  void add_OnMessage(EventHandler`1<MessageEventArgs> value)
  void remove_OnMessage(EventHandler`1<MessageEventArgs> value)
  void add_OnOpen(EventHandler value)
  void remove_OnOpen(EventHandler value)
  bool accept()
  bool acceptHandshake()
  bool checkHandshakeRequest(WebSocketContext context, String& message)
  bool checkHandshakeResponse(HttpResponse response, String& message)
  bool checkIfAvailable(bool connecting, bool open, bool closing, bool closed, String& message)
  bool checkIfAvailable(bool client, bool server, bool connecting, bool open, bool closing, bool closed, String& message)
  bool checkParametersForSetCredentials(string username, string password, String& message)
  bool checkParametersForSetProxy(string url, string username, string password, String& message)
  bool checkReceivedFrame(WebSocketFrame frame, String& message)
  void close(ushort code, string reason)
  void close(CloseEventArgs e, bool send, bool receive, bool received)
  void closeAsync(ushort code, string reason)
  void closeAsync(CloseEventArgs e, bool send, bool receive, bool received)
  bool closeHandshake(Byte[] frameAsBytes, bool receive, bool received)
  bool connect()
  string createExtensions()
  HttpResponse createHandshakeFailureResponse(HttpStatusCode code)
  HttpRequest createHandshakeRequest()
  HttpResponse createHandshakeResponse()
  bool customCheckHandshakeRequest(WebSocketContext context, String& message)
  MessageEventArgs dequeueFromMessageEventQueue()
  bool doHandshake()
  void enqueueToMessageEventQueue(MessageEventArgs e)
  void error(string message, Exception exception)
  void fatal(string message, Exception exception)
  void fatal(string message, CloseStatusCode code)
  void init()
  void message()
  void messagec(MessageEventArgs e)
  void messages(MessageEventArgs e)
  void open()
  bool processCloseFrame(WebSocketFrame frame)
  void processCookies(CookieCollection cookies)
  bool processDataFrame(WebSocketFrame frame)
  bool processFragmentFrame(WebSocketFrame frame)
  bool processPingFrame(WebSocketFrame frame)
  bool processPongFrame(WebSocketFrame frame)
  bool processReceivedFrame(WebSocketFrame frame)
  void processSecWebSocketExtensionsClientHeader(string value)
  void processSecWebSocketExtensionsServerHeader(string value)
  void processSecWebSocketProtocolHeader(IEnumerable`1<string> values)
  bool processUnsupportedFrame(WebSocketFrame frame)
  void releaseClientResources()
  void releaseCommonResources()
  void releaseResources()
  void releaseServerResources()
  bool send(Byte[] frameAsBytes)
  bool send(Opcode opcode, Stream stream)
  bool send(Opcode opcode, Stream stream, bool compressed)
  bool send(Fin fin, Opcode opcode, Byte[] data, bool compressed)
  void sendAsync(Opcode opcode, Stream stream, Action`1<bool> completed)
  bool sendBytes(Byte[] bytes)
  HttpResponse sendHandshakeRequest()
  HttpResponse sendHttpRequest(HttpRequest request, int millisecondsTimeout)
  bool sendHttpResponse(HttpResponse response)
  void sendProxyConnectRequest()
  void setClientStream()
  void startReceiving()
  bool validateSecWebSocketAcceptHeader(string value)
  bool validateSecWebSocketExtensionsClientHeader(string value)
  bool validateSecWebSocketExtensionsServerHeader(string value)
  bool validateSecWebSocketKeyHeader(string value)
  bool validateSecWebSocketProtocolClientHeader(string value)
  bool validateSecWebSocketProtocolServerHeader(string value)
  bool validateSecWebSocketVersionClientHeader(string value)
  bool validateSecWebSocketVersionServerHeader(string value)
  bool CheckParametersForClose(ushort code, string reason, bool client, String& message)
  bool CheckParametersForClose(CloseStatusCode code, string reason, bool client, String& message)
  string CheckPingParameter(string message, Byte[]& bytes)
  string CheckSendParameter(Byte[] data)
  string CheckSendParameter(FileInfo file)
  string CheckSendParameter(string data)
  string CheckSendParameters(Stream stream, int length)
  void Close(HttpResponse response)
  void Close(HttpStatusCode code)
  void Close(CloseEventArgs e, Byte[] frameAsBytes, bool receive)
  string CreateBase64Key()
  string CreateResponseKey(string base64Key)
  void InternalAccept()
  bool Ping(Byte[] frameAsBytes, TimeSpan timeout)
  void Send(Opcode opcode, Byte[] data, Dictionary`2<CompressionMethod, Byte[]> cache)
  void Send(Opcode opcode, Stream stream, Dictionary`2<CompressionMethod, Stream> cache)
  void Accept()
  void AcceptAsync()
  void Close()
  void Close(ushort code)
  void Close(CloseStatusCode code)
  void Close(ushort code, string reason)
  void Close(CloseStatusCode code, string reason)
  void CloseAsync()
  void CloseAsync(ushort code)
  void CloseAsync(CloseStatusCode code)
  void CloseAsync(ushort code, string reason)
  void CloseAsync(CloseStatusCode code, string reason)
  void Connect()
  void ConnectAsync()
  bool Ping()
  bool Ping(string message)
  void Send(Byte[] data)
  void Send(FileInfo file)
  void Send(string data)
  void SendAsync(Byte[] data, Action`1<bool> completed)
  void SendAsync(FileInfo file, Action`1<bool> completed)
  void SendAsync(string data, Action`1<bool> completed)
  void SendAsync(Stream stream, int length, Action`1<bool> completed)
  void SetCookie(Cookie cookie)
  void SetCredentials(string username, string password, bool preAuth)
  void SetProxy(string url, string username, string password)
  void System.IDisposable.Dispose()
  void <open>b__143_0(IAsyncResult ar)
  bool <processSecWebSocketProtocolHeader>b__153_0(string p)
  void <startReceiving>b__170_2(Exception ex)
  void <SendAsync>b__217_1(Exception ex)
--------------------------------------------------
Класс: WebSocketSharp.CloseStatusCode
Наследуется от: Enum
Поля:
  ushort value__
  CloseStatusCode Normal
  CloseStatusCode Away
  CloseStatusCode ProtocolError
  CloseStatusCode UnsupportedData
  CloseStatusCode Undefined
  CloseStatusCode NoStatus
  CloseStatusCode Abnormal
  CloseStatusCode InvalidData
  CloseStatusCode PolicyViolation
  CloseStatusCode TooBig
  CloseStatusCode MandatoryExtension
  CloseStatusCode ServerError
  CloseStatusCode TlsHandshakeFailure
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Fin
Наследуется от: Enum
Поля:
  byte value__
  Fin More
  Fin Final
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Mask
Наследуется от: Enum
Поля:
  byte value__
  Mask Off
  Mask On
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Opcode
Наследуется от: Enum
Поля:
  byte value__
  Opcode Cont
  Opcode Text
  Opcode Binary
  Opcode Close
  Opcode Ping
  Opcode Pong
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.PayloadData
Наследуется от: object
Поля:
  ushort _code
  bool _codeSet
  Byte[] _data
  long _extDataLength
  long _length
  string _reason
  bool _reasonSet
  PayloadData Empty
  ulong MaxLength
Свойства:
  ushort Code
  long ExtensionDataLength
  bool HasReservedCode
  string Reason
  Byte[] ApplicationData
  Byte[] ExtensionData
  ulong Length
Методы:
  void .cctor()
  void .ctor()
  void .ctor(Byte[] data)
  void .ctor(Byte[] data, long length)
  void .ctor(ushort code, string reason)
  ushort get_Code()
  long get_ExtensionDataLength()
  void set_ExtensionDataLength(long value)
  bool get_HasReservedCode()
  string get_Reason()
  Byte[] get_ApplicationData()
  Byte[] get_ExtensionData()
  ulong get_Length()
  void Mask(Byte[] key)
  IEnumerator`1<byte> GetEnumerator()
  Byte[] ToArray()
  string ToString()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: WebSocketSharp.Rsv
Наследуется от: Enum
Поля:
  byte value__
  Rsv Off
  Rsv On
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.CompressionMethod
Наследуется от: Enum
Поля:
  byte value__
  CompressionMethod None
  CompressionMethod Deflate
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.WebSocketException
Наследуется от: Exception
Поля:
  CloseStatusCode _code
Свойства:
  CloseStatusCode Code
Методы:
  void .ctor()
  void .ctor(Exception innerException)
  void .ctor(string message)
  void .ctor(CloseStatusCode code)
  void .ctor(string message, Exception innerException)
  void .ctor(CloseStatusCode code, Exception innerException)
  void .ctor(CloseStatusCode code, string message)
  void .ctor(CloseStatusCode code, string message, Exception innerException)
  CloseStatusCode get_Code()
--------------------------------------------------
Класс: WebSocketSharp.LogData
Наследуется от: object
Поля:
  StackFrame _caller
  DateTime _date
  LogLevel _level
  string _message
Свойства:
  StackFrame Caller
  DateTime Date
  LogLevel Level
  string Message
Методы:
  void .ctor(LogLevel level, StackFrame caller, string message)
  StackFrame get_Caller()
  DateTime get_Date()
  LogLevel get_Level()
  string get_Message()
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.LogLevel
Наследуется от: Enum
Поля:
  int value__
  LogLevel Trace
  LogLevel Debug
  LogLevel Info
  LogLevel Warn
  LogLevel Error
  LogLevel Fatal
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Logger
Наследуется от: object
Поля:
  String modreq(System.Runtime.CompilerServices.IsVolatile) _file
  LogLevel modreq(System.Runtime.CompilerServices.IsVolatile) _level
  Action`2<LogData, string> _output
  object _sync
Свойства:
  string File
  LogLevel Level
  Action`2<LogData, string> Output
Методы:
  void .ctor()
  void .ctor(LogLevel level)
  void .ctor(LogLevel level, string file, Action`2<LogData, string> output)
  string get_File()
  void set_File(string value)
  LogLevel get_Level()
  void set_Level(LogLevel value)
  Action`2<LogData, string> get_Output()
  void set_Output(Action`2<LogData, string> value)
  void defaultOutput(LogData data, string path)
  void output(string message, LogLevel level)
  void writeToFile(string value, string path)
  void Debug(string message)
  void Error(string message)
  void Fatal(string message)
  void Info(string message)
  void Trace(string message)
  void Warn(string message)
--------------------------------------------------
Класс: WebSocketSharp.WebSocketState
Наследуется от: Enum
Поля:
  ushort value__
  WebSocketState Connecting
  WebSocketState Open
  WebSocketState Closing
  WebSocketState Closed
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.WebSocketFrame
Наследуется от: object
Поля:
  Byte[] _extPayloadLength
  Fin _fin
  Mask _mask
  Byte[] _maskingKey
  Opcode _opcode
  PayloadData _payloadData
  byte _payloadLength
  Rsv _rsv1
  Rsv _rsv2
  Rsv _rsv3
  Byte[] EmptyPingBytes
Свойства:
  int ExtendedPayloadLengthCount
  ulong FullPayloadLength
  Byte[] ExtendedPayloadLength
  Fin Fin
  bool IsBinary
  bool IsClose
  bool IsCompressed
  bool IsContinuation
  bool IsControl
  bool IsData
  bool IsFinal
  bool IsFragment
  bool IsMasked
  bool IsPing
  bool IsPong
  bool IsText
  ulong Length
  Mask Mask
  Byte[] MaskingKey
  Opcode Opcode
  PayloadData PayloadData
  byte PayloadLength
  Rsv Rsv1
  Rsv Rsv2
  Rsv Rsv3
Методы:
  void .cctor()
  void .ctor()
  void .ctor(Opcode opcode, PayloadData payloadData, bool mask)
  void .ctor(Fin fin, Opcode opcode, Byte[] data, bool compressed, bool mask)
  void .ctor(Fin fin, Opcode opcode, PayloadData payloadData, bool compressed, bool mask)
  int get_ExtendedPayloadLengthCount()
  ulong get_FullPayloadLength()
  Byte[] get_ExtendedPayloadLength()
  Fin get_Fin()
  bool get_IsBinary()
  bool get_IsClose()
  bool get_IsCompressed()
  bool get_IsContinuation()
  bool get_IsControl()
  bool get_IsData()
  bool get_IsFinal()
  bool get_IsFragment()
  bool get_IsMasked()
  bool get_IsPing()
  bool get_IsPong()
  bool get_IsText()
  ulong get_Length()
  Mask get_Mask()
  Byte[] get_MaskingKey()
  Opcode get_Opcode()
  PayloadData get_PayloadData()
  byte get_PayloadLength()
  Rsv get_Rsv1()
  Rsv get_Rsv2()
  Rsv get_Rsv3()
  Byte[] createMaskingKey()
  string dump(WebSocketFrame frame)
  string print(WebSocketFrame frame)
  WebSocketFrame processHeader(Byte[] header)
  WebSocketFrame readExtendedPayloadLength(Stream stream, WebSocketFrame frame)
  void readExtendedPayloadLengthAsync(Stream stream, WebSocketFrame frame, Action`1<WebSocketFrame> completed, Action`1<Exception> error)
  WebSocketFrame readHeader(Stream stream)
  void readHeaderAsync(Stream stream, Action`1<WebSocketFrame> completed, Action`1<Exception> error)
  WebSocketFrame readMaskingKey(Stream stream, WebSocketFrame frame)
  void readMaskingKeyAsync(Stream stream, WebSocketFrame frame, Action`1<WebSocketFrame> completed, Action`1<Exception> error)
  WebSocketFrame readPayloadData(Stream stream, WebSocketFrame frame)
  void readPayloadDataAsync(Stream stream, WebSocketFrame frame, Action`1<WebSocketFrame> completed, Action`1<Exception> error)
  WebSocketFrame CreateCloseFrame(PayloadData payloadData, bool mask)
  WebSocketFrame CreatePingFrame(bool mask)
  WebSocketFrame CreatePingFrame(Byte[] data, bool mask)
  WebSocketFrame ReadFrame(Stream stream, bool unmask)
  void ReadFrameAsync(Stream stream, bool unmask, Action`1<WebSocketFrame> completed, Action`1<Exception> error)
  void Unmask()
  IEnumerator`1<byte> GetEnumerator()
  void Print(bool dumped)
  string PrintToString(bool dumped)
  Byte[] ToArray()
  string ToString()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: WebSocketSharp.HttpBase
Наследуется от: object
Поля:
  NameValueCollection _headers
  int _headersMaxLength
  Version _version
  Byte[] EntityBodyData
  string CrLf
Свойства:
  string EntityBody
  NameValueCollection Headers
  Version ProtocolVersion
Методы:
  void .ctor(Version version, NameValueCollection headers)
  string get_EntityBody()
  NameValueCollection get_Headers()
  Version get_ProtocolVersion()
  Byte[] readEntityBody(Stream stream, string length)
  String[] readHeaders(Stream stream, int maxLength)
  T Read(Stream stream, Func`2<String[], T> parser, int millisecondsTimeout)
  Byte[] ToByteArray()
--------------------------------------------------
Класс: WebSocketSharp.HttpRequest
Наследуется от: HttpBase
Поля:
  string _method
  string _uri
  bool _websocketRequest
  bool _websocketRequestSet
Свойства:
  AuthenticationResponse AuthenticationResponse
  CookieCollection Cookies
  string HttpMethod
  bool IsWebSocketRequest
  string RequestUri
Методы:
  void .ctor(string method, string uri, Version version, NameValueCollection headers)
  void .ctor(string method, string uri)
  AuthenticationResponse get_AuthenticationResponse()
  CookieCollection get_Cookies()
  string get_HttpMethod()
  bool get_IsWebSocketRequest()
  string get_RequestUri()
  HttpRequest CreateConnectRequest(Uri uri)
  HttpRequest CreateWebSocketRequest(Uri uri)
  HttpResponse GetResponse(Stream stream, int millisecondsTimeout)
  HttpRequest Parse(String[] headerParts)
  HttpRequest Read(Stream stream, int millisecondsTimeout)
  void SetCookies(CookieCollection cookies)
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.HttpResponse
Наследуется от: HttpBase
Поля:
  string _code
  string _reason
Свойства:
  CookieCollection Cookies
  bool HasConnectionClose
  bool IsProxyAuthenticationRequired
  bool IsRedirect
  bool IsUnauthorized
  bool IsWebSocketResponse
  string Reason
  string StatusCode
Методы:
  void .ctor(string code, string reason, Version version, NameValueCollection headers)
  void .ctor(HttpStatusCode code)
  void .ctor(HttpStatusCode code, string reason)
  CookieCollection get_Cookies()
  bool get_HasConnectionClose()
  bool get_IsProxyAuthenticationRequired()
  bool get_IsRedirect()
  bool get_IsUnauthorized()
  bool get_IsWebSocketResponse()
  string get_Reason()
  string get_StatusCode()
  HttpResponse CreateCloseResponse(HttpStatusCode code)
  HttpResponse CreateUnauthorizedResponse(string challenge)
  HttpResponse CreateWebSocketResponse()
  HttpResponse Parse(String[] headerParts)
  HttpResponse Read(Stream stream, int millisecondsTimeout)
  void SetCookies(CookieCollection cookies)
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.Net.AuthenticationSchemes
Наследуется от: Enum
Поля:
  int value__
  AuthenticationSchemes None
  AuthenticationSchemes Digest
  AuthenticationSchemes Basic
  AuthenticationSchemes Anonymous
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.ChunkStream
Наследуется от: object
Поля:
  int _chunkRead
  int _chunkSize
  List`1<Chunk> _chunks
  bool _gotIt
  WebHeaderCollection _headers
  StringBuilder _saved
  bool _sawCr
  InputChunkState _state
  int _trailerState
Свойства:
  WebHeaderCollection Headers
  int ChunkLeft
  bool WantMore
Методы:
  void .ctor(WebHeaderCollection headers)
  void .ctor(Byte[] buffer, int offset, int count, WebHeaderCollection headers)
  WebHeaderCollection get_Headers()
  int get_ChunkLeft()
  bool get_WantMore()
  int read(Byte[] buffer, int offset, int count)
  string removeChunkExtension(string value)
  InputChunkState seekCrLf(Byte[] buffer, Int32& offset, int length)
  InputChunkState setChunkSize(Byte[] buffer, Int32& offset, int length)
  InputChunkState setTrailer(Byte[] buffer, Int32& offset, int length)
  void throwProtocolViolation(string message)
  void write(Byte[] buffer, Int32& offset, int length)
  InputChunkState writeData(Byte[] buffer, Int32& offset, int length)
  void ResetBuffer()
  int WriteAndReadBack(Byte[] buffer, int offset, int writeCount, int readCount)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: WebSocketSharp.Net.Cookie
Наследуется от: object
Поля:
  string _comment
  Uri _commentUri
  bool _discard
  string _domain
  DateTime _expires
  bool _httpOnly
  string _name
  string _path
  string _port
  Int32[] _ports
  Char[] _reservedCharsForName
  Char[] _reservedCharsForValue
  bool _secure
  DateTime _timestamp
  string _value
  int _version
  bool <ExactDomain>k__BackingField
Свойства:
  bool ExactDomain
  int MaxAge
  Int32[] Ports
  string Comment
  Uri CommentUri
  bool Discard
  string Domain
  bool Expired
  DateTime Expires
  bool HttpOnly
  string Name
  string Path
  string Port
  bool Secure
  DateTime TimeStamp
  string Value
  int Version
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string name, string value)
  void .ctor(string name, string value, string path)
  void .ctor(string name, string value, string path, string domain)
  bool get_ExactDomain()
  void set_ExactDomain(bool value)
  int get_MaxAge()
  Int32[] get_Ports()
  string get_Comment()
  void set_Comment(string value)
  Uri get_CommentUri()
  void set_CommentUri(Uri value)
  bool get_Discard()
  void set_Discard(bool value)
  string get_Domain()
  void set_Domain(string value)
  bool get_Expired()
  void set_Expired(bool value)
  DateTime get_Expires()
  void set_Expires(DateTime value)
  bool get_HttpOnly()
  void set_HttpOnly(bool value)
  string get_Name()
  void set_Name(string value)
  string get_Path()
  void set_Path(string value)
  string get_Port()
  void set_Port(string value)
  bool get_Secure()
  void set_Secure(bool value)
  DateTime get_TimeStamp()
  string get_Value()
  void set_Value(string value)
  int get_Version()
  void set_Version(int value)
  bool canSetName(string name, String& message)
  bool canSetValue(string value, String& message)
  int hash(int i, int j, int k, int l, int m)
  string toResponseStringVersion0()
  string toResponseStringVersion1()
  bool tryCreatePorts(string value, Int32[]& result, String& parseError)
  string ToRequestString(Uri uri)
  string ToResponseString()
  bool Equals(object comparand)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.Net.CookieCollection
Наследуется от: object
Поля:
  List`1<Cookie> _list
  object _sync
Свойства:
  IList`1<Cookie> List
  IEnumerable`1<Cookie> Sorted
  int Count
  bool IsReadOnly
  bool IsSynchronized
  Cookie Item
  Cookie Item
  object SyncRoot
Методы:
  void .ctor()
  IList`1<Cookie> get_List()
  IEnumerable`1<Cookie> get_Sorted()
  int get_Count()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  Cookie get_Item(int index)
  Cookie get_Item(string name)
  object get_SyncRoot()
  int compareCookieWithinSort(Cookie x, Cookie y)
  int compareCookieWithinSorted(Cookie x, Cookie y)
  CookieCollection parseRequest(string value)
  CookieCollection parseResponse(string value)
  int searchCookie(Cookie cookie)
  String[] splitCookieHeaderValue(string value)
  CookieCollection Parse(string value, bool response)
  void SetOrRemove(Cookie cookie)
  void SetOrRemove(CookieCollection cookies)
  void Sort()
  void Add(Cookie cookie)
  void Add(CookieCollection cookies)
  void CopyTo(Array array, int index)
  void CopyTo(Cookie[] array, int index)
  IEnumerator GetEnumerator()
--------------------------------------------------
Класс: WebSocketSharp.Net.CookieException
Наследуется от: FormatException
Поля:
Свойства:
Методы:
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void .ctor()
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: WebSocketSharp.Net.EndPointListener
Наследуется от: object
Поля:
  List`1<HttpListenerPrefix> _all
  string _defaultCertFolderPath
  IPEndPoint _endpoint
  Dictionary`2<HttpListenerPrefix, HttpListener> _prefixes
  bool _secure
  Socket _socket
  ServerSslConfiguration _sslConfig
  List`1<HttpListenerPrefix> _unhandled
  Dictionary`2<HttpConnection, HttpConnection> _unregistered
  object _unregisteredSync
Свойства:
  IPAddress Address
  bool IsSecure
  int Port
  ServerSslConfiguration SslConfiguration
Методы:
  void .cctor()
  void .ctor(IPEndPoint endpoint, bool secure, string certificateFolderPath, ServerSslConfiguration sslConfig, bool reuseAddress)
  IPAddress get_Address()
  bool get_IsSecure()
  int get_Port()
  ServerSslConfiguration get_SslConfiguration()
  void addSpecial(List`1<HttpListenerPrefix> prefixes, HttpListenerPrefix prefix)
  RSACryptoServiceProvider createRSAFromFile(string filename)
  X509Certificate2 getCertificate(int port, string folderPath, X509Certificate2 defaultCertificate)
  void leaveIfNoPrefix()
  void onAccept(IAsyncResult asyncResult)
  void processAccepted(Socket socket, EndPointListener listener)
  bool removeSpecial(List`1<HttpListenerPrefix> prefixes, HttpListenerPrefix prefix)
  HttpListener searchHttpListenerFromSpecial(string path, List`1<HttpListenerPrefix> prefixes)
  bool CertificateExists(int port, string folderPath)
  void RemoveConnection(HttpConnection connection)
  bool TrySearchHttpListener(Uri uri, HttpListener& listener)
  void AddPrefix(HttpListenerPrefix prefix, HttpListener listener)
  void Close()
  void RemovePrefix(HttpListenerPrefix prefix, HttpListener listener)
--------------------------------------------------
Класс: WebSocketSharp.Net.EndPointManager
Наследуется от: object
Поля:
  Dictionary`2<IPEndPoint, EndPointListener> _endpoints
Свойства:
Методы:
  void .cctor()
  void .ctor()
  void addPrefix(string uriPrefix, HttpListener listener)
  IPAddress convertToIPAddress(string hostname)
  void removePrefix(string uriPrefix, HttpListener listener)
  bool RemoveEndPoint(IPEndPoint endpoint)
  void AddListener(HttpListener listener)
  void AddPrefix(string uriPrefix, HttpListener listener)
  void RemoveListener(HttpListener listener)
  void RemovePrefix(string uriPrefix, HttpListener listener)
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpConnection
Наследуется от: object
Поля:
  Byte[] _buffer
  int _bufferLength
  HttpListenerContext _context
  bool _contextRegistered
  StringBuilder _currentLine
  InputState _inputState
  RequestStream _inputStream
  HttpListener _lastListener
  LineState _lineState
  EndPointListener _listener
  ResponseStream _outputStream
  int _position
  MemoryStream _requestBuffer
  int _reuses
  bool _secure
  Socket _socket
  Stream _stream
  object _sync
  int _timeout
  Dictionary`2<int, bool> _timeoutCanceled
  Timer _timer
Свойства:
  bool IsClosed
  bool IsSecure
  IPEndPoint LocalEndPoint
  IPEndPoint RemoteEndPoint
  int Reuses
  Stream Stream
Методы:
  void .ctor(Socket socket, EndPointListener listener)
  bool get_IsClosed()
  bool get_IsSecure()
  IPEndPoint get_LocalEndPoint()
  IPEndPoint get_RemoteEndPoint()
  int get_Reuses()
  Stream get_Stream()
  void close()
  void closeSocket()
  void disposeRequestBuffer()
  void disposeStream()
  void disposeTimer()
  void init()
  void onRead(IAsyncResult asyncResult)
  void onTimeout(object state)
  bool processInput(Byte[] data, int length)
  string readLineFrom(Byte[] buffer, int offset, int length, Int32& read)
  void removeConnection()
  void unregisterContext()
  void Close(bool force)
  void BeginReadRequest()
  void Close()
  RequestStream GetRequestStream(long contentLength, bool chunked)
  ResponseStream GetResponseStream()
  void SendError()
  void SendError(string message, int status)
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListener
Наследуется от: object
Поля:
  AuthenticationSchemes _authSchemes
  Func`2<HttpListenerRequest, AuthenticationSchemes> _authSchemeSelector
  string _certFolderPath
  Dictionary`2<HttpConnection, HttpConnection> _connections
  object _connectionsSync
  List`1<HttpListenerContext> _ctxQueue
  object _ctxQueueSync
  Dictionary`2<HttpListenerContext, HttpListenerContext> _ctxRegistry
  object _ctxRegistrySync
  string _defaultRealm
  bool _disposed
  bool _ignoreWriteExceptions
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _listening
  Logger _logger
  HttpListenerPrefixCollection _prefixes
  string _realm
  bool _reuseAddress
  ServerSslConfiguration _sslConfig
  Func`2<IIdentity, NetworkCredential> _userCredFinder
  List`1<HttpListenerAsyncResult> _waitQueue
  object _waitQueueSync
Свойства:
  bool IsDisposed
  bool ReuseAddress
  AuthenticationSchemes AuthenticationSchemes
  Func`2<HttpListenerRequest, AuthenticationSchemes> AuthenticationSchemeSelector
  string CertificateFolderPath
  bool IgnoreWriteExceptions
  bool IsListening
  bool IsSupported
  Logger Log
  HttpListenerPrefixCollection Prefixes
  string Realm
  ServerSslConfiguration SslConfiguration
  bool UnsafeConnectionNtlmAuthentication
  Func`2<IIdentity, NetworkCredential> UserCredentialsFinder
Методы:
  void .cctor()
  void .ctor()
  bool get_IsDisposed()
  bool get_ReuseAddress()
  void set_ReuseAddress(bool value)
  AuthenticationSchemes get_AuthenticationSchemes()
  void set_AuthenticationSchemes(AuthenticationSchemes value)
  Func`2<HttpListenerRequest, AuthenticationSchemes> get_AuthenticationSchemeSelector()
  void set_AuthenticationSchemeSelector(Func`2<HttpListenerRequest, AuthenticationSchemes> value)
  string get_CertificateFolderPath()
  void set_CertificateFolderPath(string value)
  bool get_IgnoreWriteExceptions()
  void set_IgnoreWriteExceptions(bool value)
  bool get_IsListening()
  bool get_IsSupported()
  Logger get_Log()
  HttpListenerPrefixCollection get_Prefixes()
  string get_Realm()
  void set_Realm(string value)
  ServerSslConfiguration get_SslConfiguration()
  void set_SslConfiguration(ServerSslConfiguration value)
  bool get_UnsafeConnectionNtlmAuthentication()
  void set_UnsafeConnectionNtlmAuthentication(bool value)
  Func`2<IIdentity, NetworkCredential> get_UserCredentialsFinder()
  void set_UserCredentialsFinder(Func`2<IIdentity, NetworkCredential> value)
  void cleanupConnections()
  void cleanupContextQueue(bool sendServiceUnavailable)
  void cleanupContextRegistry()
  void cleanupWaitQueue(Exception exception)
  void close(bool force)
  HttpListenerAsyncResult getAsyncResultFromQueue()
  HttpListenerContext getContextFromQueue()
  bool AddConnection(HttpConnection connection)
  HttpListenerAsyncResult BeginGetContext(HttpListenerAsyncResult asyncResult)
  void CheckDisposed()
  string GetRealm()
  Func`2<IIdentity, NetworkCredential> GetUserCredentialsFinder()
  bool RegisterContext(HttpListenerContext context)
  void RemoveConnection(HttpConnection connection)
  AuthenticationSchemes SelectAuthenticationScheme(HttpListenerRequest request)
  void UnregisterContext(HttpListenerContext context)
  void Abort()
  IAsyncResult BeginGetContext(AsyncCallback callback, object state)
  void Close()
  HttpListenerContext EndGetContext(IAsyncResult asyncResult)
  HttpListenerContext GetContext()
  void Start()
  void Stop()
  void System.IDisposable.Dispose()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListenerContext
Наследуется от: object
Поля:
  HttpConnection _connection
  string _error
  int _errorStatus
  HttpListener _listener
  HttpListenerRequest _request
  HttpListenerResponse _response
  IPrincipal _user
  HttpListenerWebSocketContext _websocketContext
Свойства:
  HttpConnection Connection
  string ErrorMessage
  int ErrorStatus
  bool HasError
  HttpListener Listener
  HttpListenerRequest Request
  HttpListenerResponse Response
  IPrincipal User
Методы:
  void .ctor(HttpConnection connection)
  HttpConnection get_Connection()
  string get_ErrorMessage()
  void set_ErrorMessage(string value)
  int get_ErrorStatus()
  void set_ErrorStatus(int value)
  bool get_HasError()
  HttpListener get_Listener()
  void set_Listener(HttpListener value)
  HttpListenerRequest get_Request()
  HttpListenerResponse get_Response()
  IPrincipal get_User()
  bool Authenticate()
  bool Register()
  void Unregister()
  HttpListenerWebSocketContext AcceptWebSocket(string protocol)
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListenerException
Наследуется от: Win32Exception
Поля:
Свойства:
  int ErrorCode
Методы:
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void .ctor()
  void .ctor(int errorCode)
  void .ctor(int errorCode, string message)
  int get_ErrorCode()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListenerPrefixCollection
Наследуется от: object
Поля:
  HttpListener _listener
  List`1<string> _prefixes
Свойства:
  int Count
  bool IsReadOnly
  bool IsSynchronized
Методы:
  void .ctor(HttpListener listener)
  int get_Count()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  void Add(string uriPrefix)
  void Clear()
  bool Contains(string uriPrefix)
  void CopyTo(Array array, int offset)
  void CopyTo(String[] array, int offset)
  IEnumerator`1<string> GetEnumerator()
  bool Remove(string uriPrefix)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListenerRequest
Наследуется от: object
Поля:
  Byte[] _100continue
  String[] _acceptTypes
  bool _chunked
  Encoding _contentEncoding
  long _contentLength
  bool _contentLengthSet
  HttpListenerContext _context
  CookieCollection _cookies
  WebHeaderCollection _headers
  Guid _identifier
  Stream _inputStream
  bool _keepAlive
  bool _keepAliveSet
  string _method
  NameValueCollection _queryString
  Uri _referer
  string _uri
  Uri _url
  String[] _userLanguages
  Version _version
  bool _websocketRequest
  bool _websocketRequestSet
Свойства:
  String[] AcceptTypes
  int ClientCertificateError
  Encoding ContentEncoding
  long ContentLength64
  string ContentType
  CookieCollection Cookies
  bool HasEntityBody
  NameValueCollection Headers
  string HttpMethod
  Stream InputStream
  bool IsAuthenticated
  bool IsLocal
  bool IsSecureConnection
  bool IsWebSocketRequest
  bool KeepAlive
  IPEndPoint LocalEndPoint
  Version ProtocolVersion
  NameValueCollection QueryString
  string RawUrl
  IPEndPoint RemoteEndPoint
  Guid RequestTraceIdentifier
  Uri Url
  Uri UrlReferrer
  string UserAgent
  string UserHostAddress
  string UserHostName
  String[] UserLanguages
Методы:
  void .cctor()
  void .ctor(HttpListenerContext context)
  String[] get_AcceptTypes()
  int get_ClientCertificateError()
  Encoding get_ContentEncoding()
  long get_ContentLength64()
  string get_ContentType()
  CookieCollection get_Cookies()
  bool get_HasEntityBody()
  NameValueCollection get_Headers()
  string get_HttpMethod()
  Stream get_InputStream()
  bool get_IsAuthenticated()
  bool get_IsLocal()
  bool get_IsSecureConnection()
  bool get_IsWebSocketRequest()
  bool get_KeepAlive()
  IPEndPoint get_LocalEndPoint()
  Version get_ProtocolVersion()
  NameValueCollection get_QueryString()
  string get_RawUrl()
  IPEndPoint get_RemoteEndPoint()
  Guid get_RequestTraceIdentifier()
  Uri get_Url()
  Uri get_UrlReferrer()
  string get_UserAgent()
  string get_UserHostAddress()
  string get_UserHostName()
  String[] get_UserLanguages()
  bool tryCreateVersion(string version, Version& result)
  void AddHeader(string header)
  void FinishInitialization()
  bool FlushInput()
  void SetRequestLine(string requestLine)
  IAsyncResult BeginGetClientCertificate(AsyncCallback requestCallback, object state)
  X509Certificate2 EndGetClientCertificate(IAsyncResult asyncResult)
  X509Certificate2 GetClientCertificate()
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListenerResponse
Наследуется от: object
Поля:
  bool _closeConnection
  Encoding _contentEncoding
  long _contentLength
  string _contentType
  HttpListenerContext _context
  CookieCollection _cookies
  bool _disposed
  WebHeaderCollection _headers
  bool _headersSent
  bool _keepAlive
  string _location
  ResponseStream _outputStream
  bool _sendChunked
  int _statusCode
  string _statusDescription
  Version _version
Свойства:
  bool CloseConnection
  bool HeadersSent
  Encoding ContentEncoding
  long ContentLength64
  string ContentType
  CookieCollection Cookies
  WebHeaderCollection Headers
  bool KeepAlive
  Stream OutputStream
  Version ProtocolVersion
  string RedirectLocation
  bool SendChunked
  int StatusCode
  string StatusDescription
Методы:
  void .ctor(HttpListenerContext context)
  bool get_CloseConnection()
  void set_CloseConnection(bool value)
  bool get_HeadersSent()
  void set_HeadersSent(bool value)
  Encoding get_ContentEncoding()
  void set_ContentEncoding(Encoding value)
  long get_ContentLength64()
  void set_ContentLength64(long value)
  string get_ContentType()
  void set_ContentType(string value)
  CookieCollection get_Cookies()
  void set_Cookies(CookieCollection value)
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  bool get_KeepAlive()
  void set_KeepAlive(bool value)
  Stream get_OutputStream()
  Version get_ProtocolVersion()
  void set_ProtocolVersion(Version value)
  string get_RedirectLocation()
  void set_RedirectLocation(string value)
  bool get_SendChunked()
  void set_SendChunked(bool value)
  int get_StatusCode()
  void set_StatusCode(int value)
  string get_StatusDescription()
  void set_StatusDescription(string value)
  bool canAddOrUpdate(Cookie cookie)
  void checkDisposed()
  void checkDisposedOrHeadersSent()
  void close(bool force)
  IEnumerable`1<Cookie> findCookie(Cookie cookie)
  WebHeaderCollection WriteHeadersTo(MemoryStream destination)
  void Abort()
  void AddHeader(string name, string value)
  void AppendCookie(Cookie cookie)
  void AppendHeader(string name, string value)
  void Close()
  void Close(Byte[] responseEntity, bool willBlock)
  void CopyFrom(HttpListenerResponse templateResponse)
  void Redirect(string url)
  void SetCookie(Cookie cookie)
  void System.IDisposable.Dispose()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpStreamAsyncResult
Наследуется от: object
Поля:
  Byte[] _buffer
  AsyncCallback _callback
  bool _completed
  int _count
  Exception _exception
  int _offset
  object _state
  object _sync
  int _syncRead
  ManualResetEvent _waitHandle
Свойства:
  Byte[] Buffer
  int Count
  Exception Exception
  bool HasException
  int Offset
  int SyncRead
  object AsyncState
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool IsCompleted
Методы:
  void .ctor(AsyncCallback callback, object state)
  Byte[] get_Buffer()
  void set_Buffer(Byte[] value)
  int get_Count()
  void set_Count(int value)
  Exception get_Exception()
  bool get_HasException()
  int get_Offset()
  void set_Offset(int value)
  int get_SyncRead()
  void set_SyncRead(int value)
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  bool get_CompletedSynchronously()
  bool get_IsCompleted()
  void Complete()
  void Complete(Exception exception)
  void <Complete>b__35_0(IAsyncResult ar)
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpUtility
Наследуется от: object
Поля:
  Dictionary`2<string, char> _entities
  Char[] _hexChars
  object _sync
Свойства:
Методы:
  int getChar(Byte[] bytes, int offset, int length)
  int getChar(string s, int offset, int length)
  Char[] getChars(MemoryStream buffer, Encoding encoding)
  Dictionary`2<string, char> getEntities()
  int getInt(byte b)
  void initEntities()
  bool notEncoded(char c)
  void urlEncode(char c, Stream result, bool unicode)
  void urlPathEncode(char c, Stream result)
  void writeCharBytes(char c, IList buffer, Encoding encoding)
  Uri CreateRequestUrl(string requestUri, string host, bool websocketRequest, bool secure)
  IPrincipal CreateUser(string response, AuthenticationSchemes scheme, string realm, string method, Func`2<IIdentity, NetworkCredential> credentialsFinder)
  Encoding GetEncoding(string contentType)
  NameValueCollection InternalParseQueryString(string query, Encoding encoding)
  string InternalUrlDecode(Byte[] bytes, int offset, int count, Encoding encoding)
  Byte[] InternalUrlDecodeToBytes(Byte[] bytes, int offset, int count)
  Byte[] InternalUrlEncodeToBytes(Byte[] bytes, int offset, int count)
  Byte[] InternalUrlEncodeUnicodeToBytes(string s)
  string HtmlAttributeEncode(string s)
  void HtmlAttributeEncode(string s, TextWriter output)
  string HtmlDecode(string s)
  void HtmlDecode(string s, TextWriter output)
  string HtmlEncode(string s)
  void HtmlEncode(string s, TextWriter output)
  NameValueCollection ParseQueryString(string query)
  NameValueCollection ParseQueryString(string query, Encoding encoding)
  string UrlDecode(string s)
  string UrlDecode(string s, Encoding encoding)
  string UrlDecode(Byte[] bytes, Encoding encoding)
  string UrlDecode(Byte[] bytes, int offset, int count, Encoding encoding)
  Byte[] UrlDecodeToBytes(Byte[] bytes)
  Byte[] UrlDecodeToBytes(string s)
  Byte[] UrlDecodeToBytes(string s, Encoding encoding)
  Byte[] UrlDecodeToBytes(Byte[] bytes, int offset, int count)
  string UrlEncode(Byte[] bytes)
  string UrlEncode(string s)
  string UrlEncode(string s, Encoding encoding)
  string UrlEncode(Byte[] bytes, int offset, int count)
  Byte[] UrlEncodeToBytes(Byte[] bytes)
  Byte[] UrlEncodeToBytes(string s)
  Byte[] UrlEncodeToBytes(string s, Encoding encoding)
  Byte[] UrlEncodeToBytes(Byte[] bytes, int offset, int count)
  string UrlEncodeUnicode(string s)
  Byte[] UrlEncodeUnicodeToBytes(string s)
  string UrlPathEncode(string s)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WebSocketSharp.Net.RequestStream
Наследуется от: Stream
Поля:
  long _bodyLeft
  Byte[] _buffer
  int _count
  bool _disposed
  int _offset
  Stream _stream
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(Stream stream, Byte[] buffer, int offset, int count)
  void .ctor(Stream stream, Byte[] buffer, int offset, int count, long contentLength)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int fillFromBuffer(Byte[] buffer, int offset, int count)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void Close()
  int EndRead(IAsyncResult asyncResult)
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: WebSocketSharp.Net.ResponseStream
Наследуется от: Stream
Поля:
  MemoryStream _body
  Byte[] _crlf
  bool _disposed
  HttpListenerResponse _response
  bool _sendChunked
  Stream _stream
  Action`3<Byte[], int, int> _write
  Action`3<Byte[], int, int> _writeBody
  Action`3<Byte[], int, int> _writeChunked
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(Stream stream, HttpListenerResponse response, bool ignoreWriteExceptions)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool flush(bool closing)
  void flushBody(bool closing)
  bool flushHeaders(bool closing)
  Byte[] getChunkSizeBytes(int size, bool final)
  void writeChunked(Byte[] buffer, int offset, int count)
  void writeChunkedWithoutThrowingException(Byte[] buffer, int offset, int count)
  void writeWithoutThrowingException(Byte[] buffer, int offset, int count)
  void Close(bool force)
  void InternalWrite(Byte[] buffer, int offset, int count)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void Close()
  void Dispose(bool disposing)
  int EndRead(IAsyncResult asyncResult)
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void .cctor()
--------------------------------------------------
Класс: WebSocketSharp.Net.WebHeaderCollection
Наследуется от: NameValueCollection
Поля:
  Dictionary`2<string, HttpHeaderInfo> _headers
  bool _internallyUsed
  HttpHeaderType _state
Свойства:
  HttpHeaderType State
  String[] AllKeys
  int Count
  string Item
  string Item
  KeysCollection Keys
Методы:
  void .cctor()
  void .ctor(HttpHeaderType state, bool internallyUsed)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void .ctor()
  HttpHeaderType get_State()
  String[] get_AllKeys()
  int get_Count()
  string get_Item(HttpRequestHeader header)
  void set_Item(HttpRequestHeader header, string value)
  string get_Item(HttpResponseHeader header)
  void set_Item(HttpResponseHeader header, string value)
  KeysCollection get_Keys()
  void add(string name, string value, bool ignoreRestricted)
  void addWithoutCheckingName(string name, string value)
  void addWithoutCheckingNameAndRestricted(string name, string value)
  int checkColonSeparated(string header)
  HttpHeaderType checkHeaderType(string name)
  string checkName(string name)
  void checkRestricted(string name)
  void checkState(bool response)
  string checkValue(string value)
  string convert(string key)
  void doWithCheckingState(Action`2<string, string> action, string name, string value, bool setState)
  void doWithCheckingState(Action`2<string, string> action, string name, string value, bool response, bool setState)
  void doWithoutCheckingName(Action`2<string, string> action, string name, string value)
  HttpHeaderInfo getHeaderInfo(string name)
  bool isRestricted(string name, bool response)
  void removeWithoutCheckingName(string name, string unuse)
  void setWithoutCheckingName(string name, string value)
  string Convert(HttpRequestHeader header)
  string Convert(HttpResponseHeader header)
  void InternalRemove(string name)
  void InternalSet(string header, bool response)
  void InternalSet(string name, string value, bool response)
  bool IsHeaderName(string name)
  bool IsHeaderValue(string value)
  bool IsMultiValue(string headerName, bool response)
  string ToStringMultiValue(bool response)
  void AddWithoutValidate(string headerName, string headerValue)
  void Add(string header)
  void Add(HttpRequestHeader header, string value)
  void Add(HttpResponseHeader header, string value)
  void Add(string name, string value)
  void Clear()
  string Get(int index)
  string Get(string name)
  IEnumerator GetEnumerator()
  string GetKey(int index)
  String[] GetValues(int index)
  String[] GetValues(string header)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  bool IsRestricted(string headerName)
  bool IsRestricted(string headerName, bool response)
  void OnDeserialization(object sender)
  void Remove(HttpRequestHeader header)
  void Remove(HttpResponseHeader header)
  void Remove(string name)
  void Set(HttpRequestHeader header, string value)
  void Set(HttpResponseHeader header, string value)
  void Set(string name, string value)
  Byte[] ToByteArray()
  string ToString()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpVersion
Наследуется от: object
Поля:
  Version Version10
  Version Version11
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpStatusCode
Наследуется от: Enum
Поля:
  int value__
  HttpStatusCode Continue
  HttpStatusCode SwitchingProtocols
  HttpStatusCode OK
  HttpStatusCode Created
  HttpStatusCode Accepted
  HttpStatusCode NonAuthoritativeInformation
  HttpStatusCode NoContent
  HttpStatusCode ResetContent
  HttpStatusCode PartialContent
  HttpStatusCode MultipleChoices
  HttpStatusCode Ambiguous
  HttpStatusCode MovedPermanently
  HttpStatusCode Moved
  HttpStatusCode Found
  HttpStatusCode Redirect
  HttpStatusCode SeeOther
  HttpStatusCode RedirectMethod
  HttpStatusCode NotModified
  HttpStatusCode UseProxy
  HttpStatusCode Unused
  HttpStatusCode TemporaryRedirect
  HttpStatusCode RedirectKeepVerb
  HttpStatusCode BadRequest
  HttpStatusCode Unauthorized
  HttpStatusCode PaymentRequired
  HttpStatusCode Forbidden
  HttpStatusCode NotFound
  HttpStatusCode MethodNotAllowed
  HttpStatusCode NotAcceptable
  HttpStatusCode ProxyAuthenticationRequired
  HttpStatusCode RequestTimeout
  HttpStatusCode Conflict
  HttpStatusCode Gone
  HttpStatusCode LengthRequired
  HttpStatusCode PreconditionFailed
  HttpStatusCode RequestEntityTooLarge
  HttpStatusCode RequestUriTooLong
  HttpStatusCode UnsupportedMediaType
  HttpStatusCode RequestedRangeNotSatisfiable
  HttpStatusCode ExpectationFailed
  HttpStatusCode InternalServerError
  HttpStatusCode NotImplemented
  HttpStatusCode BadGateway
  HttpStatusCode ServiceUnavailable
  HttpStatusCode GatewayTimeout
  HttpStatusCode HttpVersionNotSupported
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpHeaderType
Наследуется от: Enum
Поля:
  int value__
  HttpHeaderType Unspecified
  HttpHeaderType Request
  HttpHeaderType Response
  HttpHeaderType Restricted
  HttpHeaderType MultiValue
  HttpHeaderType MultiValueInRequest
  HttpHeaderType MultiValueInResponse
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpHeaderInfo
Наследуется от: object
Поля:
  string _name
  HttpHeaderType _type
Свойства:
  bool IsMultiValueInRequest
  bool IsMultiValueInResponse
  bool IsRequest
  bool IsResponse
  string Name
  HttpHeaderType Type
Методы:
  void .ctor(string name, HttpHeaderType type)
  bool get_IsMultiValueInRequest()
  bool get_IsMultiValueInResponse()
  bool get_IsRequest()
  bool get_IsResponse()
  string get_Name()
  HttpHeaderType get_Type()
  bool IsMultiValue(bool response)
  bool IsRestricted(bool response)
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpBasicIdentity
Наследуется от: GenericIdentity
Поля:
  string _password
Свойства:
  string Password
Методы:
  void .ctor(string username, string password)
  string get_Password()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpDigestIdentity
Наследуется от: GenericIdentity
Поля:
  NameValueCollection _parameters
Свойства:
  string Algorithm
  string Cnonce
  string Nc
  string Nonce
  string Opaque
  string Qop
  string Realm
  string Response
  string Uri
Методы:
  void .ctor(NameValueCollection parameters)
  string get_Algorithm()
  string get_Cnonce()
  string get_Nc()
  string get_Nonce()
  string get_Opaque()
  string get_Qop()
  string get_Realm()
  string get_Response()
  string get_Uri()
  bool IsValid(string password, string realm, string method, string entity)
--------------------------------------------------
Класс: WebSocketSharp.Net.NetworkCredential
Наследуется от: object
Поля:
  string _domain
  string _password
  String[] _roles
  string _userName
Свойства:
  string Domain
  string Password
  String[] Roles
  string UserName
Методы:
  void .ctor(string userName, string password)
  void .ctor(string userName, string password, string domain, String[] roles)
  string get_Domain()
  void set_Domain(string value)
  string get_Password()
  void set_Password(string value)
  String[] get_Roles()
  void set_Roles(String[] value)
  string get_UserName()
  void set_UserName(string value)
--------------------------------------------------
Класс: WebSocketSharp.Net.InputState
Наследуется от: Enum
Поля:
  int value__
  InputState RequestLine
  InputState Headers
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.LineState
Наследуется от: Enum
Поля:
  int value__
  LineState None
  LineState Cr
  LineState Lf
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.ReadBufferState
Наследуется от: object
Поля:
  HttpStreamAsyncResult _asyncResult
  Byte[] _buffer
  int _count
  int _initialCount
  int _offset
Свойства:
  HttpStreamAsyncResult AsyncResult
  Byte[] Buffer
  int Count
  int InitialCount
  int Offset
Методы:
  void .ctor(Byte[] buffer, int offset, int count, HttpStreamAsyncResult asyncResult)
  HttpStreamAsyncResult get_AsyncResult()
  void set_AsyncResult(HttpStreamAsyncResult value)
  Byte[] get_Buffer()
  void set_Buffer(Byte[] value)
  int get_Count()
  void set_Count(int value)
  int get_InitialCount()
  void set_InitialCount(int value)
  int get_Offset()
  void set_Offset(int value)
--------------------------------------------------
Класс: WebSocketSharp.Net.Chunk
Наследуется от: object
Поля:
  Byte[] _data
  int _offset
Свойства:
  int ReadLeft
Методы:
  void .ctor(Byte[] data)
  int get_ReadLeft()
  int Read(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: WebSocketSharp.Net.InputChunkState
Наследуется от: Enum
Поля:
  int value__
  InputChunkState None
  InputChunkState Data
  InputChunkState DataEnded
  InputChunkState Trailer
  InputChunkState End
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.ChunkedRequestStream
Наследуется от: RequestStream
Поля:
  int _bufferLength
  HttpListenerContext _context
  ChunkStream _decoder
  bool _disposed
  bool _noMoreData
Свойства:
  ChunkStream Decoder
Методы:
  void .ctor(Stream stream, Byte[] buffer, int offset, int count, HttpListenerContext context)
  ChunkStream get_Decoder()
  void set_Decoder(ChunkStream value)
  void onRead(IAsyncResult asyncResult)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void Close()
  int EndRead(IAsyncResult asyncResult)
  int Read(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: WebSocketSharp.Net.QueryStringCollection
Наследуется от: NameValueCollection
Поля:
Свойства:
Методы:
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: WebSocketSharp.Net.AuthenticationChallenge
Наследуется от: AuthenticationBase
Поля:
Свойства:
  string Domain
  string Stale
Методы:
  void .ctor(AuthenticationSchemes scheme, NameValueCollection parameters)
  void .ctor(AuthenticationSchemes scheme, string realm)
  string get_Domain()
  string get_Stale()
  AuthenticationChallenge CreateBasicChallenge(string realm)
  AuthenticationChallenge CreateDigestChallenge(string realm)
  AuthenticationChallenge Parse(string value)
  string ToBasicString()
  string ToDigestString()
--------------------------------------------------
Класс: WebSocketSharp.Net.AuthenticationResponse
Наследуется от: AuthenticationBase
Поля:
  UInt32 _nonceCount
Свойства:
  UInt32 NonceCount
  string Cnonce
  string Nc
  string Password
  string Response
  string Uri
  string UserName
Методы:
  void .ctor(AuthenticationSchemes scheme, NameValueCollection parameters)
  void .ctor(NetworkCredential credentials)
  void .ctor(AuthenticationChallenge challenge, NetworkCredential credentials, UInt32 nonceCount)
  void .ctor(AuthenticationSchemes scheme, NameValueCollection parameters, NetworkCredential credentials, UInt32 nonceCount)
  UInt32 get_NonceCount()
  string get_Cnonce()
  string get_Nc()
  string get_Password()
  string get_Response()
  string get_Uri()
  string get_UserName()
  string createA1(string username, string password, string realm)
  string createA1(string username, string password, string realm, string nonce, string cnonce)
  string createA2(string method, string uri)
  string createA2(string method, string uri, string entity)
  string hash(string value)
  void initAsDigest()
  string CreateRequestDigest(NameValueCollection parameters)
  AuthenticationResponse Parse(string value)
  NameValueCollection ParseBasicCredentials(string value)
  string ToBasicString()
  string ToDigestString()
  IIdentity ToIdentity()
--------------------------------------------------
Класс: WebSocketSharp.Net.AuthenticationBase
Наследуется от: object
Поля:
  AuthenticationSchemes _scheme
  NameValueCollection Parameters
Свойства:
  string Algorithm
  string Nonce
  string Opaque
  string Qop
  string Realm
  AuthenticationSchemes Scheme
Методы:
  void .ctor(AuthenticationSchemes scheme, NameValueCollection parameters)
  string get_Algorithm()
  string get_Nonce()
  string get_Opaque()
  string get_Qop()
  string get_Realm()
  AuthenticationSchemes get_Scheme()
  string CreateNonceValue()
  NameValueCollection ParseParameters(string value)
  string ToBasicString()
  string ToDigestString()
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListenerPrefix
Наследуется от: object
Поля:
  string _host
  HttpListener _listener
  string _original
  string _path
  string _port
  string _prefix
  bool _secure
Свойства:
  string Host
  bool IsSecure
  HttpListener Listener
  string Original
  string Path
  string Port
Методы:
  void .ctor(string uriPrefix)
  string get_Host()
  bool get_IsSecure()
  HttpListener get_Listener()
  void set_Listener(HttpListener value)
  string get_Original()
  string get_Path()
  string get_Port()
  void parse(string uriPrefix)
  void CheckPrefix(string uriPrefix)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.Net.ClientSslConfiguration
Наследуется от: SslConfiguration
Поля:
  X509CertificateCollection _certs
  string _host
Свойства:
  X509CertificateCollection ClientCertificates
  LocalCertificateSelectionCallback ClientCertificateSelectionCallback
  RemoteCertificateValidationCallback ServerCertificateValidationCallback
  string TargetHost
Методы:
  void .ctor(string targetHost)
  void .ctor(string targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  LocalCertificateSelectionCallback get_ClientCertificateSelectionCallback()
  void set_ClientCertificateSelectionCallback(LocalCertificateSelectionCallback value)
  RemoteCertificateValidationCallback get_ServerCertificateValidationCallback()
  void set_ServerCertificateValidationCallback(RemoteCertificateValidationCallback value)
  string get_TargetHost()
  void set_TargetHost(string value)
--------------------------------------------------
Класс: WebSocketSharp.Net.ServerSslConfiguration
Наследуется от: SslConfiguration
Поля:
  X509Certificate2 _cert
  bool _clientCertRequired
Свойства:
  bool ClientCertificateRequired
  RemoteCertificateValidationCallback ClientCertificateValidationCallback
  X509Certificate2 ServerCertificate
Методы:
  void .ctor(X509Certificate2 serverCertificate)
  void .ctor(X509Certificate2 serverCertificate, bool clientCertificateRequired, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  bool get_ClientCertificateRequired()
  void set_ClientCertificateRequired(bool value)
  RemoteCertificateValidationCallback get_ClientCertificateValidationCallback()
  void set_ClientCertificateValidationCallback(RemoteCertificateValidationCallback value)
  X509Certificate2 get_ServerCertificate()
  void set_ServerCertificate(X509Certificate2 value)
--------------------------------------------------
Класс: WebSocketSharp.Net.SslConfiguration
Наследуется от: object
Поля:
  LocalCertificateSelectionCallback _certSelectionCallback
  RemoteCertificateValidationCallback _certValidationCallback
  bool _checkCertRevocation
  SslProtocols _enabledProtocols
Свойства:
  LocalCertificateSelectionCallback CertificateSelectionCallback
  RemoteCertificateValidationCallback CertificateValidationCallback
  bool CheckCertificateRevocation
  SslProtocols EnabledSslProtocols
Методы:
  void .ctor(SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  LocalCertificateSelectionCallback get_CertificateSelectionCallback()
  void set_CertificateSelectionCallback(LocalCertificateSelectionCallback value)
  RemoteCertificateValidationCallback get_CertificateValidationCallback()
  void set_CertificateValidationCallback(RemoteCertificateValidationCallback value)
  bool get_CheckCertificateRevocation()
  void set_CheckCertificateRevocation(bool value)
  SslProtocols get_EnabledSslProtocols()
  void set_EnabledSslProtocols(SslProtocols value)
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpListenerAsyncResult
Наследуется от: object
Поля:
  AsyncCallback _callback
  bool _completed
  HttpListenerContext _context
  bool _endCalled
  Exception _exception
  bool _inGet
  object _state
  object _sync
  bool _syncCompleted
  ManualResetEvent _waitHandle
Свойства:
  bool EndCalled
  bool InGet
  object AsyncState
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool IsCompleted
Методы:
  void .ctor(AsyncCallback callback, object state)
  bool get_EndCalled()
  void set_EndCalled(bool value)
  bool get_InGet()
  void set_InGet(bool value)
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  bool get_CompletedSynchronously()
  bool get_IsCompleted()
  void complete(HttpListenerAsyncResult asyncResult)
  void Complete(Exception exception)
  void Complete(HttpListenerContext context)
  void Complete(HttpListenerContext context, bool syncCompleted)
  HttpListenerContext GetContext()
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpRequestHeader
Наследуется от: Enum
Поля:
  int value__
  HttpRequestHeader CacheControl
  HttpRequestHeader Connection
  HttpRequestHeader Date
  HttpRequestHeader KeepAlive
  HttpRequestHeader Pragma
  HttpRequestHeader Trailer
  HttpRequestHeader TransferEncoding
  HttpRequestHeader Upgrade
  HttpRequestHeader Via
  HttpRequestHeader Warning
  HttpRequestHeader Allow
  HttpRequestHeader ContentLength
  HttpRequestHeader ContentType
  HttpRequestHeader ContentEncoding
  HttpRequestHeader ContentLanguage
  HttpRequestHeader ContentLocation
  HttpRequestHeader ContentMd5
  HttpRequestHeader ContentRange
  HttpRequestHeader Expires
  HttpRequestHeader LastModified
  HttpRequestHeader Accept
  HttpRequestHeader AcceptCharset
  HttpRequestHeader AcceptEncoding
  HttpRequestHeader AcceptLanguage
  HttpRequestHeader Authorization
  HttpRequestHeader Cookie
  HttpRequestHeader Expect
  HttpRequestHeader From
  HttpRequestHeader Host
  HttpRequestHeader IfMatch
  HttpRequestHeader IfModifiedSince
  HttpRequestHeader IfNoneMatch
  HttpRequestHeader IfRange
  HttpRequestHeader IfUnmodifiedSince
  HttpRequestHeader MaxForwards
  HttpRequestHeader ProxyAuthorization
  HttpRequestHeader Referer
  HttpRequestHeader Range
  HttpRequestHeader Te
  HttpRequestHeader Translate
  HttpRequestHeader UserAgent
  HttpRequestHeader SecWebSocketKey
  HttpRequestHeader SecWebSocketExtensions
  HttpRequestHeader SecWebSocketProtocol
  HttpRequestHeader SecWebSocketVersion
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.HttpResponseHeader
Наследуется от: Enum
Поля:
  int value__
  HttpResponseHeader CacheControl
  HttpResponseHeader Connection
  HttpResponseHeader Date
  HttpResponseHeader KeepAlive
  HttpResponseHeader Pragma
  HttpResponseHeader Trailer
  HttpResponseHeader TransferEncoding
  HttpResponseHeader Upgrade
  HttpResponseHeader Via
  HttpResponseHeader Warning
  HttpResponseHeader Allow
  HttpResponseHeader ContentLength
  HttpResponseHeader ContentType
  HttpResponseHeader ContentEncoding
  HttpResponseHeader ContentLanguage
  HttpResponseHeader ContentLocation
  HttpResponseHeader ContentMd5
  HttpResponseHeader ContentRange
  HttpResponseHeader Expires
  HttpResponseHeader LastModified
  HttpResponseHeader AcceptRanges
  HttpResponseHeader Age
  HttpResponseHeader ETag
  HttpResponseHeader Location
  HttpResponseHeader ProxyAuthenticate
  HttpResponseHeader RetryAfter
  HttpResponseHeader Server
  HttpResponseHeader SetCookie
  HttpResponseHeader Vary
  HttpResponseHeader WwwAuthenticate
  HttpResponseHeader SecWebSocketExtensions
  HttpResponseHeader SecWebSocketAccept
  HttpResponseHeader SecWebSocketProtocol
  HttpResponseHeader SecWebSocketVersion
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Net.WebSockets.HttpListenerWebSocketContext
Наследуется от: WebSocketContext
Поля:
  HttpListenerContext _context
  WebSocket _websocket
Свойства:
  Logger Log
  Stream Stream
  CookieCollection CookieCollection
  NameValueCollection Headers
  string Host
  bool IsAuthenticated
  bool IsLocal
  bool IsSecureConnection
  bool IsWebSocketRequest
  string Origin
  NameValueCollection QueryString
  Uri RequestUri
  string SecWebSocketKey
  IEnumerable`1<string> SecWebSocketProtocols
  string SecWebSocketVersion
  IPEndPoint ServerEndPoint
  IPrincipal User
  IPEndPoint UserEndPoint
  WebSocket WebSocket
Методы:
  void .ctor(HttpListenerContext context, string protocol)
  Logger get_Log()
  Stream get_Stream()
  CookieCollection get_CookieCollection()
  NameValueCollection get_Headers()
  string get_Host()
  bool get_IsAuthenticated()
  bool get_IsLocal()
  bool get_IsSecureConnection()
  bool get_IsWebSocketRequest()
  string get_Origin()
  NameValueCollection get_QueryString()
  Uri get_RequestUri()
  string get_SecWebSocketKey()
  IEnumerable`1<string> get_SecWebSocketProtocols()
  string get_SecWebSocketVersion()
  IPEndPoint get_ServerEndPoint()
  IPrincipal get_User()
  IPEndPoint get_UserEndPoint()
  WebSocket get_WebSocket()
  void Close()
  void Close(HttpStatusCode code)
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.Net.WebSockets.TcpListenerWebSocketContext
Наследуется от: WebSocketContext
Поля:
  CookieCollection _cookies
  Logger _logger
  NameValueCollection _queryString
  HttpRequest _request
  bool _secure
  Stream _stream
  TcpClient _tcpClient
  Uri _uri
  IPrincipal _user
  WebSocket _websocket
Свойства:
  Logger Log
  Stream Stream
  CookieCollection CookieCollection
  NameValueCollection Headers
  string Host
  bool IsAuthenticated
  bool IsLocal
  bool IsSecureConnection
  bool IsWebSocketRequest
  string Origin
  NameValueCollection QueryString
  Uri RequestUri
  string SecWebSocketKey
  IEnumerable`1<string> SecWebSocketProtocols
  string SecWebSocketVersion
  IPEndPoint ServerEndPoint
  IPrincipal User
  IPEndPoint UserEndPoint
  WebSocket WebSocket
Методы:
  void .ctor(TcpClient tcpClient, string protocol, bool secure, ServerSslConfiguration sslConfig, Logger logger)
  Logger get_Log()
  Stream get_Stream()
  CookieCollection get_CookieCollection()
  NameValueCollection get_Headers()
  string get_Host()
  bool get_IsAuthenticated()
  bool get_IsLocal()
  bool get_IsSecureConnection()
  bool get_IsWebSocketRequest()
  string get_Origin()
  NameValueCollection get_QueryString()
  Uri get_RequestUri()
  string get_SecWebSocketKey()
  IEnumerable`1<string> get_SecWebSocketProtocols()
  string get_SecWebSocketVersion()
  IPEndPoint get_ServerEndPoint()
  IPrincipal get_User()
  IPEndPoint get_UserEndPoint()
  WebSocket get_WebSocket()
  bool Authenticate(AuthenticationSchemes scheme, string realm, Func`2<IIdentity, NetworkCredential> credentialsFinder)
  void Close()
  void Close(HttpStatusCode code)
  void SendAuthenticationChallenge(string challenge)
  string ToString()
--------------------------------------------------
Класс: WebSocketSharp.Net.WebSockets.WebSocketContext
Наследуется от: object
Поля:
Свойства:
  CookieCollection CookieCollection
  NameValueCollection Headers
  string Host
  bool IsAuthenticated
  bool IsLocal
  bool IsSecureConnection
  bool IsWebSocketRequest
  string Origin
  NameValueCollection QueryString
  Uri RequestUri
  string SecWebSocketKey
  IEnumerable`1<string> SecWebSocketProtocols
  string SecWebSocketVersion
  IPEndPoint ServerEndPoint
  IPrincipal User
  IPEndPoint UserEndPoint
  WebSocket WebSocket
Методы:
  void .ctor()
  CookieCollection get_CookieCollection()
  NameValueCollection get_Headers()
  string get_Host()
  bool get_IsAuthenticated()
  bool get_IsLocal()
  bool get_IsSecureConnection()
  bool get_IsWebSocketRequest()
  string get_Origin()
  NameValueCollection get_QueryString()
  Uri get_RequestUri()
  string get_SecWebSocketKey()
  IEnumerable`1<string> get_SecWebSocketProtocols()
  string get_SecWebSocketVersion()
  IPEndPoint get_ServerEndPoint()
  IPrincipal get_User()
  IPEndPoint get_UserEndPoint()
  WebSocket get_WebSocket()
--------------------------------------------------
Класс: WebSocketSharp.Server.WebSocketServer
Наследуется от: object
Поля:
  IPAddress _address
  AuthenticationSchemes _authSchemes
  string _defaultRealm
  bool _dnsStyle
  string _hostname
  TcpListener _listener
  Logger _logger
  int _port
  string _realm
  Thread _receiveThread
  bool _reuseAddress
  bool _secure
  WebSocketServiceManager _services
  ServerSslConfiguration _sslConfig
  ServerState modreq(System.Runtime.CompilerServices.IsVolatile) _state
  object _sync
  Func`2<IIdentity, NetworkCredential> _userCredFinder
Свойства:
  IPAddress Address
  AuthenticationSchemes AuthenticationSchemes
  bool IsListening
  bool IsSecure
  bool KeepClean
  Logger Log
  int Port
  string Realm
  bool ReuseAddress
  ServerSslConfiguration SslConfiguration
  Func`2<IIdentity, NetworkCredential> UserCredentialsFinder
  TimeSpan WaitTime
  WebSocketServiceManager WebSocketServices
Методы:
  void .cctor()
  void .ctor()
  void .ctor(int port)
  void .ctor(string url)
  void .ctor(int port, bool secure)
  void .ctor(IPAddress address, int port)
  void .ctor(IPAddress address, int port, bool secure)
  IPAddress get_Address()
  AuthenticationSchemes get_AuthenticationSchemes()
  void set_AuthenticationSchemes(AuthenticationSchemes value)
  bool get_IsListening()
  bool get_IsSecure()
  bool get_KeepClean()
  void set_KeepClean(bool value)
  Logger get_Log()
  int get_Port()
  string get_Realm()
  void set_Realm(string value)
  bool get_ReuseAddress()
  void set_ReuseAddress(bool value)
  ServerSslConfiguration get_SslConfiguration()
  void set_SslConfiguration(ServerSslConfiguration value)
  Func`2<IIdentity, NetworkCredential> get_UserCredentialsFinder()
  void set_UserCredentialsFinder(Func`2<IIdentity, NetworkCredential> value)
  TimeSpan get_WaitTime()
  void set_WaitTime(TimeSpan value)
  WebSocketServiceManager get_WebSocketServices()
  void abort()
  bool checkIfAvailable(bool ready, bool start, bool shutting, bool stop, String& message)
  string checkIfCertificateExists()
  string getRealm()
  void init(string hostname, IPAddress address, int port, bool secure)
  void processRequest(TcpListenerWebSocketContext context)
  void receiveRequest()
  void startReceiving()
  void stopReceiving(int millisecondsTimeout)
  bool tryCreateUri(string uriString, Uri& result, String& message)
  void AddWebSocketService(string path, Func`1<TBehavior> initializer)
  void AddWebSocketService(string path)
  bool RemoveWebSocketService(string path)
  void Start()
  void Stop()
  void Stop(ushort code, string reason)
  void Stop(CloseStatusCode code, string reason)
--------------------------------------------------
Класс: WebSocketSharp.Server.HttpServer
Наследуется от: object
Поля:
  IPAddress _address
  string _hostname
  HttpListener _listener
  Logger _logger
  int _port
  Thread _receiveThread
  string _rootPath
  bool _secure
  WebSocketServiceManager _services
  ServerState modreq(System.Runtime.CompilerServices.IsVolatile) _state
  object _sync
  bool _windows
  EventHandler`1<HttpRequestEventArgs> OnConnect
  EventHandler`1<HttpRequestEventArgs> OnDelete
  EventHandler`1<HttpRequestEventArgs> OnGet
  EventHandler`1<HttpRequestEventArgs> OnHead
  EventHandler`1<HttpRequestEventArgs> OnOptions
  EventHandler`1<HttpRequestEventArgs> OnPatch
  EventHandler`1<HttpRequestEventArgs> OnPost
  EventHandler`1<HttpRequestEventArgs> OnPut
  EventHandler`1<HttpRequestEventArgs> OnTrace
Свойства:
  IPAddress Address
  AuthenticationSchemes AuthenticationSchemes
  bool IsListening
  bool IsSecure
  bool KeepClean
  Logger Log
  int Port
  string Realm
  bool ReuseAddress
  string RootPath
  ServerSslConfiguration SslConfiguration
  Func`2<IIdentity, NetworkCredential> UserCredentialsFinder
  TimeSpan WaitTime
  WebSocketServiceManager WebSocketServices
Методы:
  void .ctor()
  void .ctor(int port)
  void .ctor(string url)
  void .ctor(int port, bool secure)
  void .ctor(IPAddress address, int port)
  void .ctor(IPAddress address, int port, bool secure)
  IPAddress get_Address()
  AuthenticationSchemes get_AuthenticationSchemes()
  void set_AuthenticationSchemes(AuthenticationSchemes value)
  bool get_IsListening()
  bool get_IsSecure()
  bool get_KeepClean()
  void set_KeepClean(bool value)
  Logger get_Log()
  int get_Port()
  string get_Realm()
  void set_Realm(string value)
  bool get_ReuseAddress()
  void set_ReuseAddress(bool value)
  string get_RootPath()
  void set_RootPath(string value)
  ServerSslConfiguration get_SslConfiguration()
  void set_SslConfiguration(ServerSslConfiguration value)
  Func`2<IIdentity, NetworkCredential> get_UserCredentialsFinder()
  void set_UserCredentialsFinder(Func`2<IIdentity, NetworkCredential> value)
  TimeSpan get_WaitTime()
  void set_WaitTime(TimeSpan value)
  WebSocketServiceManager get_WebSocketServices()
  void add_OnConnect(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnConnect(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnDelete(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnDelete(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnGet(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnGet(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnHead(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnHead(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnOptions(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnOptions(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnPatch(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnPatch(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnPost(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnPost(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnPut(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnPut(EventHandler`1<HttpRequestEventArgs> value)
  void add_OnTrace(EventHandler`1<HttpRequestEventArgs> value)
  void remove_OnTrace(EventHandler`1<HttpRequestEventArgs> value)
  void abort()
  bool checkIfAvailable(bool ready, bool start, bool shutting, bool stop, String& message)
  string checkIfCertificateExists()
  string convertToString(IPAddress address)
  string getHost(Uri uri)
  void init(string hostname, IPAddress address, int port, bool secure)
  void processRequest(HttpListenerContext context)
  void processRequest(HttpListenerWebSocketContext context)
  void receiveRequest()
  void startReceiving()
  void stopReceiving(int millisecondsTimeout)
  bool tryCreateUri(string uriString, Uri& result, String& message)
  void AddWebSocketService(string path, Func`1<TBehavior> initializer)
  void AddWebSocketService(string path)
  Byte[] GetFile(string path)
  bool RemoveWebSocketService(string path)
  void Start()
  void Stop()
  void Stop(ushort code, string reason)
  void Stop(CloseStatusCode code, string reason)
--------------------------------------------------
Класс: WebSocketSharp.Server.WebSocketServiceHost
Наследуется от: object
Поля:
Свойства:
  ServerState State
  bool KeepClean
  string Path
  WebSocketSessionManager Sessions
  Type Type
  TimeSpan WaitTime
Методы:
  void .ctor()
  ServerState get_State()
  bool get_KeepClean()
  void set_KeepClean(bool value)
  string get_Path()
  WebSocketSessionManager get_Sessions()
  Type get_Type()
  TimeSpan get_WaitTime()
  void set_WaitTime(TimeSpan value)
  void Start()
  void StartSession(WebSocketContext context)
  void Stop(ushort code, string reason)
  WebSocketBehavior CreateSession()
--------------------------------------------------
Класс: WebSocketSharp.Server.HttpRequestEventArgs
Наследуется от: EventArgs
Поля:
  HttpListenerRequest _request
  HttpListenerResponse _response
Свойства:
  HttpListenerRequest Request
  HttpListenerResponse Response
Методы:
  void .ctor(HttpListenerContext context)
  HttpListenerRequest get_Request()
  HttpListenerResponse get_Response()
--------------------------------------------------
Класс: WebSocketSharp.Server.IWebSocketSession
Поля:
Свойства:
  WebSocketContext Context
  string ID
  string Protocol
  DateTime StartTime
  WebSocketState State
Методы:
  WebSocketContext get_Context()
  string get_ID()
  string get_Protocol()
  DateTime get_StartTime()
  WebSocketState get_State()
--------------------------------------------------
Класс: WebSocketSharp.Server.WebSocketSessionManager
Наследуется от: object
Поля:
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _clean
  object _forSweep
  Logger _logger
  Dictionary`2<string, IWebSocketSession> _sessions
  ServerState modreq(System.Runtime.CompilerServices.IsVolatile) _state
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _sweeping
  Timer _sweepTimer
  object _sync
  TimeSpan _waitTime
Свойства:
  ServerState State
  IEnumerable`1<string> ActiveIDs
  int Count
  IEnumerable`1<string> IDs
  IEnumerable`1<string> InactiveIDs
  IWebSocketSession Item
  bool KeepClean
  IEnumerable`1<IWebSocketSession> Sessions
  TimeSpan WaitTime
Методы:
  void .ctor()
  void .ctor(Logger logger)
  ServerState get_State()
  IEnumerable`1<string> get_ActiveIDs()
  int get_Count()
  IEnumerable`1<string> get_IDs()
  IEnumerable`1<string> get_InactiveIDs()
  IWebSocketSession get_Item(string id)
  bool get_KeepClean()
  void set_KeepClean(bool value)
  IEnumerable`1<IWebSocketSession> get_Sessions()
  TimeSpan get_WaitTime()
  void set_WaitTime(TimeSpan value)
  void broadcast(Opcode opcode, Byte[] data, Action completed)
  void broadcast(Opcode opcode, Stream stream, Action completed)
  void broadcastAsync(Opcode opcode, Byte[] data, Action completed)
  void broadcastAsync(Opcode opcode, Stream stream, Action completed)
  string createID()
  void setSweepTimer(double interval)
  bool tryGetSession(string id, IWebSocketSession& session)
  string Add(IWebSocketSession session)
  void Broadcast(Opcode opcode, Byte[] data, Dictionary`2<CompressionMethod, Byte[]> cache)
  void Broadcast(Opcode opcode, Stream stream, Dictionary`2<CompressionMethod, Stream> cache)
  Dictionary`2<string, bool> Broadping(Byte[] frameAsBytes, TimeSpan timeout)
  bool Remove(string id)
  void Start()
  void Stop(CloseEventArgs e, Byte[] frameAsBytes, bool receive)
  void Broadcast(Byte[] data)
  void Broadcast(string data)
  void BroadcastAsync(Byte[] data, Action completed)
  void BroadcastAsync(string data, Action completed)
  void BroadcastAsync(Stream stream, int length, Action completed)
  Dictionary`2<string, bool> Broadping()
  Dictionary`2<string, bool> Broadping(string message)
  void CloseSession(string id)
  void CloseSession(string id, ushort code, string reason)
  void CloseSession(string id, CloseStatusCode code, string reason)
  bool PingTo(string id)
  bool PingTo(string message, string id)
  void SendTo(Byte[] data, string id)
  void SendTo(string data, string id)
  void SendToAsync(Byte[] data, string id, Action`1<bool> completed)
  void SendToAsync(string data, string id, Action`1<bool> completed)
  void SendToAsync(Stream stream, int length, string id, Action`1<bool> completed)
  void Sweep()
  bool TryGetSession(string id, IWebSocketSession& session)
  void <setSweepTimer>b__36_0(object sender, ElapsedEventArgs e)
  void <BroadcastAsync>b__49_1(Exception ex)
--------------------------------------------------
Класс: WebSocketSharp.Server.ServerState
Наследуется от: Enum
Поля:
  int value__
  ServerState Ready
  ServerState Start
  ServerState ShuttingDown
  ServerState Stop
Свойства:
Методы:
--------------------------------------------------
Класс: WebSocketSharp.Server.WebSocketServiceManager
Наследуется от: object
Поля:
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _clean
  Dictionary`2<string, WebSocketServiceHost> _hosts
  Logger _logger
  ServerState modreq(System.Runtime.CompilerServices.IsVolatile) _state
  object _sync
  TimeSpan _waitTime
Свойства:
  int Count
  IEnumerable`1<WebSocketServiceHost> Hosts
  WebSocketServiceHost Item
  bool KeepClean
  IEnumerable`1<string> Paths
  int SessionCount
  TimeSpan WaitTime
Методы:
  void .ctor()
  void .ctor(Logger logger)
  int get_Count()
  IEnumerable`1<WebSocketServiceHost> get_Hosts()
  WebSocketServiceHost get_Item(string path)
  bool get_KeepClean()
  void set_KeepClean(bool value)
  IEnumerable`1<string> get_Paths()
  int get_SessionCount()
  TimeSpan get_WaitTime()
  void set_WaitTime(TimeSpan value)
  void broadcast(Opcode opcode, Byte[] data, Action completed)
  void broadcast(Opcode opcode, Stream stream, Action completed)
  void broadcastAsync(Opcode opcode, Byte[] data, Action completed)
  void broadcastAsync(Opcode opcode, Stream stream, Action completed)
  Dictionary`2<string, Dictionary`2<string, bool>> broadping(Byte[] frameAsBytes, TimeSpan timeout)
  void Add(string path, Func`1<TBehavior> initializer)
  bool InternalTryGetServiceHost(string path, WebSocketServiceHost& host)
  bool Remove(string path)
  void Start()
  void Stop(CloseEventArgs e, bool send, bool receive)
  void Broadcast(Byte[] data)
  void Broadcast(string data)
  void BroadcastAsync(Byte[] data, Action completed)
  void BroadcastAsync(string data, Action completed)
  void BroadcastAsync(Stream stream, int length, Action completed)
  Dictionary`2<string, Dictionary`2<string, bool>> Broadping()
  Dictionary`2<string, Dictionary`2<string, bool>> Broadping(string message)
  bool TryGetServiceHost(string path, WebSocketServiceHost& host)
  void <BroadcastAsync>b__38_1(Exception ex)
--------------------------------------------------
Класс: WebSocketSharp.Server.WebSocketBehavior
Наследуется от: object
Поля:
  WebSocketContext _context
  Func`3<CookieCollection, CookieCollection, bool> _cookiesValidator
  bool _emitOnPing
  string _id
  bool _ignoreExtensions
  Func`2<string, bool> _originValidator
  string _protocol
  WebSocketSessionManager _sessions
  DateTime _startTime
  WebSocket _websocket
Свойства:
  Logger Log
  WebSocketSessionManager Sessions
  WebSocketContext Context
  Func`3<CookieCollection, CookieCollection, bool> CookiesValidator
  bool EmitOnPing
  string ID
  bool IgnoreExtensions
  Func`2<string, bool> OriginValidator
  string Protocol
  DateTime StartTime
  WebSocketState State
Методы:
  void .ctor()
  Logger get_Log()
  WebSocketSessionManager get_Sessions()
  WebSocketContext get_Context()
  Func`3<CookieCollection, CookieCollection, bool> get_CookiesValidator()
  void set_CookiesValidator(Func`3<CookieCollection, CookieCollection, bool> value)
  bool get_EmitOnPing()
  void set_EmitOnPing(bool value)
  string get_ID()
  bool get_IgnoreExtensions()
  void set_IgnoreExtensions(bool value)
  Func`2<string, bool> get_OriginValidator()
  void set_OriginValidator(Func`2<string, bool> value)
  string get_Protocol()
  void set_Protocol(string value)
  DateTime get_StartTime()
  WebSocketState get_State()
  string checkHandshakeRequest(WebSocketContext context)
  void onClose(object sender, CloseEventArgs e)
  void onError(object sender, ErrorEventArgs e)
  void onMessage(object sender, MessageEventArgs e)
  void onOpen(object sender, EventArgs e)
  void Start(WebSocketContext context, WebSocketSessionManager sessions)
  void Error(string message, Exception exception)
  void OnClose(CloseEventArgs e)
  void OnError(ErrorEventArgs e)
  void OnMessage(MessageEventArgs e)
  void OnOpen()
  void Send(Byte[] data)
  void Send(FileInfo file)
  void Send(string data)
  void SendAsync(Byte[] data, Action`1<bool> completed)
  void SendAsync(FileInfo file, Action`1<bool> completed)
  void SendAsync(string data, Action`1<bool> completed)
  void SendAsync(Stream stream, int length, Action`1<bool> completed)
--------------------------------------------------
Класс: WebSocketSharp.Server.WebSocketServiceHost`1
Наследуется от: WebSocketServiceHost
Поля:
  Func`1<TBehavior> _initializer
  Logger _logger
  string _path
  WebSocketSessionManager _sessions
Свойства:
  bool KeepClean
  string Path
  WebSocketSessionManager Sessions
  Type Type
  TimeSpan WaitTime
Методы:
  void .ctor(string path, Func`1<TBehavior> initializer, Logger logger)
  bool get_KeepClean()
  void set_KeepClean(bool value)
  string get_Path()
  WebSocketSessionManager get_Sessions()
  Type get_Type()
  TimeSpan get_WaitTime()
  void set_WaitTime(TimeSpan value)
  WebSocketBehavior CreateSession()
--------------------------------------------------
Класс: <35d1ffca-3c70-4a84-83d7-0680f018ddea><PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=14 49BE292FEFD2E3B7218C9123B9A016847C2A5C96
  long 6532575F81314AADD4BCFD96F1517D5BBFF2B60B
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  string FxVersion
  string VsVersion
  string FxFileVersion
  string VsFileVersion
  string AssemblyI18N
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_Core
Свойства:
Методы:
--------------------------------------------------
Класс: Locale
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  string GetText(string msg)
  string GetText(string fmt, Object[] args)
--------------------------------------------------
Класс: Mono.Unix.AbstractUnixEndPoint
Наследуется от: EndPoint
Поля:
  string path
Свойства:
  string Path
  AddressFamily AddressFamily
Методы:
  void .ctor(string path)
  string get_Path()
  void set_Path(string value)
  AddressFamily get_AddressFamily()
  EndPoint Create(SocketAddress socketAddress)
  SocketAddress Serialize()
  string ToString()
  int GetHashCode()
  bool Equals(object o)
--------------------------------------------------
Класс: Mono.Unix.Catalog
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  IntPtr bindtextdomain(IntPtr domainname, IntPtr dirname)
  IntPtr bind_textdomain_codeset(IntPtr domainname, IntPtr codeset)
  IntPtr textdomain(IntPtr domainname)
  void Init(string package, string localedir)
  void MarshalStrings(string s1, IntPtr& p1, string s2, IntPtr& p2, string s3, IntPtr& p3)
  IntPtr gettext(IntPtr instring)
  string GetString(string s)
  IntPtr ngettext(IntPtr singular, IntPtr plural, int n)
  string GetPluralString(string s, string p, int n)
--------------------------------------------------
Класс: Mono.Unix.FileAccessPermissions
Наследуется от: Enum
Поля:
  int value__
  FileAccessPermissions UserReadWriteExecute
  FileAccessPermissions UserRead
  FileAccessPermissions UserWrite
  FileAccessPermissions UserExecute
  FileAccessPermissions GroupReadWriteExecute
  FileAccessPermissions GroupRead
  FileAccessPermissions GroupWrite
  FileAccessPermissions GroupExecute
  FileAccessPermissions OtherReadWriteExecute
  FileAccessPermissions OtherRead
  FileAccessPermissions OtherWrite
  FileAccessPermissions OtherExecute
  FileAccessPermissions DefaultPermissions
  FileAccessPermissions AllPermissions
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.FileAccessPattern
Наследуется от: Enum
Поля:
  int value__
  FileAccessPattern Normal
  FileAccessPattern Sequential
  FileAccessPattern Random
  FileAccessPattern NoReuse
  FileAccessPattern PreLoad
  FileAccessPattern FlushCache
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.FileHandleOperations
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void AdviseFileAccessPattern(int fd, FileAccessPattern pattern, long offset, long len)
  void AdviseFileAccessPattern(int fd, FileAccessPattern pattern)
  void AdviseFileAccessPattern(FileStream file, FileAccessPattern pattern, long offset, long len)
  void AdviseFileAccessPattern(FileStream file, FileAccessPattern pattern)
  void AdviseFileAccessPattern(UnixStream stream, FileAccessPattern pattern, long offset, long len)
  void AdviseFileAccessPattern(UnixStream stream, FileAccessPattern pattern)
--------------------------------------------------
Класс: Mono.Unix.FileSpecialAttributes
Наследуется от: Enum
Поля:
  int value__
  FileSpecialAttributes SetUserId
  FileSpecialAttributes SetGroupId
  FileSpecialAttributes Sticky
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.FileTypes
Наследуется от: Enum
Поля:
  int value__
  FileTypes Directory
  FileTypes CharacterDevice
  FileTypes BlockDevice
  FileTypes RegularFile
  FileTypes Fifo
  FileTypes SymbolicLink
  FileTypes Socket
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.PeerCred
Наследуется от: object
Поля:
  int so_peercred
  PeerCredData data
Свойства:
  int ProcessID
  int UserID
  int GroupID
Методы:
  void .ctor(Socket sock)
  int get_ProcessID()
  int get_UserID()
  int get_GroupID()
--------------------------------------------------
Класс: Mono.Unix.StdioFileStream
Наследуется от: Stream
Поля:
  IntPtr InvalidFileStream
  IntPtr StandardInput
  IntPtr StandardOutput
  IntPtr StandardError
  bool canSeek
  bool canRead
  bool canWrite
  bool owner
  IntPtr file
Свойства:
  IntPtr Handle
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(IntPtr fileStream)
  void .ctor(IntPtr fileStream, bool ownsHandle)
  void .ctor(IntPtr fileStream, FileAccess access)
  void .ctor(IntPtr fileStream, FileAccess access, bool ownsHandle)
  void .ctor(string path)
  void .ctor(string path, string mode)
  void .ctor(string path, FileMode mode)
  void .ctor(string path, FileAccess access)
  void .ctor(string path, FileMode mode, FileAccess access)
  void .cctor()
  IntPtr Fopen(string path, string mode)
  void InitStream(IntPtr fileStream, bool ownsHandle)
  void InitCanReadWrite(FileAccess access)
  string ToFopenMode(string file, FileMode mode)
  string ToFopenMode(string file, FileAccess access)
  string ToFopenMode(string file, FileMode mode, FileAccess access)
  bool AssertFileMode(string file, FileMode mode)
  bool FileExists(string file)
  void AssertNotDisposed()
  IntPtr get_Handle()
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void SaveFilePosition(FilePosition pos)
  void RestoreFilePosition(FilePosition pos)
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  void AssertValidBuffer(Byte[] buffer, int offset, int count)
  void Rewind()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void Finalize()
  void Close()
--------------------------------------------------
Класс: Mono.Unix.UnixClient
Наследуется от: MarshalByRefObject
Поля:
  NetworkStream stream
  Socket client
  bool disposed
Свойства:
  Socket Client
  PeerCred PeerCredential
  LingerOption LingerState
  int ReceiveBufferSize
  int ReceiveTimeout
  int SendBufferSize
  int SendTimeout
Методы:
  void .ctor()
  void .ctor(string path)
  void .ctor(UnixEndPoint ep)
  void .ctor(Socket sock)
  Socket get_Client()
  void set_Client(Socket value)
  PeerCred get_PeerCredential()
  LingerOption get_LingerState()
  void set_LingerState(LingerOption value)
  int get_ReceiveBufferSize()
  void set_ReceiveBufferSize(int value)
  int get_ReceiveTimeout()
  void set_ReceiveTimeout(int value)
  int get_SendBufferSize()
  void set_SendBufferSize(int value)
  int get_SendTimeout()
  void set_SendTimeout(int value)
  void Close()
  void Connect(UnixEndPoint remoteEndPoint)
  void Connect(string path)
  void Dispose()
  void Dispose(bool disposing)
  NetworkStream GetStream()
  void CheckDisposed()
  void Finalize()
--------------------------------------------------
Класс: Mono.Unix.UnixDirectoryInfo
Наследуется от: UnixFileSystemInfo
Поля:
Свойства:
  string Name
  UnixDirectoryInfo Parent
  UnixDirectoryInfo Root
Методы:
  void .ctor(string path)
  void .ctor(string path, Stat stat)
  string get_Name()
  UnixDirectoryInfo get_Parent()
  UnixDirectoryInfo get_Root()
  void Create(FilePermissions mode)
  void Create(FileAccessPermissions mode)
  void Create()
  void Delete()
  void Delete(bool recursive)
  Dirent[] GetEntries()
  Dirent[] GetEntries(IntPtr dirp)
  Dirent[] GetEntries(Regex regex)
  Dirent[] GetEntries(IntPtr dirp, Regex regex)
  Dirent[] GetEntries(string regex)
  UnixFileSystemInfo[] GetFileSystemEntries()
  UnixFileSystemInfo[] GetFileSystemEntries(Dirent[] dentries)
  UnixFileSystemInfo[] GetFileSystemEntries(Regex regex)
  UnixFileSystemInfo[] GetFileSystemEntries(string regex)
  string GetCurrentDirectory()
  void SetCurrentDirectory(string path)
--------------------------------------------------
Класс: Mono.Unix.UnixDriveType
Наследуется от: Enum
Поля:
  int value__
  UnixDriveType Unknown
  UnixDriveType NoRootDirectory
  UnixDriveType Removable
  UnixDriveType Fixed
  UnixDriveType Network
  UnixDriveType CDRom
  UnixDriveType Ram
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.UnixDriveInfo
Наследуется от: object
Поля:
  Statvfs stat
  string fstype
  string mount_point
  string block_device
Свойства:
  long AvailableFreeSpace
  string DriveFormat
  UnixDriveType DriveType
  bool IsReady
  string Name
  UnixDirectoryInfo RootDirectory
  long TotalFreeSpace
  long TotalSize
  string VolumeLabel
  long MaximumFilenameLength
Методы:
  void .ctor(string mountPoint)
  void .ctor(Fstab fstab)
  void FromFstab(Fstab fstab)
  UnixDriveInfo GetForSpecialFile(string specialFile)
  long get_AvailableFreeSpace()
  string get_DriveFormat()
  UnixDriveType get_DriveType()
  bool get_IsReady()
  string get_Name()
  UnixDirectoryInfo get_RootDirectory()
  long get_TotalFreeSpace()
  long get_TotalSize()
  string get_VolumeLabel()
  long get_MaximumFilenameLength()
  UnixDriveInfo[] GetDrives()
  string ToString()
  void Refresh()
  bool Refresh(bool throwException)
--------------------------------------------------
Класс: Mono.Unix.UnixEncoding
Наследуется от: Encoding
Поля:
  Encoding Instance
  char EscapeByte
Свойства:
Методы:
  void .ctor()
  void .cctor()
  int InternalGetByteCount(Char[] chars, int index, int count, UInt32 leftOver, bool flush)
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string s)
  int InternalGetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, UInt32& leftOver, bool flush)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int InternalGetCharCount(Byte[] bytes, int index, int count, UInt32 leftOverBits, UInt32 leftOverCount, bool throwOnInvalid, bool flush)
  int GetCharCount(Byte[] bytes, int index, int count)
  int InternalGetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex, UInt32& leftOverBits, UInt32& leftOverCount, bool throwOnInvalid, bool flush)
  void CopyRaw(Byte[] raw, Int32& next_raw, Char[] chars, Int32& posn, int length)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  Decoder GetDecoder()
  Encoder GetEncoder()
  Byte[] GetPreamble()
  bool Equals(object value)
  int GetHashCode()
  Byte[] GetBytes(string s)
  string _(string arg)
--------------------------------------------------
Класс: Mono.Unix.UnixEnvironment
Наследуется от: object
Поля:
Свойства:
  string CurrentDirectory
  string MachineName
  string UserName
  UnixGroupInfo RealGroup
  long RealGroupId
  UnixUserInfo RealUser
  long RealUserId
  UnixGroupInfo EffectiveGroup
  long EffectiveGroupId
  UnixUserInfo EffectiveUser
  long EffectiveUserId
  string Login
Методы:
  void .ctor()
  string get_CurrentDirectory()
  void set_CurrentDirectory(string value)
  string get_MachineName()
  void set_MachineName(string value)
  string get_UserName()
  UnixGroupInfo get_RealGroup()
  long get_RealGroupId()
  UnixUserInfo get_RealUser()
  long get_RealUserId()
  UnixGroupInfo get_EffectiveGroup()
  void set_EffectiveGroup(UnixGroupInfo value)
  long get_EffectiveGroupId()
  void set_EffectiveGroupId(long value)
  UnixUserInfo get_EffectiveUser()
  void set_EffectiveUser(UnixUserInfo value)
  long get_EffectiveUserId()
  void set_EffectiveUserId(long value)
  string get_Login()
  long GetConfigurationValue(SysconfName name)
  string GetConfigurationString(ConfstrName name)
  void SetNiceValue(int inc)
  int CreateSession()
  void SetProcessGroup()
  int GetProcessGroup()
  UnixGroupInfo[] GetSupplementaryGroups()
  UInt32[] _GetSupplementaryGroupIds()
  void SetSupplementaryGroups(UnixGroupInfo[] groups)
  Int64[] GetSupplementaryGroupIds()
  void SetSupplementaryGroupIds(Int64[] list)
  int GetParentProcessId()
  UnixProcess GetParentProcess()
  String[] GetUserShells()
--------------------------------------------------
Класс: Mono.Unix.UnixEndPoint
Наследуется от: EndPoint
Поля:
  string filename
Свойства:
  string Filename
  AddressFamily AddressFamily
Методы:
  void .ctor(string filename)
  string get_Filename()
  void set_Filename(string value)
  AddressFamily get_AddressFamily()
  EndPoint Create(SocketAddress socketAddress)
  SocketAddress Serialize()
  string ToString()
  int GetHashCode()
  bool Equals(object o)
--------------------------------------------------
Класс: Mono.Unix.UnixFileInfo
Наследуется от: UnixFileSystemInfo
Поля:
Свойства:
  string Name
  string DirectoryName
  UnixDirectoryInfo Directory
Методы:
  void .ctor(string path)
  void .ctor(string path, Stat stat)
  string get_Name()
  string get_DirectoryName()
  UnixDirectoryInfo get_Directory()
  void Delete()
  UnixStream Create()
  UnixStream Create(FilePermissions mode)
  UnixStream Create(FileAccessPermissions mode)
  UnixStream Open(OpenFlags flags)
  UnixStream Open(OpenFlags flags, FilePermissions mode)
  UnixStream Open(FileMode mode)
  UnixStream Open(FileMode mode, FileAccess access)
  UnixStream Open(FileMode mode, FileAccess access, FilePermissions perms)
  UnixStream OpenRead()
  UnixStream OpenWrite()
--------------------------------------------------
Класс: Mono.Unix.UnixFileSystemInfo
Наследуется от: object
Поля:
  FileSpecialAttributes AllSpecialAttributes
  FileTypes AllFileTypes
  Stat stat
  string fullPath
  string originalPath
  bool valid
Свойства:
  string FullPath
  string OriginalPath
  string FullName
  string Name
  bool Exists
  long Device
  long Inode
  FilePermissions Protection
  FileTypes FileType
  FileAccessPermissions FileAccessPermissions
  FileSpecialAttributes FileSpecialAttributes
  long LinkCount
  UnixUserInfo OwnerUser
  long OwnerUserId
  UnixGroupInfo OwnerGroup
  long OwnerGroupId
  long DeviceType
  long Length
  long BlockSize
  long BlocksAllocated
  DateTime LastAccessTime
  DateTime LastAccessTimeUtc
  DateTime LastWriteTime
  DateTime LastWriteTimeUtc
  DateTime LastStatusChangeTime
  DateTime LastStatusChangeTimeUtc
  bool IsDirectory
  bool IsCharacterDevice
  bool IsBlockDevice
  bool IsRegularFile
  bool IsFifo
  bool IsSymbolicLink
  bool IsSocket
  bool IsSetUser
  bool IsSetGroup
  bool IsSticky
Методы:
  void .ctor(string path)
  void .ctor(string path, Stat stat)
  string get_FullPath()
  void set_FullPath(string value)
  string get_OriginalPath()
  void set_OriginalPath(string value)
  void AssertValid()
  string get_FullName()
  string get_Name()
  bool get_Exists()
  long get_Device()
  long get_Inode()
  FilePermissions get_Protection()
  void set_Protection(FilePermissions value)
  FileTypes get_FileType()
  FileAccessPermissions get_FileAccessPermissions()
  void set_FileAccessPermissions(FileAccessPermissions value)
  FileSpecialAttributes get_FileSpecialAttributes()
  void set_FileSpecialAttributes(FileSpecialAttributes value)
  long get_LinkCount()
  UnixUserInfo get_OwnerUser()
  long get_OwnerUserId()
  UnixGroupInfo get_OwnerGroup()
  long get_OwnerGroupId()
  long get_DeviceType()
  long get_Length()
  long get_BlockSize()
  long get_BlocksAllocated()
  DateTime get_LastAccessTime()
  DateTime get_LastAccessTimeUtc()
  DateTime get_LastWriteTime()
  DateTime get_LastWriteTimeUtc()
  DateTime get_LastStatusChangeTime()
  DateTime get_LastStatusChangeTimeUtc()
  bool get_IsDirectory()
  bool get_IsCharacterDevice()
  bool get_IsBlockDevice()
  bool get_IsRegularFile()
  bool get_IsFifo()
  bool get_IsSymbolicLink()
  bool get_IsSocket()
  bool get_IsSetUser()
  bool get_IsSetGroup()
  bool get_IsSticky()
  bool IsFileType(FilePermissions mode, FilePermissions type)
  bool IsSet(FilePermissions mode, FilePermissions type)
  bool CanAccess(AccessModes mode)
  UnixFileSystemInfo CreateLink(string path)
  UnixSymbolicLinkInfo CreateSymbolicLink(string path)
  void Delete()
  long GetConfigurationValue(PathconfName name)
  void Refresh()
  void Refresh(bool force)
  bool GetFileStatus(string path, Stat& stat)
  void SetLength(long length)
  void SetOwner(long owner, long group)
  void SetOwner(string owner)
  void SetOwner(string owner, string group)
  void SetOwner(UnixUserInfo owner)
  void SetOwner(UnixUserInfo owner, UnixGroupInfo group)
  string ToString()
  Stat ToStat()
  UnixFileSystemInfo GetFileSystemEntry(string path)
--------------------------------------------------
Класс: Mono.Unix.UnixGroupInfo
Наследуется от: object
Поля:
  Group group
Свойства:
  string GroupName
  string Password
  long GroupId
Методы:
  void .ctor(string group)
  void .ctor(long group)
  void .ctor(Group group)
  Group CopyGroup(Group group)
  string get_GroupName()
  string get_Password()
  long get_GroupId()
  UnixUserInfo[] GetMembers()
  String[] GetMemberNames()
  int GetHashCode()
  bool Equals(object obj)
  string ToString()
  Group ToGroup()
  UnixGroupInfo[] GetLocalGroups()
--------------------------------------------------
Класс: Mono.Unix.UnixIOException
Наследуется от: IOException
Поля:
  int errno
Свойства:
  int NativeErrorCode
  Errno ErrorCode
Методы:
  void .ctor()
  void .ctor(int errno)
  void .ctor(int errno, Exception inner)
  void .ctor(Errno errno)
  void .ctor(Errno errno, Exception inner)
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
  int get_NativeErrorCode()
  Errno get_ErrorCode()
  string GetMessage(Errno errno)
--------------------------------------------------
Класс: Mono.Unix.UnixListener
Наследуется от: MarshalByRefObject
Поля:
  bool disposed
  bool listening
  Socket server
  EndPoint savedEP
Свойства:
  EndPoint LocalEndpoint
  Socket Server
Методы:
  void .ctor(string path)
  void .ctor(UnixEndPoint localEndPoint)
  void Init(UnixEndPoint ep)
  EndPoint get_LocalEndpoint()
  Socket get_Server()
  Socket AcceptSocket()
  UnixClient AcceptUnixClient()
  void Finalize()
  bool Pending()
  void Start()
  void Start(int backlog)
  void Stop()
  void Dispose()
  void Dispose(bool disposing)
  void CheckDisposed()
--------------------------------------------------
Класс: Mono.Unix.ErrorMarshal
Наследуется от: object
Поля:
  ErrorTranslator Translate
Свойства:
Методы:
  void .ctor()
  void .cctor()
  string strerror(Errno errno)
  string strerror_r(Errno errno)
--------------------------------------------------
Класс: Mono.Unix.UnixMarshal
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  string GetErrorDescription(Errno errno)
  IntPtr AllocHeap(long size)
  IntPtr ReAllocHeap(IntPtr ptr, long size)
  void FreeHeap(IntPtr ptr)
  string PtrToStringUnix(IntPtr p)
  string PtrToString(IntPtr p)
  string PtrToString(IntPtr p, Encoding encoding)
  int GetStringByteLength(IntPtr p, Encoding encoding)
  int GetInt16BufferLength(IntPtr p)
  int GetInt32BufferLength(IntPtr p)
  int GetRandomBufferLength(IntPtr p, int nullLength)
  String[] PtrToStringArray(IntPtr stringArray)
  String[] PtrToStringArray(IntPtr stringArray, Encoding encoding)
  int CountStrings(IntPtr stringArray)
  String[] PtrToStringArray(int count, IntPtr stringArray)
  String[] PtrToStringArray(int count, IntPtr stringArray, Encoding encoding)
  IntPtr StringToHeap(string s)
  IntPtr StringToHeap(string s, Encoding encoding)
  IntPtr StringToHeap(string s, int index, int count)
  IntPtr StringToHeap(string s, int index, int count, Encoding encoding)
  bool ShouldRetrySyscall(int r)
  bool ShouldRetrySyscall(int r, Errno& errno)
  string EscapeFormatString(string message, Char[] permitted)
  bool IsCharPresent(Char[] array, char c)
  Exception CreateExceptionForError(Errno errno)
  Exception CreateExceptionForLastError()
  void ThrowExceptionForError(Errno errno)
  void ThrowExceptionForLastError()
  void ThrowExceptionForErrorIf(int retval, Errno errno)
  void ThrowExceptionForLastErrorIf(int retval)
--------------------------------------------------
Класс: Mono.Unix.UnixPath
Наследуется от: object
Поля:
  char DirectorySeparatorChar
  char AltDirectorySeparatorChar
  char PathSeparator
  char VolumeSeparatorChar
  Char[] _InvalidPathChars
Свойства:
Методы:
  void .ctor()
  void .cctor()
  Char[] GetInvalidPathChars()
  string Combine(string path1, String[] paths)
  void Combine(StringBuilder path, string part)
  string GetDirectoryName(string path)
  string GetFileName(string path)
  string GetFullPath(string path)
  string _GetFullPath(string path)
  string GetCanonicalPath(string path)
  void GetPathComponents(string path, String[]& components, Int32& lastIndex)
  string GetPathRoot(string path)
  string GetCompleteRealPath(string path)
  string GetRealPath(string path)
  string ReadSymbolicLink(string path)
  string ReadSymbolicLink(string path, Errno& errno)
  string TryReadLink(string path)
  string ReadLink(string path)
  bool IsPathRooted(string path)
  void CheckPath(string path)
--------------------------------------------------
Класс: Mono.Unix.UnixPipes
Наследуется от: ValueType
Поля:
  UnixStream Reading
  UnixStream Writing
Свойства:
Методы:
  void .ctor(UnixStream reading, UnixStream writing)
  UnixPipes CreatePipes()
  bool Equals(object value)
  bool Equals(UnixPipes value)
  int GetHashCode()
  bool op_Equality(UnixPipes lhs, UnixPipes rhs)
  bool op_Inequality(UnixPipes lhs, UnixPipes rhs)
--------------------------------------------------
Класс: Mono.Unix.UnixProcess
Наследуется от: object
Поля:
  int pid
Свойства:
  int Id
  bool HasExited
  int ExitCode
  bool HasSignaled
  Signum TerminationSignal
  bool HasStopped
  Signum StopSignal
  int ProcessGroupId
  int SessionId
Методы:
  void .ctor(int pid)
  int get_Id()
  bool get_HasExited()
  int GetProcessStatus()
  int get_ExitCode()
  bool get_HasSignaled()
  Signum get_TerminationSignal()
  bool get_HasStopped()
  Signum get_StopSignal()
  int get_ProcessGroupId()
  void set_ProcessGroupId(int value)
  int get_SessionId()
  UnixProcess GetCurrentProcess()
  int GetCurrentProcessId()
  void Kill()
  void Signal(Signum signal)
  void WaitForExit()
--------------------------------------------------
Класс: Mono.Unix.UnixSignal
Наследуется от: WaitHandle
Поля:
  int signum
  IntPtr signal_info
  Mono_Posix_RuntimeIsShuttingDown <>f__am$cache2
Свойства:
  Signum Signum
  RealTimeSignum RealTimeSignum
  bool IsRealTimeSignal
  SignalInfo* Info
  bool IsSet
  int Count
Методы:
  void .ctor(Signum signum)
  void .ctor(RealTimeSignum rtsig)
  Signum get_Signum()
  RealTimeSignum get_RealTimeSignum()
  bool get_IsRealTimeSignal()
  IntPtr install(int signum)
  int uninstall(IntPtr info)
  int WaitAny(IntPtr[] infos, int count, int timeout, Mono_Posix_RuntimeIsShuttingDown shutting_down)
  int GetSIGRTMIN()
  int GetSIGRTMAX()
  void AssertValid()
  SignalInfo* get_Info()
  bool get_IsSet()
  bool Reset()
  int get_Count()
  void set_Count(int value)
  void Dispose(bool disposing)
  bool WaitOne()
  bool WaitOne(TimeSpan timeout, bool exitContext)
  bool WaitOne(int millisecondsTimeout, bool exitContext)
  int WaitAny(UnixSignal[] signals)
  int WaitAny(UnixSignal[] signals, TimeSpan timeout)
  int WaitAny(UnixSignal[] signals, int millisecondsTimeout)
  int <WaitAny>m__0()
--------------------------------------------------
Класс: Mono.Unix.UnixStream
Наследуется от: Stream
Поля:
  int InvalidFileDescriptor
  int StandardInputFileDescriptor
  int StandardOutputFileDescriptor
  int StandardErrorFileDescriptor
  bool canSeek
  bool canRead
  bool canWrite
  bool owner
  int fileDescriptor
  Stat stat
Свойства:
  int Handle
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
  FilePermissions Protection
  FileTypes FileType
  FileAccessPermissions FileAccessPermissions
  FileSpecialAttributes FileSpecialAttributes
  UnixUserInfo OwnerUser
  long OwnerUserId
  UnixGroupInfo OwnerGroup
  long OwnerGroupId
Методы:
  void .ctor(int fileDescriptor)
  void .ctor(int fileDescriptor, bool ownsHandle)
  void System.IDisposable.Dispose()
  void AssertNotDisposed()
  int get_Handle()
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  FilePermissions get_Protection()
  void set_Protection(FilePermissions value)
  FileTypes get_FileType()
  FileAccessPermissions get_FileAccessPermissions()
  void set_FileAccessPermissions(FileAccessPermissions value)
  FileSpecialAttributes get_FileSpecialAttributes()
  void set_FileSpecialAttributes(FileSpecialAttributes value)
  UnixUserInfo get_OwnerUser()
  long get_OwnerUserId()
  UnixGroupInfo get_OwnerGroup()
  long get_OwnerGroupId()
  void RefreshStat()
  void AdviseFileAccessPattern(FileAccessPattern pattern, long offset, long len)
  void AdviseFileAccessPattern(FileAccessPattern pattern)
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  void AssertValidBuffer(Byte[] buffer, int offset, int count)
  int ReadAtOffset(Byte[] buffer, int offset, int count, long fileOffset)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void WriteAtOffset(Byte[] buffer, int offset, int count, long fileOffset)
  void SendTo(UnixStream output)
  void SendTo(UnixStream output, ulong count)
  void SendTo(int out_fd, ulong count)
  void SetOwner(long user, long group)
  void SetOwner(string user, string group)
  void SetOwner(string user)
  long GetConfigurationValue(PathconfName name)
  void Finalize()
  void Close()
--------------------------------------------------
Класс: Mono.Unix.UnixSymbolicLinkInfo
Наследуется от: UnixFileSystemInfo
Поля:
Свойства:
  string Name
  UnixFileSystemInfo Contents
  string ContentsPath
  bool HasContents
Методы:
  void .ctor(string path)
  void .ctor(string path, Stat stat)
  string get_Name()
  UnixFileSystemInfo get_Contents()
  string get_ContentsPath()
  bool get_HasContents()
  UnixFileSystemInfo GetContents()
  void CreateSymbolicLinkTo(string path)
  void CreateSymbolicLinkTo(UnixFileSystemInfo path)
  void Delete()
  void SetOwner(long owner, long group)
  bool GetFileStatus(string path, Stat& stat)
  string ReadLink()
  string TryReadLink()
--------------------------------------------------
Класс: Mono.Unix.UnixUserInfo
Наследуется от: object
Поля:
  Passwd passwd
Свойства:
  string UserName
  string Password
  long UserId
  UnixGroupInfo Group
  long GroupId
  string GroupName
  string RealName
  string HomeDirectory
  string ShellProgram
Методы:
  void .ctor(string user)
  void .ctor(UInt32 user)
  void .ctor(long user)
  void .ctor(Passwd passwd)
  Passwd CopyPasswd(Passwd pw)
  string get_UserName()
  string get_Password()
  long get_UserId()
  UnixGroupInfo get_Group()
  long get_GroupId()
  string get_GroupName()
  string get_RealName()
  string get_HomeDirectory()
  string get_ShellProgram()
  int GetHashCode()
  bool Equals(object obj)
  string ToString()
  UnixUserInfo GetRealUser()
  long GetRealUserId()
  string GetLoginName()
  Passwd ToPasswd()
  UnixUserInfo[] GetLocalUsers()
--------------------------------------------------
Класс: Mono.Unix.Native.CdeclFunction
Наследуется от: object
Поля:
  string library
  string method
  Type returnType
  AssemblyName assemblyName
  AssemblyBuilder assemblyBuilder
  ModuleBuilder moduleBuilder
  Hashtable overloads
Свойства:
Методы:
  void .ctor(string library, string method)
  void .ctor(string library, string method, Type returnType)
  object Invoke(Object[] parameters)
  MethodInfo CreateMethod(Type[] parameterTypes)
  TypeBuilder CreateType(string typeName)
  Type GetMarshalType(Type t)
  string GetTypeName(Type[] parameterTypes)
  Type[] GetParameterTypes(Object[] parameters)
--------------------------------------------------
Класс: Mono.Unix.Native.FileNameMarshaler
Наследуется от: object
Поля:
  FileNameMarshaler Instance
Свойства:
Методы:
  void .ctor()
  void .cctor()
  ICustomMarshaler GetInstance(string s)
  void CleanUpManagedData(object o)
  void CleanUpNativeData(IntPtr pNativeData)
  int GetNativeDataSize()
  IntPtr MarshalManagedToNative(object obj)
  object MarshalNativeToManaged(IntPtr pNativeData)
--------------------------------------------------
Класс: MapAttribute
Наследуется от: Attribute
Поля:
  string nativeType
  string suppressFlags
Свойства:
  string NativeType
  string SuppressFlags
Методы:
  void .ctor()
  void .ctor(string nativeType)
  string get_NativeType()
  string get_SuppressFlags()
  void set_SuppressFlags(string value)
--------------------------------------------------
Класс: Mono.Unix.Native.NativeConvert
Наследуется от: object
Поля:
  string LIB
  DateTime LocalUnixEpoch
  TimeSpan LocalUtcOffset
  String[][] fopen_modes
Свойства:
Методы:
  void .ctor()
  void .cctor()
  int FromRealTimeSignum(int offset, Int32& rval)
  int FromRealTimeSignum(RealTimeSignum sig)
  RealTimeSignum ToRealTimeSignum(int offset)
  FilePermissions FromOctalPermissionString(string value)
  string ToOctalPermissionString(FilePermissions value)
  FilePermissions FromUnixPermissionString(string value)
  FilePermissions GetUnixPermissionDevice(char value)
  FilePermissions GetUnixPermissionGroup(char read, FilePermissions readb, char write, FilePermissions writeb, char exec, FilePermissions execb, char xboth, char xbitonly, FilePermissions xbit)
  string ToUnixPermissionString(FilePermissions value)
  void SetUnixPermissionGroup(FilePermissions value, Char[] access, int index, FilePermissions read, FilePermissions write, FilePermissions exec, char both, char setonly, FilePermissions setxbit)
  char GetSymbolicMode(FilePermissions value, FilePermissions xbit, char both, char setonly, FilePermissions setxbit)
  DateTime ToDateTime(long time)
  long FromDateTime(DateTime time)
  DateTime FromTimeT(long time)
  long ToTimeT(DateTime time)
  OpenFlags ToOpenFlags(FileMode mode, FileAccess access)
  string ToFopenMode(FileAccess access)
  string ToFopenMode(FileMode mode)
  string ToFopenMode(FileMode mode, FileAccess access)
  int FromStatvfs(Statvfs& source, IntPtr destination)
  bool TryCopy(Statvfs& source, IntPtr destination)
  int ToStatvfs(IntPtr source, Statvfs& destination)
  bool TryCopy(IntPtr source, Statvfs& destination)
  void ThrowArgumentException(object value)
  int FromAccessModes(AccessModes value, Int32& rval)
  bool TryFromAccessModes(AccessModes value, Int32& rval)
  int FromAccessModes(AccessModes value)
  int ToAccessModes(int value, AccessModes& rval)
  bool TryToAccessModes(int value, AccessModes& rval)
  AccessModes ToAccessModes(int value)
  int FromConfstrName(ConfstrName value, Int32& rval)
  bool TryFromConfstrName(ConfstrName value, Int32& rval)
  int FromConfstrName(ConfstrName value)
  int ToConfstrName(int value, ConfstrName& rval)
  bool TryToConfstrName(int value, ConfstrName& rval)
  ConfstrName ToConfstrName(int value)
  int FromDirectoryNotifyFlags(DirectoryNotifyFlags value, Int32& rval)
  bool TryFromDirectoryNotifyFlags(DirectoryNotifyFlags value, Int32& rval)
  int FromDirectoryNotifyFlags(DirectoryNotifyFlags value)
  int ToDirectoryNotifyFlags(int value, DirectoryNotifyFlags& rval)
  bool TryToDirectoryNotifyFlags(int value, DirectoryNotifyFlags& rval)
  DirectoryNotifyFlags ToDirectoryNotifyFlags(int value)
  int FromErrno(Errno value, Int32& rval)
  bool TryFromErrno(Errno value, Int32& rval)
  int FromErrno(Errno value)
  int ToErrno(int value, Errno& rval)
  bool TryToErrno(int value, Errno& rval)
  Errno ToErrno(int value)
  int FromFcntlCommand(FcntlCommand value, Int32& rval)
  bool TryFromFcntlCommand(FcntlCommand value, Int32& rval)
  int FromFcntlCommand(FcntlCommand value)
  int ToFcntlCommand(int value, FcntlCommand& rval)
  bool TryToFcntlCommand(int value, FcntlCommand& rval)
  FcntlCommand ToFcntlCommand(int value)
  int FromFilePermissions(FilePermissions value, UInt32& rval)
  bool TryFromFilePermissions(FilePermissions value, UInt32& rval)
  UInt32 FromFilePermissions(FilePermissions value)
  int ToFilePermissions(UInt32 value, FilePermissions& rval)
  bool TryToFilePermissions(UInt32 value, FilePermissions& rval)
  FilePermissions ToFilePermissions(UInt32 value)
  int FromFlock(Flock& source, IntPtr destination)
  bool TryCopy(Flock& source, IntPtr destination)
  int ToFlock(IntPtr source, Flock& destination)
  bool TryCopy(IntPtr source, Flock& destination)
  int FromLockType(LockType value, Int16& rval)
  bool TryFromLockType(LockType value, Int16& rval)
  short FromLockType(LockType value)
  int ToLockType(short value, LockType& rval)
  bool TryToLockType(short value, LockType& rval)
  LockType ToLockType(short value)
  int FromLockfCommand(LockfCommand value, Int32& rval)
  bool TryFromLockfCommand(LockfCommand value, Int32& rval)
  int FromLockfCommand(LockfCommand value)
  int ToLockfCommand(int value, LockfCommand& rval)
  bool TryToLockfCommand(int value, LockfCommand& rval)
  LockfCommand ToLockfCommand(int value)
  int FromMlockallFlags(MlockallFlags value, Int32& rval)
  bool TryFromMlockallFlags(MlockallFlags value, Int32& rval)
  int FromMlockallFlags(MlockallFlags value)
  int ToMlockallFlags(int value, MlockallFlags& rval)
  bool TryToMlockallFlags(int value, MlockallFlags& rval)
  MlockallFlags ToMlockallFlags(int value)
  int FromMmapFlags(MmapFlags value, Int32& rval)
  bool TryFromMmapFlags(MmapFlags value, Int32& rval)
  int FromMmapFlags(MmapFlags value)
  int ToMmapFlags(int value, MmapFlags& rval)
  bool TryToMmapFlags(int value, MmapFlags& rval)
  MmapFlags ToMmapFlags(int value)
  int FromMmapProts(MmapProts value, Int32& rval)
  bool TryFromMmapProts(MmapProts value, Int32& rval)
  int FromMmapProts(MmapProts value)
  int ToMmapProts(int value, MmapProts& rval)
  bool TryToMmapProts(int value, MmapProts& rval)
  MmapProts ToMmapProts(int value)
  int FromMountFlags(MountFlags value, UInt64& rval)
  bool TryFromMountFlags(MountFlags value, UInt64& rval)
  ulong FromMountFlags(MountFlags value)
  int ToMountFlags(ulong value, MountFlags& rval)
  bool TryToMountFlags(ulong value, MountFlags& rval)
  MountFlags ToMountFlags(ulong value)
  int FromMremapFlags(MremapFlags value, UInt64& rval)
  bool TryFromMremapFlags(MremapFlags value, UInt64& rval)
  ulong FromMremapFlags(MremapFlags value)
  int ToMremapFlags(ulong value, MremapFlags& rval)
  bool TryToMremapFlags(ulong value, MremapFlags& rval)
  MremapFlags ToMremapFlags(ulong value)
  int FromMsyncFlags(MsyncFlags value, Int32& rval)
  bool TryFromMsyncFlags(MsyncFlags value, Int32& rval)
  int FromMsyncFlags(MsyncFlags value)
  int ToMsyncFlags(int value, MsyncFlags& rval)
  bool TryToMsyncFlags(int value, MsyncFlags& rval)
  MsyncFlags ToMsyncFlags(int value)
  int FromOpenFlags(OpenFlags value, Int32& rval)
  bool TryFromOpenFlags(OpenFlags value, Int32& rval)
  int FromOpenFlags(OpenFlags value)
  int ToOpenFlags(int value, OpenFlags& rval)
  bool TryToOpenFlags(int value, OpenFlags& rval)
  OpenFlags ToOpenFlags(int value)
  int FromPathconfName(PathconfName value, Int32& rval)
  bool TryFromPathconfName(PathconfName value, Int32& rval)
  int FromPathconfName(PathconfName value)
  int ToPathconfName(int value, PathconfName& rval)
  bool TryToPathconfName(int value, PathconfName& rval)
  PathconfName ToPathconfName(int value)
  int FromPollEvents(PollEvents value, Int16& rval)
  bool TryFromPollEvents(PollEvents value, Int16& rval)
  short FromPollEvents(PollEvents value)
  int ToPollEvents(short value, PollEvents& rval)
  bool TryToPollEvents(short value, PollEvents& rval)
  PollEvents ToPollEvents(short value)
  int FromPollfd(Pollfd& source, IntPtr destination)
  bool TryCopy(Pollfd& source, IntPtr destination)
  int ToPollfd(IntPtr source, Pollfd& destination)
  bool TryCopy(IntPtr source, Pollfd& destination)
  int FromPosixFadviseAdvice(PosixFadviseAdvice value, Int32& rval)
  bool TryFromPosixFadviseAdvice(PosixFadviseAdvice value, Int32& rval)
  int FromPosixFadviseAdvice(PosixFadviseAdvice value)
  int ToPosixFadviseAdvice(int value, PosixFadviseAdvice& rval)
  bool TryToPosixFadviseAdvice(int value, PosixFadviseAdvice& rval)
  PosixFadviseAdvice ToPosixFadviseAdvice(int value)
  int FromPosixMadviseAdvice(PosixMadviseAdvice value, Int32& rval)
  bool TryFromPosixMadviseAdvice(PosixMadviseAdvice value, Int32& rval)
  int FromPosixMadviseAdvice(PosixMadviseAdvice value)
  int ToPosixMadviseAdvice(int value, PosixMadviseAdvice& rval)
  bool TryToPosixMadviseAdvice(int value, PosixMadviseAdvice& rval)
  PosixMadviseAdvice ToPosixMadviseAdvice(int value)
  int FromSeekFlags(SeekFlags value, Int16& rval)
  bool TryFromSeekFlags(SeekFlags value, Int16& rval)
  short FromSeekFlags(SeekFlags value)
  int ToSeekFlags(short value, SeekFlags& rval)
  bool TryToSeekFlags(short value, SeekFlags& rval)
  SeekFlags ToSeekFlags(short value)
  int FromSignum(Signum value, Int32& rval)
  bool TryFromSignum(Signum value, Int32& rval)
  int FromSignum(Signum value)
  int ToSignum(int value, Signum& rval)
  bool TryToSignum(int value, Signum& rval)
  Signum ToSignum(int value)
  int FromStat(Stat& source, IntPtr destination)
  bool TryCopy(Stat& source, IntPtr destination)
  int ToStat(IntPtr source, Stat& destination)
  bool TryCopy(IntPtr source, Stat& destination)
  int FromSysconfName(SysconfName value, Int32& rval)
  bool TryFromSysconfName(SysconfName value, Int32& rval)
  int FromSysconfName(SysconfName value)
  int ToSysconfName(int value, SysconfName& rval)
  bool TryToSysconfName(int value, SysconfName& rval)
  SysconfName ToSysconfName(int value)
  int FromSyslogFacility(SyslogFacility value, Int32& rval)
  bool TryFromSyslogFacility(SyslogFacility value, Int32& rval)
  int FromSyslogFacility(SyslogFacility value)
  int ToSyslogFacility(int value, SyslogFacility& rval)
  bool TryToSyslogFacility(int value, SyslogFacility& rval)
  SyslogFacility ToSyslogFacility(int value)
  int FromSyslogLevel(SyslogLevel value, Int32& rval)
  bool TryFromSyslogLevel(SyslogLevel value, Int32& rval)
  int FromSyslogLevel(SyslogLevel value)
  int ToSyslogLevel(int value, SyslogLevel& rval)
  bool TryToSyslogLevel(int value, SyslogLevel& rval)
  SyslogLevel ToSyslogLevel(int value)
  int FromSyslogOptions(SyslogOptions value, Int32& rval)
  bool TryFromSyslogOptions(SyslogOptions value, Int32& rval)
  int FromSyslogOptions(SyslogOptions value)
  int ToSyslogOptions(int value, SyslogOptions& rval)
  bool TryToSyslogOptions(int value, SyslogOptions& rval)
  SyslogOptions ToSyslogOptions(int value)
  int FromTimespec(Timespec& source, IntPtr destination)
  bool TryCopy(Timespec& source, IntPtr destination)
  int ToTimespec(IntPtr source, Timespec& destination)
  bool TryCopy(IntPtr source, Timespec& destination)
  int FromTimeval(Timeval& source, IntPtr destination)
  bool TryCopy(Timeval& source, IntPtr destination)
  int ToTimeval(IntPtr source, Timeval& destination)
  bool TryCopy(IntPtr source, Timeval& destination)
  int FromTimezone(Timezone& source, IntPtr destination)
  bool TryCopy(Timezone& source, IntPtr destination)
  int ToTimezone(IntPtr source, Timezone& destination)
  bool TryCopy(IntPtr source, Timezone& destination)
  int FromUtimbuf(Utimbuf& source, IntPtr destination)
  bool TryCopy(Utimbuf& source, IntPtr destination)
  int ToUtimbuf(IntPtr source, Utimbuf& destination)
  bool TryCopy(IntPtr source, Utimbuf& destination)
  int FromWaitOptions(WaitOptions value, Int32& rval)
  bool TryFromWaitOptions(WaitOptions value, Int32& rval)
  int FromWaitOptions(WaitOptions value)
  int ToWaitOptions(int value, WaitOptions& rval)
  bool TryToWaitOptions(int value, WaitOptions& rval)
  WaitOptions ToWaitOptions(int value)
  int FromXattrFlags(XattrFlags value, Int32& rval)
  bool TryFromXattrFlags(XattrFlags value, Int32& rval)
  int FromXattrFlags(XattrFlags value)
  int ToXattrFlags(int value, XattrFlags& rval)
  bool TryToXattrFlags(int value, XattrFlags& rval)
  XattrFlags ToXattrFlags(int value)
--------------------------------------------------
Класс: Mono.Unix.Native.RealTimeSignum
Наследуется от: ValueType
Поля:
  int rt_offset
  int MaxOffset
  RealTimeSignum MinValue
  RealTimeSignum MaxValue
Свойства:
  int Offset
Методы:
  void .ctor(int offset)
  void .cctor()
  int get_Offset()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(RealTimeSignum value)
  bool op_Equality(RealTimeSignum lhs, RealTimeSignum rhs)
  bool op_Inequality(RealTimeSignum lhs, RealTimeSignum rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Errno
Наследуется от: Enum
Поля:
  int value__
  Errno EPERM
  Errno ENOENT
  Errno ESRCH
  Errno EINTR
  Errno EIO
  Errno ENXIO
  Errno E2BIG
  Errno ENOEXEC
  Errno EBADF
  Errno ECHILD
  Errno EAGAIN
  Errno ENOMEM
  Errno EACCES
  Errno EFAULT
  Errno ENOTBLK
  Errno EBUSY
  Errno EEXIST
  Errno EXDEV
  Errno ENODEV
  Errno ENOTDIR
  Errno EISDIR
  Errno EINVAL
  Errno ENFILE
  Errno EMFILE
  Errno ENOTTY
  Errno ETXTBSY
  Errno EFBIG
  Errno ENOSPC
  Errno ESPIPE
  Errno EROFS
  Errno EMLINK
  Errno EPIPE
  Errno EDOM
  Errno ERANGE
  Errno EDEADLK
  Errno ENAMETOOLONG
  Errno ENOLCK
  Errno ENOSYS
  Errno ENOTEMPTY
  Errno ELOOP
  Errno EWOULDBLOCK
  Errno ENOMSG
  Errno EIDRM
  Errno ECHRNG
  Errno EL2NSYNC
  Errno EL3HLT
  Errno EL3RST
  Errno ELNRNG
  Errno EUNATCH
  Errno ENOCSI
  Errno EL2HLT
  Errno EBADE
  Errno EBADR
  Errno EXFULL
  Errno ENOANO
  Errno EBADRQC
  Errno EBADSLT
  Errno EDEADLOCK
  Errno EBFONT
  Errno ENOSTR
  Errno ENODATA
  Errno ETIME
  Errno ENOSR
  Errno ENONET
  Errno ENOPKG
  Errno EREMOTE
  Errno ENOLINK
  Errno EADV
  Errno ESRMNT
  Errno ECOMM
  Errno EPROTO
  Errno EMULTIHOP
  Errno EDOTDOT
  Errno EBADMSG
  Errno EOVERFLOW
  Errno ENOTUNIQ
  Errno EBADFD
  Errno EREMCHG
  Errno ELIBACC
  Errno ELIBBAD
  Errno ELIBSCN
  Errno ELIBMAX
  Errno ELIBEXEC
  Errno EILSEQ
  Errno ERESTART
  Errno ESTRPIPE
  Errno EUSERS
  Errno ENOTSOCK
  Errno EDESTADDRREQ
  Errno EMSGSIZE
  Errno EPROTOTYPE
  Errno ENOPROTOOPT
  Errno EPROTONOSUPPORT
  Errno ESOCKTNOSUPPORT
  Errno EOPNOTSUPP
  Errno EPFNOSUPPORT
  Errno EAFNOSUPPORT
  Errno EADDRINUSE
  Errno EADDRNOTAVAIL
  Errno ENETDOWN
  Errno ENETUNREACH
  Errno ENETRESET
  Errno ECONNABORTED
  Errno ECONNRESET
  Errno ENOBUFS
  Errno EISCONN
  Errno ENOTCONN
  Errno ESHUTDOWN
  Errno ETOOMANYREFS
  Errno ETIMEDOUT
  Errno ECONNREFUSED
  Errno EHOSTDOWN
  Errno EHOSTUNREACH
  Errno EALREADY
  Errno EINPROGRESS
  Errno ESTALE
  Errno EUCLEAN
  Errno ENOTNAM
  Errno ENAVAIL
  Errno EISNAM
  Errno EREMOTEIO
  Errno EDQUOT
  Errno ENOMEDIUM
  Errno EMEDIUMTYPE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.FilePosition
Наследуется от: MarshalByRefObject
Поля:
  int FilePositionDumpSize
  HandleRef pos
Свойства:
  HandleRef Handle
Методы:
  void .ctor()
  void .cctor()
  HandleRef get_Handle()
  void Dispose()
  void Cleanup()
  string ToString()
  string GetDump()
  bool Equals(object obj)
  bool Equals(FilePosition value)
  int GetHashCode()
  void Finalize()
  bool op_Equality(FilePosition lhs, FilePosition rhs)
  bool op_Inequality(FilePosition lhs, FilePosition rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.SignalAction
Наследуется от: Enum
Поля:
  int value__
  SignalAction Default
  SignalAction Ignore
  SignalAction Error
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.XPrintfFunctions
Наследуется от: object
Поля:
  XPrintf printf
  XPrintf fprintf
  XPrintf snprintf
  XPrintf syslog
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.Unix.Native.Stdlib
Наследуется от: object
Поля:
  string LIBC
  string MPH
  IntPtr _SIG_DFL
  IntPtr _SIG_ERR
  IntPtr _SIG_IGN
  SignalHandler SIG_DFL
  SignalHandler SIG_ERR
  SignalHandler SIG_IGN
  SignalHandler[] registered_signals
  int _IOFBF
  int _IOLBF
  int _IONBF
  int BUFSIZ
  int EOF
  int FOPEN_MAX
  int FILENAME_MAX
  int L_tmpnam
  IntPtr stderr
  IntPtr stdin
  IntPtr stdout
  int TMP_MAX
  object tmpnam_lock
  int EXIT_FAILURE
  int EXIT_SUCCESS
  int MB_CUR_MAX
  int RAND_MAX
  object strerror_lock
Свойства:
Методы:
  void .ctor()
  void .cctor()
  Errno GetLastError()
  void SetLastError(int error)
  void SetLastError(Errno error)
  void InvokeSignalHandler(int signum, IntPtr handler)
  IntPtr GetDefaultSignal()
  IntPtr GetErrorSignal()
  IntPtr GetIgnoreSignal()
  void _ErrorHandler(int signum)
  void _DefaultHandler(int signum)
  void _IgnoreHandler(int signum)
  IntPtr sys_signal(int signum, SignalHandler handler)
  IntPtr sys_signal(int signum, IntPtr handler)
  SignalHandler signal(Signum signum, SignalHandler handler)
  SignalHandler TranslateHandler(IntPtr handler)
  int SetSignalAction(Signum signal, SignalAction action)
  int SetSignalAction(RealTimeSignum rts, SignalAction action)
  int SetSignalAction(int signum, SignalAction action)
  int sys_raise(int sig)
  int raise(Signum sig)
  int raise(RealTimeSignum rts)
  int GetFullyBuffered()
  int GetLineBuffered()
  int GetNonBuffered()
  int GetBufferSize()
  IntPtr CreateFilePosition()
  int DumpFilePosition(StringBuilder buf, HandleRef handle, int len)
  int GetEOF()
  int GetFilenameMax()
  int GetFopenMax()
  int GetTmpnamLength()
  IntPtr GetStandardInput()
  IntPtr GetStandardOutput()
  IntPtr GetStandardError()
  int GetTmpMax()
  int remove(string filename)
  int rename(string oldpath, string newpath)
  IntPtr tmpfile()
  IntPtr sys_tmpnam(StringBuilder s)
  string tmpnam(StringBuilder s)
  string tmpnam()
  int fclose(IntPtr stream)
  int fflush(IntPtr stream)
  IntPtr fopen(string path, string mode)
  IntPtr freopen(string path, string mode, IntPtr stream)
  int setbuf(IntPtr stream, IntPtr buf)
  int setbuf(IntPtr stream, Byte* buf)
  int setvbuf(IntPtr stream, IntPtr buf, int mode, ulong size)
  int setvbuf(IntPtr stream, Byte* buf, int mode, ulong size)
  int sys_fprintf(IntPtr stream, string format, string message)
  int fprintf(IntPtr stream, string message)
  int fprintf(IntPtr stream, string format, Object[] parameters)
  int sys_printf(string format, string message)
  int printf(string message)
  int printf(string format, Object[] parameters)
  int sys_snprintf(StringBuilder s, ulong n, string format, string message)
  int snprintf(StringBuilder s, ulong n, string message)
  int snprintf(StringBuilder s, string message)
  int snprintf(StringBuilder s, ulong n, string format, Object[] parameters)
  int snprintf(StringBuilder s, string format, Object[] parameters)
  int fgetc(IntPtr stream)
  IntPtr sys_fgets(StringBuilder sb, int size, IntPtr stream)
  StringBuilder fgets(StringBuilder sb, int size, IntPtr stream)
  StringBuilder fgets(StringBuilder sb, IntPtr stream)
  int fputc(int c, IntPtr stream)
  int fputs(string s, IntPtr stream)
  int getc(IntPtr stream)
  int getchar()
  int putc(int c, IntPtr stream)
  int putchar(int c)
  int puts(string s)
  int ungetc(int c, IntPtr stream)
  ulong fread(IntPtr ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong fread(Void* ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong sys_fread(Byte[] ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong fread(Byte[] ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong fread(Byte[] ptr, IntPtr stream)
  ulong fwrite(IntPtr ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong fwrite(Void* ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong sys_fwrite(Byte[] ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong fwrite(Byte[] ptr, ulong size, ulong nmemb, IntPtr stream)
  ulong fwrite(Byte[] ptr, IntPtr stream)
  int sys_fgetpos(IntPtr stream, HandleRef pos)
  int fgetpos(IntPtr stream, FilePosition pos)
  int sys_fseek(IntPtr stream, long offset, int origin)
  int fseek(IntPtr stream, long offset, SeekFlags origin)
  int sys_fsetpos(IntPtr stream, HandleRef pos)
  int fsetpos(IntPtr stream, FilePosition pos)
  long ftell(IntPtr stream)
  int rewind(IntPtr stream)
  int clearerr(IntPtr stream)
  int feof(IntPtr stream)
  int ferror(IntPtr stream)
  int perror(string s, int err)
  int perror(string s)
  int GetExitFailure()
  int GetExitSuccess()
  int GetMbCurMax()
  int GetRandMax()
  int rand()
  void srand(UInt32 seed)
  IntPtr calloc(ulong nmemb, ulong size)
  void free(IntPtr ptr)
  IntPtr malloc(ulong size)
  IntPtr realloc(IntPtr ptr, ulong size)
  void abort()
  void exit(int status)
  void _Exit(int status)
  IntPtr sys_getenv(string name)
  string getenv(string name)
  int system(string string)
  IntPtr sys_strerror(int errnum)
  string strerror(Errno errnum)
  ulong strlen(IntPtr s)
--------------------------------------------------
Класс: Mono.Unix.Native.SyslogOptions
Наследуется от: Enum
Поля:
  int value__
  SyslogOptions LOG_PID
  SyslogOptions LOG_CONS
  SyslogOptions LOG_ODELAY
  SyslogOptions LOG_NDELAY
  SyslogOptions LOG_NOWAIT
  SyslogOptions LOG_PERROR
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.SyslogFacility
Наследуется от: Enum
Поля:
  int value__
  SyslogFacility LOG_KERN
  SyslogFacility LOG_USER
  SyslogFacility LOG_MAIL
  SyslogFacility LOG_DAEMON
  SyslogFacility LOG_AUTH
  SyslogFacility LOG_SYSLOG
  SyslogFacility LOG_LPR
  SyslogFacility LOG_NEWS
  SyslogFacility LOG_UUCP
  SyslogFacility LOG_CRON
  SyslogFacility LOG_AUTHPRIV
  SyslogFacility LOG_FTP
  SyslogFacility LOG_LOCAL0
  SyslogFacility LOG_LOCAL1
  SyslogFacility LOG_LOCAL2
  SyslogFacility LOG_LOCAL3
  SyslogFacility LOG_LOCAL4
  SyslogFacility LOG_LOCAL5
  SyslogFacility LOG_LOCAL6
  SyslogFacility LOG_LOCAL7
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.SyslogLevel
Наследуется от: Enum
Поля:
  int value__
  SyslogLevel LOG_EMERG
  SyslogLevel LOG_ALERT
  SyslogLevel LOG_CRIT
  SyslogLevel LOG_ERR
  SyslogLevel LOG_WARNING
  SyslogLevel LOG_NOTICE
  SyslogLevel LOG_INFO
  SyslogLevel LOG_DEBUG
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.OpenFlags
Наследуется от: Enum
Поля:
  int value__
  OpenFlags O_RDONLY
  OpenFlags O_WRONLY
  OpenFlags O_RDWR
  OpenFlags O_CREAT
  OpenFlags O_EXCL
  OpenFlags O_NOCTTY
  OpenFlags O_TRUNC
  OpenFlags O_APPEND
  OpenFlags O_NONBLOCK
  OpenFlags O_SYNC
  OpenFlags O_NOFOLLOW
  OpenFlags O_DIRECTORY
  OpenFlags O_DIRECT
  OpenFlags O_ASYNC
  OpenFlags O_LARGEFILE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.FilePermissions
Наследуется от: Enum
Поля:
  UInt32 value__
  FilePermissions S_ISUID
  FilePermissions S_ISGID
  FilePermissions S_ISVTX
  FilePermissions S_IRUSR
  FilePermissions S_IWUSR
  FilePermissions S_IXUSR
  FilePermissions S_IRGRP
  FilePermissions S_IWGRP
  FilePermissions S_IXGRP
  FilePermissions S_IROTH
  FilePermissions S_IWOTH
  FilePermissions S_IXOTH
  FilePermissions S_IRWXG
  FilePermissions S_IRWXU
  FilePermissions S_IRWXO
  FilePermissions ACCESSPERMS
  FilePermissions ALLPERMS
  FilePermissions DEFFILEMODE
  FilePermissions S_IFMT
  FilePermissions S_IFDIR
  FilePermissions S_IFCHR
  FilePermissions S_IFBLK
  FilePermissions S_IFREG
  FilePermissions S_IFIFO
  FilePermissions S_IFLNK
  FilePermissions S_IFSOCK
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.FcntlCommand
Наследуется от: Enum
Поля:
  int value__
  FcntlCommand F_DUPFD
  FcntlCommand F_GETFD
  FcntlCommand F_SETFD
  FcntlCommand F_GETFL
  FcntlCommand F_SETFL
  FcntlCommand F_GETLK
  FcntlCommand F_SETLK
  FcntlCommand F_SETLKW
  FcntlCommand F_SETOWN
  FcntlCommand F_GETOWN
  FcntlCommand F_SETSIG
  FcntlCommand F_GETSIG
  FcntlCommand F_SETLEASE
  FcntlCommand F_GETLEASE
  FcntlCommand F_NOTIFY
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.LockType
Наследуется от: Enum
Поля:
  short value__
  LockType F_RDLCK
  LockType F_WRLCK
  LockType F_UNLCK
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.SeekFlags
Наследуется от: Enum
Поля:
  short value__
  SeekFlags SEEK_SET
  SeekFlags SEEK_CUR
  SeekFlags SEEK_END
  SeekFlags L_SET
  SeekFlags L_INCR
  SeekFlags L_XTND
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.DirectoryNotifyFlags
Наследуется от: Enum
Поля:
  int value__
  DirectoryNotifyFlags DN_ACCESS
  DirectoryNotifyFlags DN_MODIFY
  DirectoryNotifyFlags DN_CREATE
  DirectoryNotifyFlags DN_DELETE
  DirectoryNotifyFlags DN_RENAME
  DirectoryNotifyFlags DN_ATTRIB
  DirectoryNotifyFlags DN_MULTISHOT
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.PosixFadviseAdvice
Наследуется от: Enum
Поля:
  int value__
  PosixFadviseAdvice POSIX_FADV_NORMAL
  PosixFadviseAdvice POSIX_FADV_RANDOM
  PosixFadviseAdvice POSIX_FADV_SEQUENTIAL
  PosixFadviseAdvice POSIX_FADV_WILLNEED
  PosixFadviseAdvice POSIX_FADV_DONTNEED
  PosixFadviseAdvice POSIX_FADV_NOREUSE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.PosixMadviseAdvice
Наследуется от: Enum
Поля:
  int value__
  PosixMadviseAdvice POSIX_MADV_NORMAL
  PosixMadviseAdvice POSIX_MADV_RANDOM
  PosixMadviseAdvice POSIX_MADV_SEQUENTIAL
  PosixMadviseAdvice POSIX_MADV_WILLNEED
  PosixMadviseAdvice POSIX_MADV_DONTNEED
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.Signum
Наследуется от: Enum
Поля:
  int value__
  Signum SIGHUP
  Signum SIGINT
  Signum SIGQUIT
  Signum SIGILL
  Signum SIGTRAP
  Signum SIGABRT
  Signum SIGIOT
  Signum SIGBUS
  Signum SIGFPE
  Signum SIGKILL
  Signum SIGUSR1
  Signum SIGSEGV
  Signum SIGUSR2
  Signum SIGPIPE
  Signum SIGALRM
  Signum SIGTERM
  Signum SIGSTKFLT
  Signum SIGCLD
  Signum SIGCHLD
  Signum SIGCONT
  Signum SIGSTOP
  Signum SIGTSTP
  Signum SIGTTIN
  Signum SIGTTOU
  Signum SIGURG
  Signum SIGXCPU
  Signum SIGXFSZ
  Signum SIGVTALRM
  Signum SIGPROF
  Signum SIGWINCH
  Signum SIGPOLL
  Signum SIGIO
  Signum SIGPWR
  Signum SIGSYS
  Signum SIGUNUSED
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.WaitOptions
Наследуется от: Enum
Поля:
  int value__
  WaitOptions WNOHANG
  WaitOptions WUNTRACED
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.AccessModes
Наследуется от: Enum
Поля:
  int value__
  AccessModes R_OK
  AccessModes W_OK
  AccessModes X_OK
  AccessModes F_OK
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.PathconfName
Наследуется от: Enum
Поля:
  int value__
  PathconfName _PC_LINK_MAX
  PathconfName _PC_MAX_CANON
  PathconfName _PC_MAX_INPUT
  PathconfName _PC_NAME_MAX
  PathconfName _PC_PATH_MAX
  PathconfName _PC_PIPE_BUF
  PathconfName _PC_CHOWN_RESTRICTED
  PathconfName _PC_NO_TRUNC
  PathconfName _PC_VDISABLE
  PathconfName _PC_SYNC_IO
  PathconfName _PC_ASYNC_IO
  PathconfName _PC_PRIO_IO
  PathconfName _PC_SOCK_MAXBUF
  PathconfName _PC_FILESIZEBITS
  PathconfName _PC_REC_INCR_XFER_SIZE
  PathconfName _PC_REC_MAX_XFER_SIZE
  PathconfName _PC_REC_MIN_XFER_SIZE
  PathconfName _PC_REC_XFER_ALIGN
  PathconfName _PC_ALLOC_SIZE_MIN
  PathconfName _PC_SYMLINK_MAX
  PathconfName _PC_2_SYMLINKS
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.SysconfName
Наследуется от: Enum
Поля:
  int value__
  SysconfName _SC_ARG_MAX
  SysconfName _SC_CHILD_MAX
  SysconfName _SC_CLK_TCK
  SysconfName _SC_NGROUPS_MAX
  SysconfName _SC_OPEN_MAX
  SysconfName _SC_STREAM_MAX
  SysconfName _SC_TZNAME_MAX
  SysconfName _SC_JOB_CONTROL
  SysconfName _SC_SAVED_IDS
  SysconfName _SC_REALTIME_SIGNALS
  SysconfName _SC_PRIORITY_SCHEDULING
  SysconfName _SC_TIMERS
  SysconfName _SC_ASYNCHRONOUS_IO
  SysconfName _SC_PRIORITIZED_IO
  SysconfName _SC_SYNCHRONIZED_IO
  SysconfName _SC_FSYNC
  SysconfName _SC_MAPPED_FILES
  SysconfName _SC_MEMLOCK
  SysconfName _SC_MEMLOCK_RANGE
  SysconfName _SC_MEMORY_PROTECTION
  SysconfName _SC_MESSAGE_PASSING
  SysconfName _SC_SEMAPHORES
  SysconfName _SC_SHARED_MEMORY_OBJECTS
  SysconfName _SC_AIO_LISTIO_MAX
  SysconfName _SC_AIO_MAX
  SysconfName _SC_AIO_PRIO_DELTA_MAX
  SysconfName _SC_DELAYTIMER_MAX
  SysconfName _SC_MQ_OPEN_MAX
  SysconfName _SC_MQ_PRIO_MAX
  SysconfName _SC_VERSION
  SysconfName _SC_PAGESIZE
  SysconfName _SC_RTSIG_MAX
  SysconfName _SC_SEM_NSEMS_MAX
  SysconfName _SC_SEM_VALUE_MAX
  SysconfName _SC_SIGQUEUE_MAX
  SysconfName _SC_TIMER_MAX
  SysconfName _SC_BC_BASE_MAX
  SysconfName _SC_BC_DIM_MAX
  SysconfName _SC_BC_SCALE_MAX
  SysconfName _SC_BC_STRING_MAX
  SysconfName _SC_COLL_WEIGHTS_MAX
  SysconfName _SC_EQUIV_CLASS_MAX
  SysconfName _SC_EXPR_NEST_MAX
  SysconfName _SC_LINE_MAX
  SysconfName _SC_RE_DUP_MAX
  SysconfName _SC_CHARCLASS_NAME_MAX
  SysconfName _SC_2_VERSION
  SysconfName _SC_2_C_BIND
  SysconfName _SC_2_C_DEV
  SysconfName _SC_2_FORT_DEV
  SysconfName _SC_2_FORT_RUN
  SysconfName _SC_2_SW_DEV
  SysconfName _SC_2_LOCALEDEF
  SysconfName _SC_PII
  SysconfName _SC_PII_XTI
  SysconfName _SC_PII_SOCKET
  SysconfName _SC_PII_INTERNET
  SysconfName _SC_PII_OSI
  SysconfName _SC_POLL
  SysconfName _SC_SELECT
  SysconfName _SC_UIO_MAXIOV
  SysconfName _SC_IOV_MAX
  SysconfName _SC_PII_INTERNET_STREAM
  SysconfName _SC_PII_INTERNET_DGRAM
  SysconfName _SC_PII_OSI_COTS
  SysconfName _SC_PII_OSI_CLTS
  SysconfName _SC_PII_OSI_M
  SysconfName _SC_T_IOV_MAX
  SysconfName _SC_THREADS
  SysconfName _SC_THREAD_SAFE_FUNCTIONS
  SysconfName _SC_GETGR_R_SIZE_MAX
  SysconfName _SC_GETPW_R_SIZE_MAX
  SysconfName _SC_LOGIN_NAME_MAX
  SysconfName _SC_TTY_NAME_MAX
  SysconfName _SC_THREAD_DESTRUCTOR_ITERATIONS
  SysconfName _SC_THREAD_KEYS_MAX
  SysconfName _SC_THREAD_STACK_MIN
  SysconfName _SC_THREAD_THREADS_MAX
  SysconfName _SC_THREAD_ATTR_STACKADDR
  SysconfName _SC_THREAD_ATTR_STACKSIZE
  SysconfName _SC_THREAD_PRIORITY_SCHEDULING
  SysconfName _SC_THREAD_PRIO_INHERIT
  SysconfName _SC_THREAD_PRIO_PROTECT
  SysconfName _SC_THREAD_PROCESS_SHARED
  SysconfName _SC_NPROCESSORS_CONF
  SysconfName _SC_NPROCESSORS_ONLN
  SysconfName _SC_PHYS_PAGES
  SysconfName _SC_AVPHYS_PAGES
  SysconfName _SC_ATEXIT_MAX
  SysconfName _SC_PASS_MAX
  SysconfName _SC_XOPEN_VERSION
  SysconfName _SC_XOPEN_XCU_VERSION
  SysconfName _SC_XOPEN_UNIX
  SysconfName _SC_XOPEN_CRYPT
  SysconfName _SC_XOPEN_ENH_I18N
  SysconfName _SC_XOPEN_SHM
  SysconfName _SC_2_CHAR_TERM
  SysconfName _SC_2_C_VERSION
  SysconfName _SC_2_UPE
  SysconfName _SC_XOPEN_XPG2
  SysconfName _SC_XOPEN_XPG3
  SysconfName _SC_XOPEN_XPG4
  SysconfName _SC_CHAR_BIT
  SysconfName _SC_CHAR_MAX
  SysconfName _SC_CHAR_MIN
  SysconfName _SC_INT_MAX
  SysconfName _SC_INT_MIN
  SysconfName _SC_LONG_BIT
  SysconfName _SC_WORD_BIT
  SysconfName _SC_MB_LEN_MAX
  SysconfName _SC_NZERO
  SysconfName _SC_SSIZE_MAX
  SysconfName _SC_SCHAR_MAX
  SysconfName _SC_SCHAR_MIN
  SysconfName _SC_SHRT_MAX
  SysconfName _SC_SHRT_MIN
  SysconfName _SC_UCHAR_MAX
  SysconfName _SC_UINT_MAX
  SysconfName _SC_ULONG_MAX
  SysconfName _SC_USHRT_MAX
  SysconfName _SC_NL_ARGMAX
  SysconfName _SC_NL_LANGMAX
  SysconfName _SC_NL_MSGMAX
  SysconfName _SC_NL_NMAX
  SysconfName _SC_NL_SETMAX
  SysconfName _SC_NL_TEXTMAX
  SysconfName _SC_XBS5_ILP32_OFF32
  SysconfName _SC_XBS5_ILP32_OFFBIG
  SysconfName _SC_XBS5_LP64_OFF64
  SysconfName _SC_XBS5_LPBIG_OFFBIG
  SysconfName _SC_XOPEN_LEGACY
  SysconfName _SC_XOPEN_REALTIME
  SysconfName _SC_XOPEN_REALTIME_THREADS
  SysconfName _SC_ADVISORY_INFO
  SysconfName _SC_BARRIERS
  SysconfName _SC_BASE
  SysconfName _SC_C_LANG_SUPPORT
  SysconfName _SC_C_LANG_SUPPORT_R
  SysconfName _SC_CLOCK_SELECTION
  SysconfName _SC_CPUTIME
  SysconfName _SC_THREAD_CPUTIME
  SysconfName _SC_DEVICE_IO
  SysconfName _SC_DEVICE_SPECIFIC
  SysconfName _SC_DEVICE_SPECIFIC_R
  SysconfName _SC_FD_MGMT
  SysconfName _SC_FIFO
  SysconfName _SC_PIPE
  SysconfName _SC_FILE_ATTRIBUTES
  SysconfName _SC_FILE_LOCKING
  SysconfName _SC_FILE_SYSTEM
  SysconfName _SC_MONOTONIC_CLOCK
  SysconfName _SC_MULTI_PROCESS
  SysconfName _SC_SINGLE_PROCESS
  SysconfName _SC_NETWORKING
  SysconfName _SC_READER_WRITER_LOCKS
  SysconfName _SC_SPIN_LOCKS
  SysconfName _SC_REGEXP
  SysconfName _SC_REGEX_VERSION
  SysconfName _SC_SHELL
  SysconfName _SC_SIGNALS
  SysconfName _SC_SPAWN
  SysconfName _SC_SPORADIC_SERVER
  SysconfName _SC_THREAD_SPORADIC_SERVER
  SysconfName _SC_SYSTEM_DATABASE
  SysconfName _SC_SYSTEM_DATABASE_R
  SysconfName _SC_TIMEOUTS
  SysconfName _SC_TYPED_MEMORY_OBJECTS
  SysconfName _SC_USER_GROUPS
  SysconfName _SC_USER_GROUPS_R
  SysconfName _SC_2_PBS
  SysconfName _SC_2_PBS_ACCOUNTING
  SysconfName _SC_2_PBS_LOCATE
  SysconfName _SC_2_PBS_MESSAGE
  SysconfName _SC_2_PBS_TRACK
  SysconfName _SC_SYMLOOP_MAX
  SysconfName _SC_STREAMS
  SysconfName _SC_2_PBS_CHECKPOINT
  SysconfName _SC_V6_ILP32_OFF32
  SysconfName _SC_V6_ILP32_OFFBIG
  SysconfName _SC_V6_LP64_OFF64
  SysconfName _SC_V6_LPBIG_OFFBIG
  SysconfName _SC_HOST_NAME_MAX
  SysconfName _SC_TRACE
  SysconfName _SC_TRACE_EVENT_FILTER
  SysconfName _SC_TRACE_INHERIT
  SysconfName _SC_TRACE_LOG
  SysconfName _SC_LEVEL1_ICACHE_SIZE
  SysconfName _SC_LEVEL1_ICACHE_ASSOC
  SysconfName _SC_LEVEL1_ICACHE_LINESIZE
  SysconfName _SC_LEVEL1_DCACHE_SIZE
  SysconfName _SC_LEVEL1_DCACHE_ASSOC
  SysconfName _SC_LEVEL1_DCACHE_LINESIZE
  SysconfName _SC_LEVEL2_CACHE_SIZE
  SysconfName _SC_LEVEL2_CACHE_ASSOC
  SysconfName _SC_LEVEL2_CACHE_LINESIZE
  SysconfName _SC_LEVEL3_CACHE_SIZE
  SysconfName _SC_LEVEL3_CACHE_ASSOC
  SysconfName _SC_LEVEL3_CACHE_LINESIZE
  SysconfName _SC_LEVEL4_CACHE_SIZE
  SysconfName _SC_LEVEL4_CACHE_ASSOC
  SysconfName _SC_LEVEL4_CACHE_LINESIZE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.ConfstrName
Наследуется от: Enum
Поля:
  int value__
  ConfstrName _CS_PATH
  ConfstrName _CS_V6_WIDTH_RESTRICTED_ENVS
  ConfstrName _CS_GNU_LIBC_VERSION
  ConfstrName _CS_GNU_LIBPTHREAD_VERSION
  ConfstrName _CS_LFS_CFLAGS
  ConfstrName _CS_LFS_LDFLAGS
  ConfstrName _CS_LFS_LIBS
  ConfstrName _CS_LFS_LINTFLAGS
  ConfstrName _CS_LFS64_CFLAGS
  ConfstrName _CS_LFS64_LDFLAGS
  ConfstrName _CS_LFS64_LIBS
  ConfstrName _CS_LFS64_LINTFLAGS
  ConfstrName _CS_XBS5_ILP32_OFF32_CFLAGS
  ConfstrName _CS_XBS5_ILP32_OFF32_LDFLAGS
  ConfstrName _CS_XBS5_ILP32_OFF32_LIBS
  ConfstrName _CS_XBS5_ILP32_OFF32_LINTFLAGS
  ConfstrName _CS_XBS5_ILP32_OFFBIG_CFLAGS
  ConfstrName _CS_XBS5_ILP32_OFFBIG_LDFLAGS
  ConfstrName _CS_XBS5_ILP32_OFFBIG_LIBS
  ConfstrName _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
  ConfstrName _CS_XBS5_LP64_OFF64_CFLAGS
  ConfstrName _CS_XBS5_LP64_OFF64_LDFLAGS
  ConfstrName _CS_XBS5_LP64_OFF64_LIBS
  ConfstrName _CS_XBS5_LP64_OFF64_LINTFLAGS
  ConfstrName _CS_XBS5_LPBIG_OFFBIG_CFLAGS
  ConfstrName _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
  ConfstrName _CS_XBS5_LPBIG_OFFBIG_LIBS
  ConfstrName _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
  ConfstrName _CS_POSIX_V6_ILP32_OFF32_CFLAGS
  ConfstrName _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
  ConfstrName _CS_POSIX_V6_ILP32_OFF32_LIBS
  ConfstrName _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
  ConfstrName _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
  ConfstrName _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
  ConfstrName _CS_POSIX_V6_ILP32_OFFBIG_LIBS
  ConfstrName _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
  ConfstrName _CS_POSIX_V6_LP64_OFF64_CFLAGS
  ConfstrName _CS_POSIX_V6_LP64_OFF64_LDFLAGS
  ConfstrName _CS_POSIX_V6_LP64_OFF64_LIBS
  ConfstrName _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
  ConfstrName _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
  ConfstrName _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
  ConfstrName _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
  ConfstrName _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.LockfCommand
Наследуется от: Enum
Поля:
  int value__
  LockfCommand F_ULOCK
  LockfCommand F_LOCK
  LockfCommand F_TLOCK
  LockfCommand F_TEST
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.PollEvents
Наследуется от: Enum
Поля:
  short value__
  PollEvents POLLIN
  PollEvents POLLPRI
  PollEvents POLLOUT
  PollEvents POLLERR
  PollEvents POLLHUP
  PollEvents POLLNVAL
  PollEvents POLLRDNORM
  PollEvents POLLRDBAND
  PollEvents POLLWRNORM
  PollEvents POLLWRBAND
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.XattrFlags
Наследуется от: Enum
Поля:
  int value__
  XattrFlags XATTR_AUTO
  XattrFlags XATTR_CREATE
  XattrFlags XATTR_REPLACE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.MountFlags
Наследуется от: Enum
Поля:
  ulong value__
  MountFlags ST_RDONLY
  MountFlags ST_NOSUID
  MountFlags ST_NODEV
  MountFlags ST_NOEXEC
  MountFlags ST_SYNCHRONOUS
  MountFlags ST_REMOUNT
  MountFlags ST_MANDLOCK
  MountFlags ST_WRITE
  MountFlags ST_APPEND
  MountFlags ST_IMMUTABLE
  MountFlags ST_NOATIME
  MountFlags ST_NODIRATIME
  MountFlags ST_BIND
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.MmapFlags
Наследуется от: Enum
Поля:
  int value__
  MmapFlags MAP_SHARED
  MmapFlags MAP_PRIVATE
  MmapFlags MAP_TYPE
  MmapFlags MAP_FIXED
  MmapFlags MAP_FILE
  MmapFlags MAP_ANONYMOUS
  MmapFlags MAP_ANON
  MmapFlags MAP_GROWSDOWN
  MmapFlags MAP_DENYWRITE
  MmapFlags MAP_EXECUTABLE
  MmapFlags MAP_LOCKED
  MmapFlags MAP_NORESERVE
  MmapFlags MAP_POPULATE
  MmapFlags MAP_NONBLOCK
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.MmapProts
Наследуется от: Enum
Поля:
  int value__
  MmapProts PROT_READ
  MmapProts PROT_WRITE
  MmapProts PROT_EXEC
  MmapProts PROT_NONE
  MmapProts PROT_GROWSDOWN
  MmapProts PROT_GROWSUP
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.MsyncFlags
Наследуется от: Enum
Поля:
  int value__
  MsyncFlags MS_ASYNC
  MsyncFlags MS_SYNC
  MsyncFlags MS_INVALIDATE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.MlockallFlags
Наследуется от: Enum
Поля:
  int value__
  MlockallFlags MCL_CURRENT
  MlockallFlags MCL_FUTURE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.MremapFlags
Наследуется от: Enum
Поля:
  ulong value__
  MremapFlags MREMAP_MAYMOVE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Unix.Native.Flock
Наследуется от: ValueType
Поля:
  LockType l_type
  SeekFlags l_whence
  long l_start
  long l_len
  int l_pid
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Flock value)
  bool op_Equality(Flock lhs, Flock rhs)
  bool op_Inequality(Flock lhs, Flock rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Pollfd
Наследуется от: ValueType
Поля:
  int fd
  PollEvents events
  PollEvents revents
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Pollfd value)
  bool op_Equality(Pollfd lhs, Pollfd rhs)
  bool op_Inequality(Pollfd lhs, Pollfd rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Stat
Наследуется от: ValueType
Поля:
  ulong st_dev
  ulong st_ino
  FilePermissions st_mode
  UInt32 _padding_
  ulong st_nlink
  UInt32 st_uid
  UInt32 st_gid
  ulong st_rdev
  long st_size
  long st_blksize
  long st_blocks
  long st_atime
  long st_mtime
  long st_ctime
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Stat value)
  bool op_Equality(Stat lhs, Stat rhs)
  bool op_Inequality(Stat lhs, Stat rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Statvfs
Наследуется от: ValueType
Поля:
  ulong f_bsize
  ulong f_frsize
  ulong f_blocks
  ulong f_bfree
  ulong f_bavail
  ulong f_files
  ulong f_ffree
  ulong f_favail
  ulong f_fsid
  MountFlags f_flag
  ulong f_namemax
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Statvfs value)
  bool op_Equality(Statvfs lhs, Statvfs rhs)
  bool op_Inequality(Statvfs lhs, Statvfs rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Timeval
Наследуется от: ValueType
Поля:
  long tv_sec
  long tv_usec
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Timeval value)
  bool op_Equality(Timeval lhs, Timeval rhs)
  bool op_Inequality(Timeval lhs, Timeval rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Timezone
Наследуется от: ValueType
Поля:
  int tz_minuteswest
  int tz_dsttime
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Timezone value)
  bool op_Equality(Timezone lhs, Timezone rhs)
  bool op_Inequality(Timezone lhs, Timezone rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Utimbuf
Наследуется от: ValueType
Поля:
  long actime
  long modtime
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Utimbuf value)
  bool op_Equality(Utimbuf lhs, Utimbuf rhs)
  bool op_Inequality(Utimbuf lhs, Utimbuf rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Timespec
Наследуется от: ValueType
Поля:
  long tv_sec
  long tv_nsec
Свойства:
Методы:
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Timespec value)
  bool op_Equality(Timespec lhs, Timespec rhs)
  bool op_Inequality(Timespec lhs, Timespec rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Dirent
Наследуется от: object
Поля:
  ulong d_ino
  long d_off
  ushort d_reclen
  byte d_type
  string d_name
Свойства:
Методы:
  void .ctor()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Dirent value)
  string ToString()
  bool op_Equality(Dirent lhs, Dirent rhs)
  bool op_Inequality(Dirent lhs, Dirent rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Fstab
Наследуется от: object
Поля:
  string fs_spec
  string fs_file
  string fs_vfstype
  string fs_mntops
  string fs_type
  int fs_freq
  int fs_passno
Свойства:
Методы:
  void .ctor()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Fstab value)
  string ToString()
  bool op_Equality(Fstab lhs, Fstab rhs)
  bool op_Inequality(Fstab lhs, Fstab rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Group
Наследуется от: object
Поля:
  string gr_name
  string gr_passwd
  UInt32 gr_gid
  String[] gr_mem
Свойства:
Методы:
  void .ctor()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Group value)
  string ToString()
  void GetMembers(StringBuilder sb, String[] members)
  bool op_Equality(Group lhs, Group rhs)
  bool op_Inequality(Group lhs, Group rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Passwd
Наследуется от: object
Поля:
  string pw_name
  string pw_passwd
  UInt32 pw_uid
  UInt32 pw_gid
  string pw_gecos
  string pw_dir
  string pw_shell
Свойства:
Методы:
  void .ctor()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Passwd value)
  string ToString()
  bool op_Equality(Passwd lhs, Passwd rhs)
  bool op_Inequality(Passwd lhs, Passwd rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Utsname
Наследуется от: object
Поля:
  string sysname
  string nodename
  string release
  string version
  string machine
  string domainname
Свойства:
Методы:
  void .ctor()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(Utsname value)
  string ToString()
  bool op_Equality(Utsname lhs, Utsname rhs)
  bool op_Inequality(Utsname lhs, Utsname rhs)
--------------------------------------------------
Класс: Mono.Unix.Native.Syscall
Наследуется от: Stdlib
Поля:
  string LIBC
  object readdir_lock
  object fstab_lock
  object grp_lock
  object pwd_lock
  object signal_lock
  int L_ctermid
  int L_cuserid
  object getlogin_lock
  IntPtr MAP_FAILED
  object tty_lock
  object usershell_lock
Свойства:
Методы:
  void .ctor()
  void .cctor()
  int setxattr(string path, string name, Byte[] value, ulong size, XattrFlags flags)
  int setxattr(string path, string name, Byte[] value, ulong size)
  int setxattr(string path, string name, Byte[] value, XattrFlags flags)
  int setxattr(string path, string name, Byte[] value)
  int lsetxattr(string path, string name, Byte[] value, ulong size, XattrFlags flags)
  int lsetxattr(string path, string name, Byte[] value, ulong size)
  int lsetxattr(string path, string name, Byte[] value, XattrFlags flags)
  int lsetxattr(string path, string name, Byte[] value)
  int fsetxattr(int fd, string name, Byte[] value, ulong size, XattrFlags flags)
  int fsetxattr(int fd, string name, Byte[] value, ulong size)
  int fsetxattr(int fd, string name, Byte[] value, XattrFlags flags)
  int fsetxattr(int fd, string name, Byte[] value)
  long getxattr(string path, string name, Byte[] value, ulong size)
  long getxattr(string path, string name, Byte[] value)
  long getxattr(string path, string name, Byte[]& value)
  long lgetxattr(string path, string name, Byte[] value, ulong size)
  long lgetxattr(string path, string name, Byte[] value)
  long lgetxattr(string path, string name, Byte[]& value)
  long fgetxattr(int fd, string name, Byte[] value, ulong size)
  long fgetxattr(int fd, string name, Byte[] value)
  long fgetxattr(int fd, string name, Byte[]& value)
  long listxattr(string path, Byte[] list, ulong size)
  long listxattr(string path, Encoding encoding, String[]& values)
  long listxattr(string path, String[]& values)
  void GetValues(Byte[] list, Encoding encoding, String[]& values)
  long llistxattr(string path, Byte[] list, ulong size)
  long llistxattr(string path, Encoding encoding, String[]& values)
  long llistxattr(string path, String[]& values)
  long flistxattr(int fd, Byte[] list, ulong size)
  long flistxattr(int fd, Encoding encoding, String[]& values)
  long flistxattr(int fd, String[]& values)
  int removexattr(string path, string name)
  int lremovexattr(string path, string name)
  int fremovexattr(int fd, string name)
  IntPtr opendir(string name)
  int closedir(IntPtr dir)
  int seekdir(IntPtr dir, long offset)
  long telldir(IntPtr dir)
  int rewinddir(IntPtr dir)
  void CopyDirent(Dirent to, _Dirent& from)
  int sys_readdir(IntPtr dir, _Dirent& dentry)
  Dirent readdir(IntPtr dir)
  int sys_readdir_r(IntPtr dirp, _Dirent& entry, IntPtr& result)
  int readdir_r(IntPtr dirp, Dirent entry, IntPtr& result)
  int dirfd(IntPtr dir)
  int fcntl(int fd, FcntlCommand cmd)
  int fcntl(int fd, FcntlCommand cmd, long arg)
  int fcntl(int fd, FcntlCommand cmd, DirectoryNotifyFlags arg)
  int fcntl(int fd, FcntlCommand cmd, Flock& lock)
  int open(string pathname, OpenFlags flags)
  int open(string pathname, OpenFlags flags, FilePermissions mode)
  int creat(string pathname, FilePermissions mode)
  int posix_fadvise(int fd, long offset, long len, PosixFadviseAdvice advice)
  int posix_fallocate(int fd, long offset, ulong len)
  void CopyFstab(Fstab to, _Fstab& from)
  int sys_endfsent()
  int endfsent()
  int sys_getfsent(_Fstab& fs)
  Fstab getfsent()
  int sys_getfsfile(string mount_point, _Fstab& fs)
  Fstab getfsfile(string mount_point)
  int sys_getfsspec(string special_file, _Fstab& fs)
  Fstab getfsspec(string special_file)
  int sys_setfsent()
  int setfsent()
  int setgroups(ulong size, UInt32[] list)
  int setgroups(UInt32[] list)
  void CopyGroup(Group to, _Group& from)
  int sys_getgrnam(string name, _Group& group)
  Group getgrnam(string name)
  int sys_getgrgid(UInt32 uid, _Group& group)
  Group getgrgid(UInt32 uid)
  int sys_getgrnam_r(string name, _Group& grbuf, IntPtr& grbufp)
  int getgrnam_r(string name, Group grbuf, Group& grbufp)
  int sys_getgrgid_r(UInt32 uid, _Group& grbuf, IntPtr& grbufp)
  int getgrgid_r(UInt32 uid, Group grbuf, Group& grbufp)
  int sys_getgrent(_Group& grbuf)
  Group getgrent()
  int sys_setgrent()
  int setgrent()
  int sys_endgrent()
  int endgrent()
  int sys_fgetgrent(IntPtr stream, _Group& grbuf)
  Group fgetgrent(IntPtr stream)
  void CopyPasswd(Passwd to, _Passwd& from)
  int sys_getpwnam(string name, _Passwd& passwd)
  Passwd getpwnam(string name)
  int sys_getpwuid(UInt32 uid, _Passwd& passwd)
  Passwd getpwuid(UInt32 uid)
  int sys_getpwnam_r(string name, _Passwd& pwbuf, IntPtr& pwbufp)
  int getpwnam_r(string name, Passwd pwbuf, Passwd& pwbufp)
  int sys_getpwuid_r(UInt32 uid, _Passwd& pwbuf, IntPtr& pwbufp)
  int getpwuid_r(UInt32 uid, Passwd pwbuf, Passwd& pwbufp)
  int sys_getpwent(_Passwd& pwbuf)
  Passwd getpwent()
  int sys_setpwent()
  int setpwent()
  int sys_endpwent()
  int endpwent()
  int sys_fgetpwent(IntPtr stream, _Passwd& pwbuf)
  Passwd fgetpwent(IntPtr stream)
  int psignal(int sig, string s)
  int psignal(Signum sig, string s)
  int sys_kill(int pid, int sig)
  int kill(int pid, Signum sig)
  IntPtr sys_strsignal(int sig)
  string strsignal(Signum sig)
  int _L_ctermid()
  int _L_cuserid()
  IntPtr sys_cuserid(StringBuilder string)
  string cuserid(StringBuilder string)
  int mkstemp(StringBuilder template)
  int ttyslot()
  int setkey(string key)
  int sys_strerror_r(int errnum, StringBuilder buf, ulong n)
  int strerror_r(Errno errnum, StringBuilder buf, ulong n)
  int strerror_r(Errno errnum, StringBuilder buf)
  int posix_madvise(IntPtr addr, ulong len, PosixMadviseAdvice advice)
  IntPtr mmap(IntPtr start, ulong length, MmapProts prot, MmapFlags flags, int fd, long offset)
  int munmap(IntPtr start, ulong length)
  int mprotect(IntPtr start, ulong len, MmapProts prot)
  int msync(IntPtr start, ulong len, MsyncFlags flags)
  int mlock(IntPtr start, ulong len)
  int munlock(IntPtr start, ulong len)
  int sys_mlockall(int flags)
  int mlockall(MlockallFlags flags)
  int munlockall()
  IntPtr mremap(IntPtr old_address, ulong old_size, ulong new_size, MremapFlags flags)
  int mincore(IntPtr start, ulong length, Byte[] vec)
  int remap_file_pages(IntPtr start, ulong size, MmapProts prot, long pgoff, MmapFlags flags)
  int sys_poll(_pollfd[] ufds, UInt32 nfds, int timeout)
  int poll(Pollfd[] fds, UInt32 nfds, int timeout)
  int poll(Pollfd[] fds, int timeout)
  long sendfile(int out_fd, int in_fd, Int64& offset, ulong count)
  int stat(string file_name, Stat& buf)
  int fstat(int filedes, Stat& buf)
  int lstat(string file_name, Stat& buf)
  int sys_chmod(string path, UInt32 mode)
  int chmod(string path, FilePermissions mode)
  int sys_fchmod(int filedes, UInt32 mode)
  int fchmod(int filedes, FilePermissions mode)
  UInt32 sys_umask(UInt32 mask)
  FilePermissions umask(FilePermissions mask)
  int sys_mkdir(string oldpath, UInt32 mode)
  int mkdir(string oldpath, FilePermissions mode)
  int mknod(string pathname, FilePermissions mode, ulong dev)
  int sys_mkfifo(string pathname, UInt32 mode)
  int mkfifo(string pathname, FilePermissions mode)
  int statvfs(string path, Statvfs& buf)
  int fstatvfs(int fd, Statvfs& buf)
  int gettimeofday(Timeval& tv, Timezone& tz)
  int gettimeofday(Timeval& tv, IntPtr ignore)
  int gettimeofday(Timeval& tv)
  int gettimeofday(IntPtr ignore, Timezone& tz)
  int gettimeofday(Timezone& tz)
  int settimeofday(Timeval& tv, Timezone& tz)
  int settimeofday(Timeval& tv, IntPtr ignore)
  int settimeofday(Timeval& tv)
  int sys_utimes(string filename, Timeval[] tvp)
  int utimes(string filename, Timeval[] tvp)
  int sys_lutimes(string filename, Timeval[] tvp)
  int lutimes(string filename, Timeval[] tvp)
  int sys_futimes(int fd, Timeval[] tvp)
  int futimes(int fd, Timeval[] tvp)
  void CopyUtsname(Utsname& to, _Utsname& from)
  int sys_uname(_Utsname& buf)
  int uname(Utsname& buf)
  int wait(Int32& status)
  int waitpid(int pid, Int32& status, int options)
  int waitpid(int pid, Int32& status, WaitOptions options)
  int _WIFEXITED(int status)
  bool WIFEXITED(int status)
  int WEXITSTATUS(int status)
  int _WIFSIGNALED(int status)
  bool WIFSIGNALED(int status)
  int _WTERMSIG(int status)
  Signum WTERMSIG(int status)
  int _WIFSTOPPED(int status)
  bool WIFSTOPPED(int status)
  int _WSTOPSIG(int status)
  Signum WSTOPSIG(int status)
  int sys_openlog(IntPtr ident, int option, int facility)
  int openlog(IntPtr ident, SyslogOptions option, SyslogFacility defaultFacility)
  int sys_syslog(int priority, string message)
  int syslog(SyslogFacility facility, SyslogLevel level, string message)
  int syslog(SyslogLevel level, string message)
  string GetSyslogMessage(string message)
  int syslog(SyslogFacility facility, SyslogLevel level, string format, Object[] parameters)
  int syslog(SyslogLevel level, string format, Object[] parameters)
  int closelog()
  int sys_setlogmask(int mask)
  int setlogmask(SyslogLevel mask)
  int nanosleep(Timespec& req, Timespec& rem)
  int stime(Int64& t)
  long time(Int64& t)
  int sys_access(string pathname, int mode)
  int access(string pathname, AccessModes mode)
  long sys_lseek(int fd, long offset, int whence)
  long lseek(int fd, long offset, SeekFlags whence)
  int close(int fd)
  long read(int fd, IntPtr buf, ulong count)
  long read(int fd, Void* buf, ulong count)
  long write(int fd, IntPtr buf, ulong count)
  long write(int fd, Void* buf, ulong count)
  long pread(int fd, IntPtr buf, ulong count, long offset)
  long pread(int fd, Void* buf, ulong count, long offset)
  long pwrite(int fd, IntPtr buf, ulong count, long offset)
  long pwrite(int fd, Void* buf, ulong count, long offset)
  int pipe(Int32& reading, Int32& writing)
  int pipe(Int32[] filedes)
  UInt32 alarm(UInt32 seconds)
  UInt32 sleep(UInt32 seconds)
  UInt32 ualarm(UInt32 usecs, UInt32 interval)
  int pause()
  int chown(string path, UInt32 owner, UInt32 group)
  int fchown(int fd, UInt32 owner, UInt32 group)
  int lchown(string path, UInt32 owner, UInt32 group)
  int chdir(string path)
  int fchdir(int fd)
  IntPtr getcwd(StringBuilder buf, ulong size)
  StringBuilder getcwd(StringBuilder buf)
  int dup(int fd)
  int dup2(int fd, int fd2)
  int execve(string path, String[] argv, String[] envp)
  int fexecve(int fd, String[] argv, String[] envp)
  int execv(string path, String[] argv)
  int execvp(string path, String[] argv)
  int nice(int inc)
  int _exit(int status)
  long fpathconf(int filedes, PathconfName name, Errno defaultError)
  long fpathconf(int filedes, PathconfName name)
  long pathconf(string path, PathconfName name, Errno defaultError)
  long pathconf(string path, PathconfName name)
  long sysconf(SysconfName name, Errno defaultError)
  long sysconf(SysconfName name)
  ulong confstr(ConfstrName name, StringBuilder buf, ulong len)
  int getpid()
  int getppid()
  int setpgid(int pid, int pgid)
  int getpgid(int pid)
  int setpgrp()
  int getpgrp()
  int setsid()
  int getsid(int pid)
  UInt32 getuid()
  UInt32 geteuid()
  UInt32 getgid()
  UInt32 getegid()
  int getgroups(int size, UInt32[] list)
  int getgroups(UInt32[] list)
  int setuid(UInt32 uid)
  int setreuid(UInt32 ruid, UInt32 euid)
  int setregid(UInt32 rgid, UInt32 egid)
  int seteuid(UInt32 euid)
  int setegid(UInt32 uid)
  int setgid(UInt32 gid)
  int getresuid(UInt32& ruid, UInt32& euid, UInt32& suid)
  int getresgid(UInt32& rgid, UInt32& egid, UInt32& sgid)
  int setresuid(UInt32 ruid, UInt32 euid, UInt32 suid)
  int setresgid(UInt32 rgid, UInt32 egid, UInt32 sgid)
  IntPtr sys_ttyname(int fd)
  string ttyname(int fd)
  int ttyname_r(int fd, StringBuilder buf, ulong buflen)
  int ttyname_r(int fd, StringBuilder buf)
  int sys_isatty(int fd)
  bool isatty(int fd)
  int link(string oldpath, string newpath)
  int symlink(string oldpath, string newpath)
  int readlink(string path, StringBuilder buf, ulong bufsiz)
  int readlink(string path, StringBuilder buf)
  int unlink(string pathname)
  int rmdir(string pathname)
  int tcgetpgrp(int fd)
  int tcsetpgrp(int fd, int pgrp)
  IntPtr sys_getlogin()
  string getlogin()
  int getlogin_r(StringBuilder name, ulong bufsize)
  int getlogin_r(StringBuilder name)
  int setlogin(string name)
  int gethostname(StringBuilder name, ulong len)
  int gethostname(StringBuilder name)
  int sethostname(string name, ulong len)
  int sethostname(string name)
  long gethostid()
  int sethostid(long hostid)
  int getdomainname(StringBuilder name, ulong len)
  int getdomainname(StringBuilder name)
  int setdomainname(string name, ulong len)
  int setdomainname(string name)
  int vhangup()
  int revoke(string file)
  int acct(string filename)
  IntPtr sys_getusershell()
  string getusershell()
  int sys_setusershell()
  int setusershell()
  int sys_endusershell()
  int endusershell()
  int chroot(string path)
  int fsync(int fd)
  int fdatasync(int fd)
  int sync()
  int getpagesize()
  int truncate(string path, long length)
  int ftruncate(int fd, long length)
  int getdtablesize()
  int brk(IntPtr end_data_segment)
  IntPtr sbrk(IntPtr increment)
  int lockf(int fd, LockfCommand cmd, long len)
  string crypt(string key, string salt)
  int encrypt(Byte[] block, bool decode)
  int swab(IntPtr from, IntPtr to, long n)
  void swab(Void* from, Void* to, long n)
  int sys_utime(string filename, Utimbuf& buf, int use_buf)
  int utime(string filename, Utimbuf& buf)
  int utime(string filename)
--------------------------------------------------
Класс: Mono.Unix.Native.blkcnt_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.blksize_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.dev_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.gid_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.fsblkcnt_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.fsfilcnt_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.ino_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.nlink_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.off_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.pid_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.suseconds_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.uid_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Unix.Native.time_tAttribute
Наследуется от: MapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Posix.Catalog
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  IntPtr bindtextdomain(IntPtr domainname, IntPtr dirname)
  IntPtr bind_textdomain_codeset(IntPtr domainname, IntPtr codeset)
  IntPtr textdomain(IntPtr domainname)
  void Init(string package, string localedir)
  IntPtr gettext(IntPtr instring)
  string GetString(string s)
  IntPtr ngettext(IntPtr singular, IntPtr plural, int n)
  string GetPluralString(string s, string p, int n)
--------------------------------------------------
Класс: Mono.Posix.PeerCredData
Наследуется от: ValueType
Поля:
  int pid
  int uid
  int gid
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.PeerCred
Наследуется от: object
Поля:
  int so_peercred
  PeerCredData data
Свойства:
  int ProcessID
  int UserID
  int GroupID
Методы:
  void .ctor(Socket sock)
  int get_ProcessID()
  int get_UserID()
  int get_GroupID()
--------------------------------------------------
Класс: Mono.Posix.OpenFlags
Наследуется от: Enum
Поля:
  int value__
  OpenFlags O_RDONLY
  OpenFlags O_WRONLY
  OpenFlags O_RDWR
  OpenFlags O_CREAT
  OpenFlags O_EXCL
  OpenFlags O_NOCTTY
  OpenFlags O_TRUNC
  OpenFlags O_APPEND
  OpenFlags O_NONBLOCK
  OpenFlags O_SYNC
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.FileMode
Наследуется от: Enum
Поля:
  int value__
  FileMode S_ISUID
  FileMode S_ISGID
  FileMode S_ISVTX
  FileMode S_IRUSR
  FileMode S_IWUSR
  FileMode S_IXUSR
  FileMode S_IRGRP
  FileMode S_IWGRP
  FileMode S_IXGRP
  FileMode S_IROTH
  FileMode S_IWOTH
  FileMode S_IXOTH
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.WaitOptions
Наследуется от: Enum
Поля:
  int value__
  WaitOptions WNOHANG
  WaitOptions WUNTRACED
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.AccessMode
Наследуется от: Enum
Поля:
  int value__
  AccessMode R_OK
  AccessMode W_OK
  AccessMode X_OK
  AccessMode F_OK
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.Signals
Наследуется от: Enum
Поля:
  int value__
  Signals SIGHUP
  Signals SIGINT
  Signals SIGQUIT
  Signals SIGILL
  Signals SIGTRAP
  Signals SIGABRT
  Signals SIGBUS
  Signals SIGFPE
  Signals SIGKILL
  Signals SIGUSR1
  Signals SIGSEGV
  Signals SIGUSR2
  Signals SIGPIPE
  Signals SIGALRM
  Signals SIGTERM
  Signals SIGCHLD
  Signals SIGCONT
  Signals SIGSTOP
  Signals SIGTSTP
  Signals SIGTTIN
  Signals SIGTTOU
  Signals SIGURG
  Signals SIGXCPU
  Signals SIGXFSZ
  Signals SIGVTALRM
  Signals SIGPROF
  Signals SIGWINCH
  Signals SIGIO
  Signals SIGSYS
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.Syscall
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  int exit(int status)
  int fork()
  IntPtr read(int fileDescriptor, Void* buf, IntPtr count)
  IntPtr write(int fileDescriptor, Void* buf, IntPtr count)
  int syscall_open(string pathname, int flags, int mode)
  int map_Mono_Posix_OpenFlags(OpenFlags flags)
  int map_Mono_Posix_FileMode(FileMode mode)
  int open(string pathname, OpenFlags flags)
  int open(string pathname, OpenFlags flags, FileMode mode)
  int close(int fileDescriptor)
  int syscall_waitpid(int pid, Int32* status, int options)
  int map_Mono_Posix_WaitOptions(WaitOptions wait_options)
  int waitpid(int pid, Int32& status, WaitOptions options)
  int waitpid(int pid, WaitOptions options)
  int WIFEXITED(int status)
  int WEXITSTATUS(int status)
  int WIFSIGNALED(int status)
  int WTERMSIG(int status)
  int WIFSTOPPED(int status)
  int WSTOPSIG(int status)
  int syscall_creat(string pathname, int flags)
  int creat(string pathname, FileMode flags)
  int link(string oldPath, string newPath)
  int unlink(string path)
  int symlink(string oldpath, string newpath)
  int chdir(string path)
  int syscall_chmod(string path, int mode)
  int chmod(string path, FileMode mode)
  int chown(string path, int owner, int group)
  int lchown(string path, int owner, int group)
  int lseek(int fileDescriptor, int offset, int whence)
  int getpid()
  int setuid(int uid)
  int getuid()
  UInt32 alarm(UInt32 seconds)
  int pause()
  int syscall_access(string pathname, int mode)
  int map_Mono_Posix_AccessMode(AccessMode mode)
  int access(string pathname, AccessMode mode)
  int nice(int increment)
  void sync()
  void kill(int pid, int sig)
  int rename(string oldPath, string newPath)
  int syscall_mkdir(string pathname, int mode)
  int mkdir(string pathname, FileMode mode)
  int rmdir(string path)
  int dup(int fileDescriptor)
  int setgid(int gid)
  int getgid()
  int signal(int signum, sighandler_t handler)
  int geteuid()
  int getegid()
  int setpgid(int pid, int pgid)
  int umask(int umask)
  int chroot(string path)
  int dup2(int oldFileDescriptor, int newFileDescriptor)
  int getppid()
  int getpgrp()
  int setsid()
  int setreuid(int ruid, int euid)
  int setregid(int rgid, int egid)
  string helper_Mono_Posix_GetUserName(int uid)
  string helper_Mono_Posix_GetGroupName(int gid)
  string getusername(int uid)
  string getgroupname(int gid)
  int syscall_gethostname(Byte[] p, int len)
  string GetHostName()
  string gethostname()
  int syscall_isatty(int desc)
  bool isatty(int desc)
  int helper_Mono_Posix_Stat(string filename, bool dereference, Int32& device, Int32& inode, Int32& mode, Int32& nlinks, Int32& uid, Int32& gid, Int32& rdev, Int64& size, Int64& blksize, Int64& blocks, Int64& atime, Int64& mtime, Int64& ctime)
  int stat2(string filename, bool dereference, Stat& stat)
  int stat(string filename, Stat& stat)
  int lstat(string filename, Stat& stat)
  int readlink(string path, Byte[] buffer, int buflen)
  string readlink(string path)
  IntPtr _strerror(int errnum)
  string strerror(int errnum)
  IntPtr opendir(string path)
  int closedir(IntPtr dir)
  string readdir(IntPtr dir)
--------------------------------------------------
Класс: Mono.Posix.StatModeMasks
Наследуется от: Enum
Поля:
  int value__
  StatModeMasks TypeMask
  StatModeMasks OwnerMask
  StatModeMasks GroupMask
  StatModeMasks OthersMask
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.StatMode
Наследуется от: Enum
Поля:
  int value__
  StatMode Socket
  StatMode SymLink
  StatMode Regular
  StatMode BlockDevice
  StatMode Directory
  StatMode CharDevice
  StatMode FIFO
  StatMode SUid
  StatMode SGid
  StatMode Sticky
  StatMode OwnerRead
  StatMode OwnerWrite
  StatMode OwnerExecute
  StatMode GroupRead
  StatMode GroupWrite
  StatMode GroupExecute
  StatMode OthersRead
  StatMode OthersWrite
  StatMode OthersExecute
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Posix.Stat
Наследуется от: ValueType
Поля:
  int Device
  int INode
  StatMode Mode
  int NLinks
  int Uid
  int Gid
  long DeviceType
  long Size
  long BlockSize
  long Blocks
  DateTime ATime
  DateTime MTime
  DateTime CTime
  DateTime UnixEpoch
Свойства:
Методы:
  void .ctor(int device, int inode, int mode, int nlinks, int uid, int gid, int rdev, long size, long blksize, long blocks, long atime, long mtime, long ctime)
  void .cctor()
  DateTime UnixToDateTime(long unix)
--------------------------------------------------
Класс: Mono.Posix.UnixEndPoint
Наследуется от: EndPoint
Поля:
  string filename
Свойства:
  string Filename
  AddressFamily AddressFamily
Методы:
  void .ctor(string filename)
  string get_Filename()
  void set_Filename(string value)
  AddressFamily get_AddressFamily()
  EndPoint Create(SocketAddress socketAddress)
  SocketAddress Serialize()
  string ToString()
  int GetHashCode()
  bool Equals(object o)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixBinaryClientFormatterSink
Наследуется от: object
Поля:
  UnixBinaryCore _binaryCore
  IClientChannelSink _nextInChain
Свойства:
  UnixBinaryCore BinaryCore
  IClientChannelSink NextChannelSink
  IMessageSink NextSink
  IDictionary Properties
Методы:
  void .ctor(IClientChannelSink nextSink)
  UnixBinaryCore get_BinaryCore()
  void set_BinaryCore(UnixBinaryCore value)
  IClientChannelSink get_NextChannelSink()
  IMessageSink get_NextSink()
  IDictionary get_Properties()
  void AsyncProcessRequest(IClientChannelSinkStack sinkStack, IMessage msg, ITransportHeaders headers, Stream stream)
  void AsyncProcessResponse(IClientResponseChannelSinkStack sinkStack, object state, ITransportHeaders headers, Stream stream)
  Stream GetRequestStream(IMessage msg, ITransportHeaders headers)
  void ProcessMessage(IMessage msg, ITransportHeaders requestHeaders, Stream requestStream, ITransportHeaders& responseHeaders, Stream& responseStream)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessage SyncProcessMessage(IMessage msg)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixBinaryClientFormatterSinkProvider
Наследуется от: object
Поля:
  IClientChannelSinkProvider next
  UnixBinaryCore _binaryCore
  String[] allowedProperties
Свойства:
  IClientChannelSinkProvider Next
Методы:
  void .ctor()
  void .ctor(IDictionary properties, ICollection providerData)
  void .cctor()
  IClientChannelSinkProvider get_Next()
  void set_Next(IClientChannelSinkProvider value)
  IClientChannelSink CreateSink(IChannelSender channel, string url, object remoteChannelData)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixBinaryCore
Наследуется от: object
Поля:
  BinaryFormatter _serializationFormatter
  BinaryFormatter _deserializationFormatter
  bool _includeVersions
  bool _strictBinding
  IDictionary _properties
  UnixBinaryCore DefaultInstance
  Dictionary`2<string, int> <>f__switch$map0
Свойства:
  BinaryFormatter Serializer
  BinaryFormatter Deserializer
  IDictionary Properties
Методы:
  void .ctor(object owner, IDictionary properties, String[] allowedProperties)
  void .ctor()
  void .cctor()
  void Init()
  BinaryFormatter get_Serializer()
  BinaryFormatter get_Deserializer()
  IDictionary get_Properties()
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.SimpleBinder
Наследуется от: SerializationBinder
Поля:
  SimpleBinder Instance
Свойства:
Методы:
  void .ctor()
  void .cctor()
  Type BindToType(string assemblyName, string typeName)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixBinaryServerFormatterSink
Наследуется от: object
Поля:
  UnixBinaryCore _binaryCore
  IServerChannelSink next_sink
  IChannelReceiver receiver
Свойства:
  UnixBinaryCore BinaryCore
  IServerChannelSink NextChannelSink
  IDictionary Properties
Методы:
  void .ctor(IServerChannelSink nextSink, IChannelReceiver receiver)
  UnixBinaryCore get_BinaryCore()
  void set_BinaryCore(UnixBinaryCore value)
  IServerChannelSink get_NextChannelSink()
  IDictionary get_Properties()
  void AsyncProcessResponse(IServerResponseChannelSinkStack sinkStack, object state, IMessage message, ITransportHeaders headers, Stream stream)
  Stream GetResponseStream(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers)
  ServerProcessing ProcessMessage(IServerChannelSinkStack sinkStack, IMessage requestMsg, ITransportHeaders requestHeaders, Stream requestStream, IMessage& responseMsg, ITransportHeaders& responseHeaders, Stream& responseStream)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.MethodCallHeaderHandler
Наследуется от: object
Поля:
  string _uri
Свойства:
Методы:
  void .ctor(string uri)
  object HandleHeaders(Header[] headers)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixBinaryServerFormatterSinkProvider
Наследуется от: object
Поля:
  IServerChannelSinkProvider next
  UnixBinaryCore _binaryCore
  String[] AllowedProperties
Свойства:
  IServerChannelSinkProvider Next
Методы:
  void .ctor()
  void .ctor(IDictionary properties, ICollection providerData)
  void .cctor()
  IServerChannelSinkProvider get_Next()
  void set_Next(IServerChannelSinkProvider value)
  IServerChannelSink CreateSink(IChannelReceiver channel)
  void GetChannelData(IChannelDataStore channelData)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixChannel
Наследуется от: object
Поля:
  UnixClientChannel _clientChannel
  UnixServerChannel _serverChannel
  string _name
  int _priority
Свойства:
  string ChannelName
  int ChannelPriority
  object ChannelData
Методы:
  void .ctor()
  void .ctor(string path)
  void .ctor(IDictionary properties, IClientChannelSinkProvider clientSinkProvider, IServerChannelSinkProvider serverSinkProvider)
  void Init(IDictionary properties, IClientChannelSinkProvider clientSink, IServerChannelSinkProvider serverSink)
  IMessageSink CreateMessageSink(string url, object remoteChannelData, String& objectURI)
  string get_ChannelName()
  int get_ChannelPriority()
  void StartListening(object data)
  void StopListening(object data)
  String[] GetUrlsForUri(string uri)
  object get_ChannelData()
  string Parse(string url, String& objectURI)
  string ParseUnixURL(string url, String& objectURI)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixClientChannel
Наследуется от: object
Поля:
  int priority
  string name
  IClientChannelSinkProvider _sinkProvider
Свойства:
  string ChannelName
  int ChannelPriority
Методы:
  void .ctor()
  void .ctor(IDictionary properties, IClientChannelSinkProvider sinkProvider)
  void .ctor(string name, IClientChannelSinkProvider sinkProvider)
  string get_ChannelName()
  int get_ChannelPriority()
  IMessageSink CreateMessageSink(string url, object remoteChannelData, String& objectURI)
  string Parse(string url, String& objectURI)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixClientTransportSink
Наследуется от: object
Поля:
  string _path
Свойства:
  IDictionary Properties
  IClientChannelSink NextChannelSink
Методы:
  void .ctor(string url)
  IDictionary get_Properties()
  IClientChannelSink get_NextChannelSink()
  void AsyncProcessRequest(IClientChannelSinkStack sinkStack, IMessage msg, ITransportHeaders headers, Stream requestStream)
  void ReadAsyncUnixMessage(object data)
  void AsyncProcessResponse(IClientResponseChannelSinkStack sinkStack, object state, ITransportHeaders headers, Stream stream)
  Stream GetRequestStream(IMessage msg, ITransportHeaders headers)
  void ProcessMessage(IMessage msg, ITransportHeaders requestHeaders, Stream requestStream, ITransportHeaders& responseHeaders, Stream& responseStream)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixClientTransportSinkProvider
Наследуется от: object
Поля:
Свойства:
  IClientChannelSinkProvider Next
Методы:
  void .ctor()
  IClientChannelSinkProvider get_Next()
  void set_Next(IClientChannelSinkProvider value)
  IClientChannelSink CreateSink(IChannelSender channel, string url, object remoteChannelData)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.MessageStatus
Наследуется от: Enum
Поля:
  int value__
  MessageStatus MethodMessage
  MessageStatus CancelSignal
  MessageStatus Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixMessageIO
Наследуется от: object
Поля:
  Byte[][] _msgHeaders
  int DefaultStreamBufferSize
  Byte[] msgUriTransportKey
  Byte[] msgContentTypeTransportKey
  Byte[] msgDefaultTransportKey
  Byte[] msgHeaderTerminator
  Dictionary`2<string, int> <>f__switch$map1
Свойства:
Методы:
  void .ctor()
  void .cctor()
  MessageStatus ReceiveMessageStatus(Stream networkStream, Byte[] buffer)
  bool StreamRead(Stream networkStream, Byte[] buffer, int count)
  void SendMessageStream(Stream networkStream, Stream data, ITransportHeaders requestHeaders, Byte[] buffer)
  void SendHeaders(Stream networkStream, ITransportHeaders requestHeaders, Byte[] buffer)
  ITransportHeaders ReceiveHeaders(Stream networkStream, Byte[] buffer)
  Stream ReceiveMessageStream(Stream networkStream, ITransportHeaders& headers, Byte[] buffer)
  void SendString(Stream networkStream, string str, Byte[] buffer)
  string ReceiveString(Stream networkStream, Byte[] buffer)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixServerChannel
Наследуется от: object
Поля:
  string path
  string name
  int priority
  bool supressChannelData
  Thread server_thread
  UnixListener listener
  UnixServerTransportSink sink
  ChannelDataStore channel_data
  int _maxConcurrentConnections
  ArrayList _activeConnections
  Dictionary`2<string, int> <>f__switch$map2
Свойства:
  object ChannelData
  string ChannelName
  int ChannelPriority
Методы:
  void .ctor(string path)
  void .ctor(IDictionary properties, IServerChannelSinkProvider serverSinkProvider)
  void .ctor(string name, string path, IServerChannelSinkProvider serverSinkProvider)
  void .ctor(string name, string path)
  void Init(IServerChannelSinkProvider serverSinkProvider)
  object get_ChannelData()
  string get_ChannelName()
  int get_ChannelPriority()
  string GetChannelUri()
  String[] GetUrlsForUri(string uri)
  string Parse(string url, String& objectURI)
  void WaitForConnections()
  void CreateListenerConnection(Socket client)
  void ReleaseConnection(Thread thread)
  void StartListening(object data)
  void StopListening(object data)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.ClientConnection
Наследуется от: object
Поля:
  Socket _client
  UnixServerTransportSink _sink
  Stream _stream
  UnixServerChannel _serverChannel
  Byte[] _buffer
Свойства:
  Socket Client
  Byte[] Buffer
  bool IsLocal
Методы:
  void .ctor(UnixServerChannel serverChannel, Socket client, UnixServerTransportSink sink)
  Socket get_Client()
  Byte[] get_Buffer()
  void ProcessMessages()
  bool get_IsLocal()
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixServerTransportSink
Наследуется от: object
Поля:
  IServerChannelSink next_sink
Свойства:
  IServerChannelSink NextChannelSink
  IDictionary Properties
Методы:
  void .ctor(IServerChannelSink next)
  IServerChannelSink get_NextChannelSink()
  IDictionary get_Properties()
  void AsyncProcessResponse(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers, Stream responseStream)
  Stream GetResponseStream(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers)
  ServerProcessing ProcessMessage(IServerChannelSinkStack sinkStack, IMessage requestMsg, ITransportHeaders requestHeaders, Stream requestStream, IMessage& responseMsg, ITransportHeaders& responseHeaders, Stream& responseStream)
  void InternalProcessMessage(ClientConnection connection, Stream stream)
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixConnectionPool
Наследуется от: object
Поля:
  Hashtable _pools
  int _maxOpenConnections
  int _keepAliveSeconds
  Thread _poolThread
Свойства:
  int MaxOpenConnections
  int KeepAliveSeconds
Методы:
  void .ctor()
  void .cctor()
  void Shutdown()
  int get_MaxOpenConnections()
  void set_MaxOpenConnections(int value)
  int get_KeepAliveSeconds()
  void set_KeepAliveSeconds(int value)
  UnixConnection GetConnection(string path)
  void ConnectionCollector()
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.ReusableUnixClient
Наследуется от: UnixClient
Поля:
Свойства:
  bool IsAlive
Методы:
  void .ctor(string path)
  bool get_IsAlive()
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.UnixConnection
Наследуется от: object
Поля:
  DateTime _controlTime
  Stream _stream
  ReusableUnixClient _client
  HostConnectionPool _pool
  Byte[] _buffer
Свойства:
  Stream Stream
  DateTime ControlTime
  bool IsAlive
  Byte[] Buffer
Методы:
  void .ctor(HostConnectionPool pool, ReusableUnixClient client)
  Stream get_Stream()
  DateTime get_ControlTime()
  void set_ControlTime(DateTime value)
  bool get_IsAlive()
  Byte[] get_Buffer()
  void Release()
  void Close()
--------------------------------------------------
Класс: Mono.Remoting.Channels.Unix.HostConnectionPool
Наследуется от: object
Поля:
  ArrayList _pool
  int _activeConnections
  string _path
Свойства:
Методы:
  void .ctor(string path)
  UnixConnection GetConnection()
  UnixConnection CreateConnection()
  void ReleaseConnection(UnixConnection entry)
  void CancelConnection(UnixConnection entry)
  void PurgeConnections()
--------------------------------------------------
Класс: Mono.Unix.Native.SignalHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(int signal)
  IAsyncResult BeginInvoke(int signal, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: <56523a34-2ad1-4b32-8174-674792234a6e><PrivateImplementationDetails>
Наследуется от: object
Поля:
  $ArrayType$20 $$field-0
  $ArrayType$8 $$field-1
  $ArrayType$8 $$field-2
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.AddingNewEventArgs
Наследуется от: object
Поля:
  object <NewObject>k__BackingField
Свойства:
  object NewObject
Методы:
  object get_NewObject()
  void set_NewObject(object value)
  void .ctor()
  void .ctor(object newObject)
--------------------------------------------------
Класс: System.ComponentModel.AddingNewEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, AddingNewEventArgs e)
  IAsyncResult BeginInvoke(object sender, AddingNewEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.INotifyCollectionChanged
Поля:
Свойства:
Методы:
  void add_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void remove_CollectionChanged(NotifyCollectionChangedEventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.INotifyPropertyChanging
Поля:
Свойства:
Методы:
  void add_PropertyChanging(PropertyChangingEventHandler value)
  void remove_PropertyChanging(PropertyChangingEventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.NotifyCollectionChangedAction
Наследуется от: Enum
Поля:
  int value__
  NotifyCollectionChangedAction Add
  NotifyCollectionChangedAction Remove
  NotifyCollectionChangedAction Replace
  NotifyCollectionChangedAction Move
  NotifyCollectionChangedAction Reset
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.NotifyCollectionChangedEventArgs
Наследуется от: object
Поля:
  NotifyCollectionChangedAction <Action>k__BackingField
  IList <NewItems>k__BackingField
  int <NewStartingIndex>k__BackingField
  IList <OldItems>k__BackingField
  int <OldStartingIndex>k__BackingField
Свойства:
  NotifyCollectionChangedAction Action
  IList NewItems
  int NewStartingIndex
  IList OldItems
  int OldStartingIndex
Методы:
  NotifyCollectionChangedAction get_Action()
  void set_Action(NotifyCollectionChangedAction value)
  IList get_NewItems()
  void set_NewItems(IList value)
  int get_NewStartingIndex()
  void set_NewStartingIndex(int value)
  IList get_OldItems()
  void set_OldItems(IList value)
  int get_OldStartingIndex()
  void set_OldStartingIndex(int value)
  void .ctor(NotifyCollectionChangedAction action)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems)
  void .ctor(NotifyCollectionChangedAction action, object changedItem)
  void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems, int startingIndex)
  void .ctor(NotifyCollectionChangedAction action, object changedItem, int index)
  void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem)
  void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex)
  void .ctor(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex)
  void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem, int index)
--------------------------------------------------
Класс: System.ComponentModel.NotifyCollectionChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, NotifyCollectionChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, NotifyCollectionChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangingEventArgs
Наследуется от: EventArgs
Поля:
  string <PropertyName>k__BackingField
Свойства:
  string PropertyName
Методы:
  void .ctor(string propertyName)
  string get_PropertyName()
  void set_PropertyName(string value)
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, PropertyChangingEventArgs e)
  IAsyncResult BeginInvoke(object sender, PropertyChangingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.ConstructorHandling
Наследуется от: Enum
Поля:
  int value__
  ConstructorHandling Default
  ConstructorHandling AllowNonPublicDefaultConstructor
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.DateFormatHandling
Наследуется от: Enum
Поля:
  int value__
  DateFormatHandling IsoDateFormat
  DateFormatHandling MicrosoftDateFormat
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.DateParseHandling
Наследуется от: Enum
Поля:
  int value__
  DateParseHandling None
  DateParseHandling DateTime
  DateParseHandling DateTimeOffset
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.DateTimeZoneHandling
Наследуется от: Enum
Поля:
  int value__
  DateTimeZoneHandling Local
  DateTimeZoneHandling Utc
  DateTimeZoneHandling Unspecified
  DateTimeZoneHandling RoundtripKind
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.FloatFormatHandling
Наследуется от: Enum
Поля:
  int value__
  FloatFormatHandling String
  FloatFormatHandling Symbol
  FloatFormatHandling DefaultValue
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.FloatParseHandling
Наследуется от: Enum
Поля:
  int value__
  FloatParseHandling Double
  FloatParseHandling Decimal
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Formatting
Наследуется от: Enum
Поля:
  int value__
  Formatting None
  Formatting Indented
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.IArrayPool`1
Поля:
Свойства:
Методы:
  T[] Rent(int minimumLength)
  void Return(T[] array)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConstructorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonDictionaryAttribute
Наследуется от: JsonContainerAttribute
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  JsonException Create(IJsonLineInfo lineInfo, string path, string message)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonExtensionDataAttribute
Наследуется от: Attribute
Поля:
  bool <WriteData>k__BackingField
  bool <ReadData>k__BackingField
Свойства:
  bool WriteData
  bool ReadData
Методы:
  bool get_WriteData()
  void set_WriteData(bool value)
  bool get_ReadData()
  void set_ReadData(bool value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonContainerType
Наследуется от: Enum
Поля:
  int value__
  JsonContainerType None
  JsonContainerType Object
  JsonContainerType Array
  JsonContainerType Constructor
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonPosition
Наследуется от: ValueType
Поля:
  Char[] SpecialCharacters
  JsonContainerType Type
  int Position
  string PropertyName
  bool HasIndex
Свойства:
Методы:
  void .ctor(JsonContainerType type)
  int CalculateLength()
  void WriteTo(StringBuilder sb)
  bool TypeHasIndex(JsonContainerType type)
  string BuildPath(List`1<JsonPosition> positions, Nullable`1<JsonPosition> currentPosition)
  string FormatMessage(IJsonLineInfo lineInfo, string path, string message)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonRequiredAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.MetadataPropertyHandling
Наследуется от: Enum
Поля:
  int value__
  MetadataPropertyHandling Default
  MetadataPropertyHandling ReadAhead
  MetadataPropertyHandling Ignore
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.StringEscapeHandling
Наследуется от: Enum
Поля:
  int value__
  StringEscapeHandling Default
  StringEscapeHandling EscapeNonAscii
  StringEscapeHandling EscapeHtml
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Required
Наследуется от: Enum
Поля:
  int value__
  Required Default
  Required AllowNull
  Required Always
  Required DisallowNull
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.PreserveReferencesHandling
Наследуется от: Enum
Поля:
  int value__
  PreserveReferencesHandling None
  PreserveReferencesHandling Objects
  PreserveReferencesHandling Arrays
  PreserveReferencesHandling All
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.IJsonLineInfo
Поля:
Свойства:
  int LineNumber
  int LinePosition
Методы:
  bool HasLineInfo()
  int get_LineNumber()
  int get_LinePosition()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonArrayAttribute
Наследуется от: JsonContainerAttribute
Поля:
  bool _allowNullItems
Свойства:
  bool AllowNullItems
Методы:
  bool get_AllowNullItems()
  void set_AllowNullItems(bool value)
  void .ctor()
  void .ctor(bool allowNullItems)
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonContainerAttribute
Наследуется от: Attribute
Поля:
  string <Id>k__BackingField
  string <Title>k__BackingField
  string <Description>k__BackingField
  Type <ItemConverterType>k__BackingField
  Object[] <ItemConverterParameters>k__BackingField
  Nullable`1<bool> _isReference
  Nullable`1<bool> _itemIsReference
  Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling
  Nullable`1<TypeNameHandling> _itemTypeNameHandling
Свойства:
  string Id
  string Title
  string Description
  Type ItemConverterType
  Object[] ItemConverterParameters
  bool IsReference
  bool ItemIsReference
  ReferenceLoopHandling ItemReferenceLoopHandling
  TypeNameHandling ItemTypeNameHandling
Методы:
  string get_Id()
  void set_Id(string value)
  string get_Title()
  void set_Title(string value)
  string get_Description()
  void set_Description(string value)
  Type get_ItemConverterType()
  void set_ItemConverterType(Type value)
  Object[] get_ItemConverterParameters()
  void set_ItemConverterParameters(Object[] value)
  bool get_IsReference()
  void set_IsReference(bool value)
  bool get_ItemIsReference()
  void set_ItemIsReference(bool value)
  ReferenceLoopHandling get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(ReferenceLoopHandling value)
  TypeNameHandling get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(TypeNameHandling value)
  void .ctor()
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.DefaultValueHandling
Наследуется от: Enum
Поля:
  int value__
  DefaultValueHandling Include
  DefaultValueHandling Ignore
  DefaultValueHandling Populate
  DefaultValueHandling IgnoreAndPopulate
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConverterAttribute
Наследуется от: Attribute
Поля:
  Type _converterType
  Object[] <ConverterParameters>k__BackingField
Свойства:
  Type ConverterType
  Object[] ConverterParameters
Методы:
  Type get_ConverterType()
  Object[] get_ConverterParameters()
  void set_ConverterParameters(Object[] value)
  void .ctor(Type converterType)
  void .ctor(Type converterType, Object[] converterParameters)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonObjectAttribute
Наследуется от: JsonContainerAttribute
Поля:
  MemberSerialization _memberSerialization
  Nullable`1<Required> _itemRequired
Свойства:
  MemberSerialization MemberSerialization
  Required ItemRequired
Методы:
  MemberSerialization get_MemberSerialization()
  void set_MemberSerialization(MemberSerialization value)
  Required get_ItemRequired()
  void set_ItemRequired(Required value)
  void .ctor()
  void .ctor(MemberSerialization memberSerialization)
  void .ctor(string id)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonSerializerSettings
Наследуется от: object
Поля:
  ReferenceLoopHandling DefaultReferenceLoopHandling
  MissingMemberHandling DefaultMissingMemberHandling
  NullValueHandling DefaultNullValueHandling
  DefaultValueHandling DefaultDefaultValueHandling
  ObjectCreationHandling DefaultObjectCreationHandling
  PreserveReferencesHandling DefaultPreserveReferencesHandling
  ConstructorHandling DefaultConstructorHandling
  TypeNameHandling DefaultTypeNameHandling
  MetadataPropertyHandling DefaultMetadataPropertyHandling
  FormatterAssemblyStyle DefaultTypeNameAssemblyFormat
  StreamingContext DefaultContext
  Formatting DefaultFormatting
  DateFormatHandling DefaultDateFormatHandling
  DateTimeZoneHandling DefaultDateTimeZoneHandling
  DateParseHandling DefaultDateParseHandling
  FloatParseHandling DefaultFloatParseHandling
  FloatFormatHandling DefaultFloatFormatHandling
  StringEscapeHandling DefaultStringEscapeHandling
  FormatterAssemblyStyle DefaultFormatterAssemblyStyle
  CultureInfo DefaultCulture
  bool DefaultCheckAdditionalContent
  string DefaultDateFormatString
  Nullable`1<Formatting> _formatting
  Nullable`1<DateFormatHandling> _dateFormatHandling
  Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling
  Nullable`1<DateParseHandling> _dateParseHandling
  Nullable`1<FloatFormatHandling> _floatFormatHandling
  Nullable`1<FloatParseHandling> _floatParseHandling
  Nullable`1<StringEscapeHandling> _stringEscapeHandling
  CultureInfo _culture
  Nullable`1<bool> _checkAdditionalContent
  Nullable`1<int> _maxDepth
  bool _maxDepthSet
  string _dateFormatString
  bool _dateFormatStringSet
  Nullable`1<FormatterAssemblyStyle> _typeNameAssemblyFormat
  Nullable`1<DefaultValueHandling> _defaultValueHandling
  Nullable`1<PreserveReferencesHandling> _preserveReferencesHandling
  Nullable`1<NullValueHandling> _nullValueHandling
  Nullable`1<ObjectCreationHandling> _objectCreationHandling
  Nullable`1<MissingMemberHandling> _missingMemberHandling
  Nullable`1<ReferenceLoopHandling> _referenceLoopHandling
  Nullable`1<StreamingContext> _context
  Nullable`1<ConstructorHandling> _constructorHandling
  Nullable`1<TypeNameHandling> _typeNameHandling
  Nullable`1<MetadataPropertyHandling> _metadataPropertyHandling
  IList`1<JsonConverter> <Converters>k__BackingField
  IContractResolver <ContractResolver>k__BackingField
  IEqualityComparer <EqualityComparer>k__BackingField
  Func`1<IReferenceResolver> <ReferenceResolverProvider>k__BackingField
  ITraceWriter <TraceWriter>k__BackingField
  SerializationBinder <Binder>k__BackingField
  EventHandler`1<ErrorEventArgs> <Error>k__BackingField
Свойства:
  ReferenceLoopHandling ReferenceLoopHandling
  MissingMemberHandling MissingMemberHandling
  ObjectCreationHandling ObjectCreationHandling
  NullValueHandling NullValueHandling
  DefaultValueHandling DefaultValueHandling
  IList`1<JsonConverter> Converters
  PreserveReferencesHandling PreserveReferencesHandling
  TypeNameHandling TypeNameHandling
  MetadataPropertyHandling MetadataPropertyHandling
  FormatterAssemblyStyle TypeNameAssemblyFormat
  ConstructorHandling ConstructorHandling
  IContractResolver ContractResolver
  IEqualityComparer EqualityComparer
  IReferenceResolver ReferenceResolver
  Func`1<IReferenceResolver> ReferenceResolverProvider
  ITraceWriter TraceWriter
  SerializationBinder Binder
  EventHandler`1<ErrorEventArgs> Error
  StreamingContext Context
  string DateFormatString
  Nullable`1<int> MaxDepth
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatFormatHandling FloatFormatHandling
  FloatParseHandling FloatParseHandling
  StringEscapeHandling StringEscapeHandling
  CultureInfo Culture
  bool CheckAdditionalContent
Методы:
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  MissingMemberHandling get_MissingMemberHandling()
  void set_MissingMemberHandling(MissingMemberHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  IList`1<JsonConverter> get_Converters()
  void set_Converters(IList`1<JsonConverter> value)
  PreserveReferencesHandling get_PreserveReferencesHandling()
  void set_PreserveReferencesHandling(PreserveReferencesHandling value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  MetadataPropertyHandling get_MetadataPropertyHandling()
  void set_MetadataPropertyHandling(MetadataPropertyHandling value)
  FormatterAssemblyStyle get_TypeNameAssemblyFormat()
  void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value)
  ConstructorHandling get_ConstructorHandling()
  void set_ConstructorHandling(ConstructorHandling value)
  IContractResolver get_ContractResolver()
  void set_ContractResolver(IContractResolver value)
  IEqualityComparer get_EqualityComparer()
  void set_EqualityComparer(IEqualityComparer value)
  IReferenceResolver get_ReferenceResolver()
  void set_ReferenceResolver(IReferenceResolver value)
  Func`1<IReferenceResolver> get_ReferenceResolverProvider()
  void set_ReferenceResolverProvider(Func`1<IReferenceResolver> value)
  ITraceWriter get_TraceWriter()
  void set_TraceWriter(ITraceWriter value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  EventHandler`1<ErrorEventArgs> get_Error()
  void set_Error(EventHandler`1<ErrorEventArgs> value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  bool get_CheckAdditionalContent()
  void set_CheckAdditionalContent(bool value)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.MemberSerialization
Наследуется от: Enum
Поля:
  int value__
  MemberSerialization OptOut
  MemberSerialization OptIn
  MemberSerialization Fields
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.ObjectCreationHandling
Наследуется от: Enum
Поля:
  int value__
  ObjectCreationHandling Auto
  ObjectCreationHandling Reuse
  ObjectCreationHandling Replace
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.ReadType
Наследуется от: Enum
Поля:
  int value__
  ReadType Read
  ReadType ReadAsInt32
  ReadType ReadAsBytes
  ReadType ReadAsString
  ReadType ReadAsDecimal
  ReadType ReadAsDateTime
  ReadType ReadAsDateTimeOffset
  ReadType ReadAsDouble
  ReadType ReadAsBoolean
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonTextReader
Наследуется от: JsonReader
Поля:
  char UnicodeReplacementChar
  int MaximumJavascriptIntegerCharacterLength
  TextReader _reader
  Char[] _chars
  int _charsUsed
  int _charPos
  int _lineStartPos
  int _lineNumber
  bool _isEndOfFile
  StringBuffer _stringBuffer
  StringReference _stringReference
  IArrayPool`1<char> _arrayPool
  PropertyNameTable NameTable
Свойства:
  IArrayPool`1<char> ArrayPool
  int LineNumber
  int LinePosition
Методы:
  void .ctor(TextReader reader)
  IArrayPool`1<char> get_ArrayPool()
  void set_ArrayPool(IArrayPool`1<char> value)
  void EnsureBufferNotEmpty()
  void OnNewLine(int pos)
  void ParseString(char quote, ReadType readType)
  void BlockCopyChars(Char[] src, int srcOffset, Char[] dst, int dstOffset, int count)
  void ShiftBufferIfNeeded()
  int ReadData(bool append)
  int ReadData(bool append, int charsRequired)
  bool EnsureChars(int relativePosition, bool append)
  bool ReadChars(int relativePosition, bool append)
  bool Read()
  Nullable`1<int> ReadAsInt32()
  Nullable`1<DateTime> ReadAsDateTime()
  string ReadAsString()
  Byte[] ReadAsBytes()
  object ReadStringValue(ReadType readType)
  JsonReaderException CreateUnexpectedCharacterException(char c)
  Nullable`1<bool> ReadAsBoolean()
  void ProcessValueComma()
  object ReadNumberValue(ReadType readType)
  Nullable`1<DateTimeOffset> ReadAsDateTimeOffset()
  Nullable`1<decimal> ReadAsDecimal()
  Nullable`1<double> ReadAsDouble()
  void HandleNull()
  void ReadFinished()
  bool ReadNullChar()
  void EnsureBuffer()
  void ReadStringIntoBuffer(char quote)
  void WriteCharToBuffer(char writeChar, int lastWritePosition, int writeToPosition)
  char ParseUnicode()
  void ReadNumberIntoBuffer()
  void ClearRecentString()
  bool ParsePostValue()
  bool ParseObject()
  bool ParseProperty()
  bool ValidIdentifierChar(char value)
  void ParseUnquotedProperty()
  bool ParseValue()
  void ProcessLineFeed()
  void ProcessCarriageReturn(bool append)
  bool EatWhitespace(bool oneOrMore)
  void ParseConstructor()
  void ParseNumber(ReadType readType)
  void ParseComment(bool setToken)
  void EndComment(bool setToken, int initialPosition, int endPosition)
  bool MatchValue(string value)
  bool MatchValueWithTrailingSeparator(string value)
  bool IsSeparator(char c)
  void ParseTrue()
  void ParseNull()
  void ParseUndefined()
  void ParseFalse()
  object ParseNumberNegativeInfinity(ReadType readType)
  object ParseNumberPositiveInfinity(ReadType readType)
  object ParseNumberNaN(ReadType readType)
  void Close()
  bool HasLineInfo()
  int get_LineNumber()
  int get_LinePosition()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonPropertyAttribute
Наследуется от: Attribute
Поля:
  Nullable`1<NullValueHandling> _nullValueHandling
  Nullable`1<DefaultValueHandling> _defaultValueHandling
  Nullable`1<ReferenceLoopHandling> _referenceLoopHandling
  Nullable`1<ObjectCreationHandling> _objectCreationHandling
  Nullable`1<TypeNameHandling> _typeNameHandling
  Nullable`1<bool> _isReference
  Nullable`1<int> _order
  Nullable`1<Required> _required
  Nullable`1<bool> _itemIsReference
  Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling
  Nullable`1<TypeNameHandling> _itemTypeNameHandling
  Type <ItemConverterType>k__BackingField
  Object[] <ItemConverterParameters>k__BackingField
  string <PropertyName>k__BackingField
Свойства:
  Type ItemConverterType
  Object[] ItemConverterParameters
  NullValueHandling NullValueHandling
  DefaultValueHandling DefaultValueHandling
  ReferenceLoopHandling ReferenceLoopHandling
  ObjectCreationHandling ObjectCreationHandling
  TypeNameHandling TypeNameHandling
  bool IsReference
  int Order
  Required Required
  string PropertyName
  ReferenceLoopHandling ItemReferenceLoopHandling
  TypeNameHandling ItemTypeNameHandling
  bool ItemIsReference
Методы:
  Type get_ItemConverterType()
  void set_ItemConverterType(Type value)
  Object[] get_ItemConverterParameters()
  void set_ItemConverterParameters(Object[] value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  bool get_IsReference()
  void set_IsReference(bool value)
  int get_Order()
  void set_Order(int value)
  Required get_Required()
  void set_Required(Required value)
  string get_PropertyName()
  void set_PropertyName(string value)
  ReferenceLoopHandling get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(ReferenceLoopHandling value)
  TypeNameHandling get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(TypeNameHandling value)
  bool get_ItemIsReference()
  void set_ItemIsReference(bool value)
  void .ctor()
  void .ctor(string propertyName)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonIgnoreAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonTextWriter
Наследуется от: JsonWriter
Поля:
  TextWriter _writer
  Base64Encoder _base64Encoder
  char _indentChar
  int _indentation
  char _quoteChar
  bool _quoteName
  Boolean[] _charEscapeFlags
  Char[] _writeBuffer
  IArrayPool`1<char> _arrayPool
  Char[] _indentChars
Свойства:
  Base64Encoder Base64Encoder
  IArrayPool`1<char> ArrayPool
  int Indentation
  char QuoteChar
  char IndentChar
  bool QuoteName
Методы:
  Base64Encoder get_Base64Encoder()
  IArrayPool`1<char> get_ArrayPool()
  void set_ArrayPool(IArrayPool`1<char> value)
  int get_Indentation()
  void set_Indentation(int value)
  char get_QuoteChar()
  void set_QuoteChar(char value)
  char get_IndentChar()
  void set_IndentChar(char value)
  bool get_QuoteName()
  void set_QuoteName(bool value)
  void .ctor(TextWriter textWriter)
  void Flush()
  void Close()
  void WriteStartObject()
  void WriteStartArray()
  void WriteStartConstructor(string name)
  void WriteEnd(JsonToken token)
  void WritePropertyName(string name)
  void WritePropertyName(string name, bool escape)
  void OnStringEscapeHandlingChanged()
  void UpdateCharEscapeFlags()
  void WriteIndent()
  void WriteValueDelimiter()
  void WriteIndentSpace()
  void WriteValueInternal(string value, JsonToken token)
  void WriteValue(object value)
  void WriteNull()
  void WriteUndefined()
  void WriteRaw(string json)
  void WriteValue(string value)
  void WriteEscapedString(string value, bool quote)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(Nullable`1<float> value)
  void WriteValue(double value)
  void WriteValue(Nullable`1<double> value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(Byte[] value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Guid value)
  void WriteValue(TimeSpan value)
  void WriteValue(Uri value)
  void WriteComment(string text)
  void WriteWhitespace(string ws)
  void EnsureWriteBuffer()
  void WriteIntegerValue(long value)
  void WriteIntegerValue(ulong uvalue)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonWriterException
Наследуется от: JsonException
Поля:
  string <Path>k__BackingField
Свойства:
  string Path
Методы:
  string get_Path()
  void set_Path(string value)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException, string path)
  JsonWriterException Create(JsonWriter writer, string message, Exception ex)
  JsonWriterException Create(string path, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonReaderException
Наследуется от: JsonException
Поля:
  int <LineNumber>k__BackingField
  int <LinePosition>k__BackingField
  string <Path>k__BackingField
Свойства:
  int LineNumber
  int LinePosition
  string Path
Методы:
  int get_LineNumber()
  void set_LineNumber(int value)
  int get_LinePosition()
  void set_LinePosition(int value)
  string get_Path()
  void set_Path(string value)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException, string path, int lineNumber, int linePosition)
  JsonReaderException Create(JsonReader reader, string message)
  JsonReaderException Create(JsonReader reader, string message, Exception ex)
  JsonReaderException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConverter
Наследуется от: object
Поля:
Свойства:
  bool CanRead
  bool CanWrite
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  bool get_CanRead()
  bool get_CanWrite()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConverterCollection
Наследуется от: Collection`1<JsonConverter>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonReader
Наследуется от: object
Поля:
  JsonToken _tokenType
  object _value
  char _quoteChar
  State _currentState
  JsonPosition _currentPosition
  CultureInfo _culture
  DateTimeZoneHandling _dateTimeZoneHandling
  Nullable`1<int> _maxDepth
  bool _hasExceededMaxDepth
  DateParseHandling _dateParseHandling
  FloatParseHandling _floatParseHandling
  string _dateFormatString
  List`1<JsonPosition> _stack
  bool <CloseInput>k__BackingField
  bool <SupportMultipleContent>k__BackingField
Свойства:
  State CurrentState
  bool CloseInput
  bool SupportMultipleContent
  char QuoteChar
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatParseHandling FloatParseHandling
  string DateFormatString
  Nullable`1<int> MaxDepth
  JsonToken TokenType
  object Value
  Type ValueType
  int Depth
  string Path
  CultureInfo Culture
Методы:
  State get_CurrentState()
  bool get_CloseInput()
  void set_CloseInput(bool value)
  bool get_SupportMultipleContent()
  void set_SupportMultipleContent(bool value)
  char get_QuoteChar()
  void set_QuoteChar(char value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  JsonToken get_TokenType()
  object get_Value()
  Type get_ValueType()
  int get_Depth()
  string get_Path()
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  JsonPosition GetPosition(int depth)
  void .ctor()
  void Push(JsonContainerType value)
  JsonContainerType Pop()
  JsonContainerType Peek()
  bool Read()
  Nullable`1<int> ReadAsInt32()
  Nullable`1<int> ReadInt32String(string s)
  string ReadAsString()
  Byte[] ReadAsBytes()
  Byte[] ReadArrayIntoByteArray()
  Nullable`1<double> ReadAsDouble()
  Nullable`1<double> ReadDoubleString(string s)
  Nullable`1<bool> ReadAsBoolean()
  Nullable`1<bool> ReadBooleanString(string s)
  Nullable`1<decimal> ReadAsDecimal()
  Nullable`1<decimal> ReadDecimalString(string s)
  Nullable`1<DateTime> ReadAsDateTime()
  Nullable`1<DateTime> ReadDateTimeString(string s)
  Nullable`1<DateTimeOffset> ReadAsDateTimeOffset()
  Nullable`1<DateTimeOffset> ReadDateTimeOffsetString(string s)
  void ReaderReadAndAssert()
  JsonReaderException CreateUnexpectedEndException()
  void ReadIntoWrappedTypeObject()
  void Skip()
  void SetToken(JsonToken newToken)
  void SetToken(JsonToken newToken, object value)
  void SetToken(JsonToken newToken, object value, bool updateIndex)
  void SetPostValueState(bool updateIndex)
  void UpdateScopeWithFinishedValue()
  void ValidateEnd(JsonToken endToken)
  void SetStateBasedOnCurrent()
  void SetFinished()
  JsonContainerType GetTypeForCloseToken(JsonToken token)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void Close()
  void ReadAndAssert()
  bool ReadAndMoveToContent()
  bool MoveToContent()
  JsonToken GetContentToken()
--------------------------------------------------
Класс: Newtonsoft.Json.JsonConvert
Наследуется от: object
Поля:
  Func`1<JsonSerializerSettings> <DefaultSettings>k__BackingField
  string True
  string False
  string Null
  string Undefined
  string PositiveInfinity
  string NegativeInfinity
  string NaN
  JsonSerializerSettings InitialSerializerSettings
Свойства:
  Func`1<JsonSerializerSettings> DefaultSettings
Методы:
  Func`1<JsonSerializerSettings> get_DefaultSettings()
  void set_DefaultSettings(Func`1<JsonSerializerSettings> value)
  void .cctor()
  JsonSerializerSettings GetDefaultSettings()
  string ToString(DateTime value)
  string ToString(DateTime value, DateFormatHandling format, DateTimeZoneHandling timeZoneHandling)
  string ToString(DateTimeOffset value)
  string ToString(DateTimeOffset value, DateFormatHandling format)
  string ToString(bool value)
  string ToString(char value)
  string ToString(Enum value)
  string ToString(int value)
  string ToString(short value)
  string ToString(ushort value)
  string ToString(UInt32 value)
  string ToString(long value)
  string ToString(ulong value)
  string ToString(float value)
  string ToString(float value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable)
  string EnsureFloatFormat(double value, string text, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable)
  string ToString(double value)
  string ToString(double value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable)
  string EnsureDecimalPlace(double value, string text)
  string EnsureDecimalPlace(string text)
  string ToString(byte value)
  string ToString(sbyte value)
  string ToString(decimal value)
  string ToString(Guid value)
  string ToString(Guid value, char quoteChar)
  string ToString(TimeSpan value)
  string ToString(TimeSpan value, char quoteChar)
  string ToString(Uri value)
  string ToString(Uri value, char quoteChar)
  string ToString(string value)
  string ToString(string value, char delimiter)
  string ToString(string value, char delimiter, StringEscapeHandling stringEscapeHandling)
  string ToString(object value)
  string SerializeObject(object value)
  string SerializeObject(object value, Formatting formatting)
  string SerializeObject(object value, JsonConverter[] converters)
  string SerializeObject(object value, Formatting formatting, JsonConverter[] converters)
  string SerializeObject(object value, JsonSerializerSettings settings)
  string SerializeObject(object value, Type type, JsonSerializerSettings settings)
  string SerializeObject(object value, Formatting formatting, JsonSerializerSettings settings)
  string SerializeObject(object value, Type type, Formatting formatting, JsonSerializerSettings settings)
  string SerializeObjectInternal(object value, Type type, JsonSerializer jsonSerializer)
  object DeserializeObject(string value)
  object DeserializeObject(string value, JsonSerializerSettings settings)
  object DeserializeObject(string value, Type type)
  T DeserializeObject(string value)
  T DeserializeAnonymousType(string value, T anonymousTypeObject)
  T DeserializeAnonymousType(string value, T anonymousTypeObject, JsonSerializerSettings settings)
  T DeserializeObject(string value, JsonConverter[] converters)
  T DeserializeObject(string value, JsonSerializerSettings settings)
  object DeserializeObject(string value, Type type, JsonConverter[] converters)
  object DeserializeObject(string value, Type type, JsonSerializerSettings settings)
  void PopulateObject(string value, object target)
  void PopulateObject(string value, object target, JsonSerializerSettings settings)
  string SerializeXmlNode(XmlNode node)
  string SerializeXmlNode(XmlNode node, Formatting formatting)
  string SerializeXmlNode(XmlNode node, Formatting formatting, bool omitRootObject)
  XmlDocument DeserializeXmlNode(string value)
  XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName)
  XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName, bool writeArrayAttribute)
  string SerializeXNode(XObject node)
  string SerializeXNode(XObject node, Formatting formatting)
  string SerializeXNode(XObject node, Formatting formatting, bool omitRootObject)
  XDocument DeserializeXNode(string value)
  XDocument DeserializeXNode(string value, string deserializeRootElementName)
  XDocument DeserializeXNode(string value, string deserializeRootElementName, bool writeArrayAttribute)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonSerializationException
Наследуется от: JsonException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  JsonSerializationException Create(JsonReader reader, string message)
  JsonSerializationException Create(JsonReader reader, string message, Exception ex)
  JsonSerializationException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.JsonSerializer
Наследуется от: object
Поля:
  TypeNameHandling _typeNameHandling
  FormatterAssemblyStyle _typeNameAssemblyFormat
  PreserveReferencesHandling _preserveReferencesHandling
  ReferenceLoopHandling _referenceLoopHandling
  MissingMemberHandling _missingMemberHandling
  ObjectCreationHandling _objectCreationHandling
  NullValueHandling _nullValueHandling
  DefaultValueHandling _defaultValueHandling
  ConstructorHandling _constructorHandling
  MetadataPropertyHandling _metadataPropertyHandling
  JsonConverterCollection _converters
  IContractResolver _contractResolver
  ITraceWriter _traceWriter
  IEqualityComparer _equalityComparer
  SerializationBinder _binder
  StreamingContext _context
  IReferenceResolver _referenceResolver
  Nullable`1<Formatting> _formatting
  Nullable`1<DateFormatHandling> _dateFormatHandling
  Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling
  Nullable`1<DateParseHandling> _dateParseHandling
  Nullable`1<FloatFormatHandling> _floatFormatHandling
  Nullable`1<FloatParseHandling> _floatParseHandling
  Nullable`1<StringEscapeHandling> _stringEscapeHandling
  CultureInfo _culture
  Nullable`1<int> _maxDepth
  bool _maxDepthSet
  Nullable`1<bool> _checkAdditionalContent
  string _dateFormatString
  bool _dateFormatStringSet
  EventHandler`1<ErrorEventArgs> Error
Свойства:
  IReferenceResolver ReferenceResolver
  SerializationBinder Binder
  ITraceWriter TraceWriter
  IEqualityComparer EqualityComparer
  TypeNameHandling TypeNameHandling
  FormatterAssemblyStyle TypeNameAssemblyFormat
  PreserveReferencesHandling PreserveReferencesHandling
  ReferenceLoopHandling ReferenceLoopHandling
  MissingMemberHandling MissingMemberHandling
  NullValueHandling NullValueHandling
  DefaultValueHandling DefaultValueHandling
  ObjectCreationHandling ObjectCreationHandling
  ConstructorHandling ConstructorHandling
  MetadataPropertyHandling MetadataPropertyHandling
  JsonConverterCollection Converters
  IContractResolver ContractResolver
  StreamingContext Context
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatParseHandling FloatParseHandling
  FloatFormatHandling FloatFormatHandling
  StringEscapeHandling StringEscapeHandling
  string DateFormatString
  CultureInfo Culture
  Nullable`1<int> MaxDepth
  bool CheckAdditionalContent
Методы:
  void add_Error(EventHandler`1<ErrorEventArgs> value)
  void remove_Error(EventHandler`1<ErrorEventArgs> value)
  IReferenceResolver get_ReferenceResolver()
  void set_ReferenceResolver(IReferenceResolver value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  ITraceWriter get_TraceWriter()
  void set_TraceWriter(ITraceWriter value)
  IEqualityComparer get_EqualityComparer()
  void set_EqualityComparer(IEqualityComparer value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  FormatterAssemblyStyle get_TypeNameAssemblyFormat()
  void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value)
  PreserveReferencesHandling get_PreserveReferencesHandling()
  void set_PreserveReferencesHandling(PreserveReferencesHandling value)
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  MissingMemberHandling get_MissingMemberHandling()
  void set_MissingMemberHandling(MissingMemberHandling value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  ConstructorHandling get_ConstructorHandling()
  void set_ConstructorHandling(ConstructorHandling value)
  MetadataPropertyHandling get_MetadataPropertyHandling()
  void set_MetadataPropertyHandling(MetadataPropertyHandling value)
  JsonConverterCollection get_Converters()
  IContractResolver get_ContractResolver()
  void set_ContractResolver(IContractResolver value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  bool get_CheckAdditionalContent()
  void set_CheckAdditionalContent(bool value)
  bool IsCheckAdditionalContentSet()
  void .ctor()
  JsonSerializer Create()
  JsonSerializer Create(JsonSerializerSettings settings)
  JsonSerializer CreateDefault()
  JsonSerializer CreateDefault(JsonSerializerSettings settings)
  void ApplySerializerSettings(JsonSerializer serializer, JsonSerializerSettings settings)
  void Populate(TextReader reader, object target)
  void Populate(JsonReader reader, object target)
  void PopulateInternal(JsonReader reader, object target)
  object Deserialize(JsonReader reader)
  object Deserialize(TextReader reader, Type objectType)
  T Deserialize(JsonReader reader)
  object Deserialize(JsonReader reader, Type objectType)
  object DeserializeInternal(JsonReader reader, Type objectType)
  void SetupReader(JsonReader reader, CultureInfo& previousCulture, Nullable`1& previousDateTimeZoneHandling, Nullable`1& previousDateParseHandling, Nullable`1& previousFloatParseHandling, Nullable`1& previousMaxDepth, String& previousDateFormatString)
  void ResetReader(JsonReader reader, CultureInfo previousCulture, Nullable`1<DateTimeZoneHandling> previousDateTimeZoneHandling, Nullable`1<DateParseHandling> previousDateParseHandling, Nullable`1<FloatParseHandling> previousFloatParseHandling, Nullable`1<int> previousMaxDepth, string previousDateFormatString)
  void Serialize(TextWriter textWriter, object value)
  void Serialize(JsonWriter jsonWriter, object value, Type objectType)
  void Serialize(TextWriter textWriter, object value, Type objectType)
  void Serialize(JsonWriter jsonWriter, object value)
  void SerializeInternal(JsonWriter jsonWriter, object value, Type objectType)
  IReferenceResolver GetReferenceResolver()
  JsonConverter GetMatchingConverter(Type type)
  JsonConverter GetMatchingConverter(IList`1<JsonConverter> converters, Type objectType)
  void OnError(ErrorEventArgs e)
--------------------------------------------------
Класс: Newtonsoft.Json.MissingMemberHandling
Наследуется от: Enum
Поля:
  int value__
  MissingMemberHandling Ignore
  MissingMemberHandling Error
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.NullValueHandling
Наследуется от: Enum
Поля:
  int value__
  NullValueHandling Include
  NullValueHandling Ignore
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.ReferenceLoopHandling
Наследуется от: Enum
Поля:
  int value__
  ReferenceLoopHandling Error
  ReferenceLoopHandling Ignore
  ReferenceLoopHandling Serialize
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.TypeNameHandling
Наследуется от: Enum
Поля:
  int value__
  TypeNameHandling None
  TypeNameHandling Objects
  TypeNameHandling Arrays
  TypeNameHandling All
  TypeNameHandling Auto
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonToken
Наследуется от: Enum
Поля:
  int value__
  JsonToken None
  JsonToken StartObject
  JsonToken StartArray
  JsonToken StartConstructor
  JsonToken PropertyName
  JsonToken Comment
  JsonToken Raw
  JsonToken Integer
  JsonToken Float
  JsonToken String
  JsonToken Boolean
  JsonToken Null
  JsonToken Undefined
  JsonToken EndObject
  JsonToken EndArray
  JsonToken EndConstructor
  JsonToken Date
  JsonToken Bytes
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.JsonWriter
Наследуется от: object
Поля:
  State[][] StateArray
  State[][] StateArrayTempate
  List`1<JsonPosition> _stack
  JsonPosition _currentPosition
  State _currentState
  Formatting _formatting
  bool <CloseOutput>k__BackingField
  DateFormatHandling _dateFormatHandling
  DateTimeZoneHandling _dateTimeZoneHandling
  StringEscapeHandling _stringEscapeHandling
  FloatFormatHandling _floatFormatHandling
  string _dateFormatString
  CultureInfo _culture
Свойства:
  bool CloseOutput
  int Top
  WriteState WriteState
  string ContainerPath
  string Path
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  StringEscapeHandling StringEscapeHandling
  FloatFormatHandling FloatFormatHandling
  string DateFormatString
  CultureInfo Culture
Методы:
  State[][] BuildStateArray()
  void .cctor()
  bool get_CloseOutput()
  void set_CloseOutput(bool value)
  int get_Top()
  WriteState get_WriteState()
  string get_ContainerPath()
  string get_Path()
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  void OnStringEscapeHandlingChanged()
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  void .ctor()
  void UpdateScopeWithFinishedValue()
  void Push(JsonContainerType value)
  JsonContainerType Pop()
  JsonContainerType Peek()
  void Flush()
  void Close()
  void WriteStartObject()
  void WriteEndObject()
  void WriteStartArray()
  void WriteEndArray()
  void WriteStartConstructor(string name)
  void WriteEndConstructor()
  void WritePropertyName(string name)
  void WritePropertyName(string name, bool escape)
  void WriteEnd()
  void WriteToken(JsonReader reader)
  void WriteToken(JsonReader reader, bool writeChildren)
  void WriteToken(JsonToken token, object value)
  void WriteToken(JsonToken token)
  void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments)
  void WriteConstructorDate(JsonReader reader)
  void WriteEnd(JsonContainerType type)
  void AutoCompleteAll()
  JsonToken GetCloseTokenForType(JsonContainerType type)
  void AutoCompleteClose(JsonContainerType type)
  void WriteEnd(JsonToken token)
  void WriteIndent()
  void WriteValueDelimiter()
  void WriteIndentSpace()
  void AutoComplete(JsonToken tokenBeingWritten)
  void WriteNull()
  void WriteUndefined()
  void WriteRaw(string json)
  void WriteRawValue(string json)
  void WriteValue(string value)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(double value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Guid value)
  void WriteValue(TimeSpan value)
  void WriteValue(Nullable`1<int> value)
  void WriteValue(Nullable`1<UInt32> value)
  void WriteValue(Nullable`1<long> value)
  void WriteValue(Nullable`1<ulong> value)
  void WriteValue(Nullable`1<float> value)
  void WriteValue(Nullable`1<double> value)
  void WriteValue(Nullable`1<bool> value)
  void WriteValue(Nullable`1<short> value)
  void WriteValue(Nullable`1<ushort> value)
  void WriteValue(Nullable`1<char> value)
  void WriteValue(Nullable`1<byte> value)
  void WriteValue(Nullable`1<sbyte> value)
  void WriteValue(Nullable`1<decimal> value)
  void WriteValue(Nullable`1<DateTime> value)
  void WriteValue(Nullable`1<DateTimeOffset> value)
  void WriteValue(Nullable`1<Guid> value)
  void WriteValue(Nullable`1<TimeSpan> value)
  void WriteValue(Byte[] value)
  void WriteValue(Uri value)
  void WriteValue(object value)
  void WriteComment(string text)
  void WriteWhitespace(string ws)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void WriteValue(JsonWriter writer, PrimitiveTypeCode typeCode, object value)
  JsonWriterException CreateUnsupportedTypeException(JsonWriter writer, object value)
  void SetWriteState(JsonToken token, object value)
  void InternalWriteEnd(JsonContainerType container)
  void InternalWritePropertyName(string name)
  void InternalWriteRaw()
  void InternalWriteStart(JsonToken token, JsonContainerType container)
  void InternalWriteValue(JsonToken token)
  void InternalWriteWhitespace(string ws)
  void InternalWriteComment()
--------------------------------------------------
Класс: Newtonsoft.Json.WriteState
Наследуется от: Enum
Поля:
  int value__
  WriteState Error
  WriteState Closed
  WriteState Object
  WriteState Array
  WriteState Constructor
  WriteState Property
  WriteState Start
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ParserTimeZone
Наследуется от: Enum
Поля:
  int value__
  ParserTimeZone Unspecified
  ParserTimeZone Utc
  ParserTimeZone LocalWestOfUtc
  ParserTimeZone LocalEastOfUtc
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.DateTimeParser
Наследуется от: ValueType
Поля:
  int Year
  int Month
  int Day
  int Hour
  int Minute
  int Second
  int Fraction
  int ZoneHour
  int ZoneMinute
  ParserTimeZone Zone
  Char[] _text
  int _end
  Int32[] Power10
  int Lzyyyy
  int Lzyyyy_
  int Lzyyyy_MM
  int Lzyyyy_MM_
  int Lzyyyy_MM_dd
  int Lzyyyy_MM_ddT
  int LzHH
  int LzHH_
  int LzHH_mm
  int LzHH_mm_
  int LzHH_mm_ss
  int Lz_
  int Lz_zz
  short MaxFractionDigits
Свойства:
Методы:
  void .cctor()
  bool Parse(Char[] text, int startIndex, int length)
  bool ParseDate(int start)
  bool ParseTimeAndZoneAndWhitespace(int start)
  bool ParseTime(Int32& start)
  bool ParseZone(int start)
  bool Parse4Digit(int start, Int32& num)
  bool Parse2Digit(int start, Int32& num)
  bool ParseChar(int start, char ch)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.Base64Encoder
Наследуется от: object
Поля:
  int Base64LineSize
  int LineSizeInBytes
  Char[] _charsLine
  TextWriter _writer
  Byte[] _leftOverBytes
  int _leftOverBytesCount
Свойства:
Методы:
  void .ctor(TextWriter writer)
  void Encode(Byte[] buffer, int index, int count)
  void Flush()
  void WriteChars(Char[] chars, int index, int count)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.JsonTokenUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsEndToken(JsonToken token)
  bool IsStartToken(JsonToken token)
  bool IsPrimitiveToken(JsonToken token)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.PropertyNameTable
Наследуется от: object
Поля:
  int HashCodeRandomizer
  int _count
  Entry[] _entries
  int _mask
Свойства:
Методы:
  void .cctor()
  void .ctor()
  string Get(Char[] key, int start, int length)
  string Add(string key)
  string AddEntry(string str, int hashCode)
  void Grow()
  bool TextEquals(string str1, Char[] str2, int str2Start, int str2Length)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionDelegateFactory
Наследуется от: object
Поля:
Свойства:
Методы:
  Func`2<T, object> CreateGet(MemberInfo memberInfo)
  Action`2<T, object> CreateSet(MemberInfo memberInfo)
  MethodCall`2<T, object> CreateMethodCall(MethodBase method)
  ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method)
  Func`1<T> CreateDefaultConstructor(Type type)
  Func`2<T, object> CreateGet(PropertyInfo propertyInfo)
  Func`2<T, object> CreateGet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(PropertyInfo propertyInfo)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory
Наследуется от: ReflectionDelegateFactory
Поля:
  LateBoundReflectionDelegateFactory _instance
Свойства:
  ReflectionDelegateFactory Instance
Методы:
  ReflectionDelegateFactory get_Instance()
  ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method)
  MethodCall`2<T, object> CreateMethodCall(MethodBase method)
  Func`1<T> CreateDefaultConstructor(Type type)
  Func`2<T, object> CreateGet(PropertyInfo propertyInfo)
  Func`2<T, object> CreateGet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(FieldInfo fieldInfo)
  Action`2<T, object> CreateSet(PropertyInfo propertyInfo)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.MethodCall`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T target, Object[] args)
  IAsyncResult BeginInvoke(T target, Object[] args, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionMember
Наследуется от: object
Поля:
  Type <MemberType>k__BackingField
  Func`2<object, object> <Getter>k__BackingField
  Action`2<object, object> <Setter>k__BackingField
Свойства:
  Type MemberType
  Func`2<object, object> Getter
  Action`2<object, object> Setter
Методы:
  Type get_MemberType()
  void set_MemberType(Type value)
  Func`2<object, object> get_Getter()
  void set_Getter(Func`2<object, object> value)
  Action`2<object, object> get_Setter()
  void set_Setter(Action`2<object, object> value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionObject
Наследуется от: object
Поля:
  ObjectConstructor`1<object> <Creator>k__BackingField
  IDictionary`2<string, ReflectionMember> <Members>k__BackingField
Свойства:
  ObjectConstructor`1<object> Creator
  IDictionary`2<string, ReflectionMember> Members
Методы:
  ObjectConstructor`1<object> get_Creator()
  void set_Creator(ObjectConstructor`1<object> value)
  IDictionary`2<string, ReflectionMember> get_Members()
  void set_Members(IDictionary`2<string, ReflectionMember> value)
  void .ctor()
  object GetValue(object target, string member)
  void SetValue(object target, string member, object value)
  Type GetType(string member)
  ReflectionObject Create(Type t, String[] memberNames)
  ReflectionObject Create(Type t, MethodBase creator, String[] memberNames)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringReference
Наследуется от: ValueType
Поля:
  Char[] _chars
  int _startIndex
  int _length
Свойства:
  char Item
  Char[] Chars
  int StartIndex
  int Length
Методы:
  char get_Item(int i)
  Char[] get_Chars()
  int get_StartIndex()
  int get_Length()
  void .ctor(Char[] chars, int startIndex, int length)
  string ToString()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringReferenceExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  int IndexOf(StringReference s, char c, int startIndex, int length)
  bool StartsWith(StringReference s, string text)
  bool EndsWith(StringReference s, string text)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ThreadSafeStore`2
Наследуется от: object
Поля:
  object _lock
  Dictionary`2<TKey, TValue> _store
  Func`2<TKey, TValue> _creator
Свойства:
Методы:
  void .ctor(Func`2<TKey, TValue> creator)
  TValue Get(TKey key)
  TValue AddValue(TKey key)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.BidirectionalDictionary`2
Наследуется от: object
Поля:
  IDictionary`2<TFirst, TSecond> _firstToSecond
  IDictionary`2<TSecond, TFirst> _secondToFirst
  string _duplicateFirstErrorMessage
  string _duplicateSecondErrorMessage
Свойства:
Методы:
  void .ctor()
  void .ctor(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer)
  void .ctor(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer, string duplicateFirstErrorMessage, string duplicateSecondErrorMessage)
  void Set(TFirst first, TSecond second)
  bool TryGetByFirst(TFirst first, TSecond& second)
  bool TryGetBySecond(TSecond second, TFirst& first)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.PrimitiveTypeCode
Наследуется от: Enum
Поля:
  int value__
  PrimitiveTypeCode Empty
  PrimitiveTypeCode Object
  PrimitiveTypeCode Char
  PrimitiveTypeCode CharNullable
  PrimitiveTypeCode Boolean
  PrimitiveTypeCode BooleanNullable
  PrimitiveTypeCode SByte
  PrimitiveTypeCode SByteNullable
  PrimitiveTypeCode Int16
  PrimitiveTypeCode Int16Nullable
  PrimitiveTypeCode UInt16
  PrimitiveTypeCode UInt16Nullable
  PrimitiveTypeCode Int32
  PrimitiveTypeCode Int32Nullable
  PrimitiveTypeCode Byte
  PrimitiveTypeCode ByteNullable
  PrimitiveTypeCode UInt32
  PrimitiveTypeCode UInt32Nullable
  PrimitiveTypeCode Int64
  PrimitiveTypeCode Int64Nullable
  PrimitiveTypeCode UInt64
  PrimitiveTypeCode UInt64Nullable
  PrimitiveTypeCode Single
  PrimitiveTypeCode SingleNullable
  PrimitiveTypeCode Double
  PrimitiveTypeCode DoubleNullable
  PrimitiveTypeCode DateTime
  PrimitiveTypeCode DateTimeNullable
  PrimitiveTypeCode DateTimeOffset
  PrimitiveTypeCode DateTimeOffsetNullable
  PrimitiveTypeCode Decimal
  PrimitiveTypeCode DecimalNullable
  PrimitiveTypeCode Guid
  PrimitiveTypeCode GuidNullable
  PrimitiveTypeCode TimeSpan
  PrimitiveTypeCode TimeSpanNullable
  PrimitiveTypeCode BigInteger
  PrimitiveTypeCode BigIntegerNullable
  PrimitiveTypeCode Uri
  PrimitiveTypeCode String
  PrimitiveTypeCode Bytes
  PrimitiveTypeCode DBNull
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.TypeInformation
Наследуется от: object
Поля:
  Type <Type>k__BackingField
  PrimitiveTypeCode <TypeCode>k__BackingField
Свойства:
  Type Type
  PrimitiveTypeCode TypeCode
Методы:
  Type get_Type()
  void set_Type(Type value)
  PrimitiveTypeCode get_TypeCode()
  void set_TypeCode(PrimitiveTypeCode value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ParseResult
Наследуется от: Enum
Поля:
  int value__
  ParseResult None
  ParseResult Success
  ParseResult Overflow
  ParseResult Invalid
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ConvertUtils
Наследуется от: object
Поля:
  Dictionary`2<Type, PrimitiveTypeCode> TypeCodeMap
  TypeInformation[] PrimitiveTypeCodes
  ThreadSafeStore`2<TypeConvertKey, Func`2<object, object>> CastConverters
Свойства:
Методы:
  PrimitiveTypeCode GetTypeCode(Type t)
  PrimitiveTypeCode GetTypeCode(Type t, Boolean& isEnum)
  TypeInformation GetTypeInformation(IConvertible convertable)
  bool IsConvertible(Type t)
  TimeSpan ParseTimeSpan(string input)
  Func`2<object, object> CreateCastConverter(TypeConvertKey t)
  object Convert(object initialValue, CultureInfo culture, Type targetType)
  bool TryConvert(object initialValue, CultureInfo culture, Type targetType, Object& value)
  ConvertResult TryConvertInternal(object initialValue, CultureInfo culture, Type targetType, Object& value)
  object ConvertOrCast(object initialValue, CultureInfo culture, Type targetType)
  object EnsureTypeAssignable(object value, Type initialType, Type targetType)
  TypeConverter GetConverter(Type t)
  bool VersionTryParse(string input, Version& result)
  bool IsInteger(object value)
  ParseResult Int32TryParse(Char[] chars, int start, int length, Int32& value)
  ParseResult Int64TryParse(Char[] chars, int start, int length, Int64& value)
  bool TryConvertGuid(string s, Guid& g)
  int HexTextToInt(Char[] text, int start, int end)
  int HexCharToInt(char ch)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.IWrappedCollection
Поля:
Свойства:
  object UnderlyingCollection
Методы:
  object get_UnderlyingCollection()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.CollectionWrapper`1
Наследуется от: object
Поля:
  IList _list
  ICollection`1<T> _genericCollection
  object _syncRoot
Свойства:
  int Count
  bool IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  object UnderlyingCollection
Методы:
  void .ctor(IList list)
  void .ctor(ICollection`1<T> list)
  void Add(T item)
  void Clear()
  bool Contains(T item)
  void CopyTo(T[] array, int arrayIndex)
  int get_Count()
  bool get_IsReadOnly()
  bool Remove(T item)
  IEnumerator`1<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.RemoveAt(int index)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsFixedSize()
  void System.Collections.IList.Remove(object value)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void System.Collections.ICollection.CopyTo(Array array, int arrayIndex)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void VerifyValueType(object value)
  bool IsCompatibleObject(object value)
  object get_UnderlyingCollection()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.DateTimeUtils
Наследуется от: object
Поля:
  long InitialJavaScriptDateTicks
  string IsoDateFormat
  int DaysPer100Years
  int DaysPer400Years
  int DaysPer4Years
  int DaysPerYear
  long TicksPerDay
  Int32[] DaysToMonth365
  Int32[] DaysToMonth366
Свойства:
Методы:
  void .cctor()
  TimeSpan GetUtcOffset(DateTime d)
  XmlDateTimeSerializationMode ToSerializationMode(DateTimeKind kind)
  DateTime EnsureDateTime(DateTime value, DateTimeZoneHandling timeZone)
  DateTime SwitchToLocalTime(DateTime value)
  DateTime SwitchToUtcTime(DateTime value)
  long ToUniversalTicks(DateTime dateTime)
  long ToUniversalTicks(DateTime dateTime, TimeSpan offset)
  long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, TimeSpan offset)
  long ConvertDateTimeToJavaScriptTicks(DateTime dateTime)
  long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, bool convertToUtc)
  long UniversialTicksToJavaScriptTicks(long universialTicks)
  DateTime ConvertJavaScriptTicksToDateTime(long javaScriptTicks)
  bool TryParseDateTimeIso(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt)
  bool TryParseDateTimeOffsetIso(StringReference text, DateTimeOffset& dt)
  DateTime CreateDateTime(DateTimeParser dateTimeParser)
  bool TryParseDateTime(StringReference s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt)
  bool TryParseDateTime(string s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt)
  bool TryParseDateTimeOffset(StringReference s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt)
  bool TryParseDateTimeOffset(string s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt)
  bool TryParseMicrosoftDate(StringReference text, Int64& ticks, TimeSpan& offset, DateTimeKind& kind)
  bool TryParseDateTimeMicrosoft(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt)
  bool TryParseDateTimeExact(string text, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt)
  bool TryParseDateTimeOffsetMicrosoft(StringReference text, DateTimeOffset& dt)
  bool TryParseDateTimeOffsetExact(string text, string dateFormatString, CultureInfo culture, DateTimeOffset& dt)
  bool TryReadOffset(StringReference offsetText, int startIndex, TimeSpan& offset)
  void WriteDateTimeString(TextWriter writer, DateTime value, DateFormatHandling format, string formatString, CultureInfo culture)
  int WriteDateTimeString(Char[] chars, int start, DateTime value, Nullable`1<TimeSpan> offset, DateTimeKind kind, DateFormatHandling format)
  int WriteDefaultIsoDate(Char[] chars, int start, DateTime dt)
  void CopyIntToCharArray(Char[] chars, int start, int value, int digits)
  int WriteDateTimeOffset(Char[] chars, int start, TimeSpan offset, DateFormatHandling format)
  void WriteDateTimeOffsetString(TextWriter writer, DateTimeOffset value, DateFormatHandling format, string formatString, CultureInfo culture)
  void GetDateValues(DateTime td, Int32& year, Int32& month, Int32& day)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.IWrappedDictionary
Поля:
Свойства:
  object UnderlyingDictionary
Методы:
  object get_UnderlyingDictionary()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.DictionaryWrapper`2
Наследуется от: object
Поля:
  IDictionary _dictionary
  IDictionary`2<TKey, TValue> _genericDictionary
  object _syncRoot
Свойства:
  ICollection`1<TKey> Keys
  ICollection`1<TValue> Values
  TValue Item
  int Count
  bool IsReadOnly
  object System.Collections.IDictionary.Item
  bool System.Collections.IDictionary.IsFixedSize
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  object UnderlyingDictionary
Методы:
  void .ctor(IDictionary dictionary)
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  void Add(TKey key, TValue value)
  bool ContainsKey(TKey key)
  ICollection`1<TKey> get_Keys()
  bool Remove(TKey key)
  bool TryGetValue(TKey key, TValue& value)
  ICollection`1<TValue> get_Values()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  void Add(KeyValuePair`2<TKey, TValue> item)
  void Clear()
  bool Contains(KeyValuePair`2<TKey, TValue> item)
  void CopyTo(KeyValuePair`2[] array, int arrayIndex)
  int get_Count()
  bool get_IsReadOnly()
  bool Remove(KeyValuePair`2<TKey, TValue> item)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.IDictionary.Add(object key, object value)
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  bool System.Collections.IDictionary.Contains(object key)
  bool System.Collections.IDictionary.get_IsFixedSize()
  ICollection System.Collections.IDictionary.get_Keys()
  void Remove(object key)
  ICollection System.Collections.IDictionary.get_Values()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  object get_UnderlyingDictionary()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.EnumUtils
Наследуется от: object
Поля:
  ThreadSafeStore`2<Type, BidirectionalDictionary`2<string, string>> EnumMemberNamesPerType
Свойства:
Методы:
  BidirectionalDictionary`2<string, string> InitializeEnumType(Type type)
  IList`1<T> GetFlagsValues(T value)
  IList`1<EnumValue`1<ulong>> GetNamesAndValues()
  IList`1<EnumValue`1<TUnderlyingType>> GetNamesAndValues(Type enumType)
  IList`1<object> GetValues(Type enumType)
  IList`1<string> GetNames(Type enumType)
  object ParseEnumName(string enumText, bool isNullable, Type t)
  string ToEnumName(Type enumType, string enumText, bool camelCaseText)
  string ResolvedEnumName(BidirectionalDictionary`2<string, string> map, string enumText)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.EnumValue`1
Наследуется от: object
Поля:
  string _name
  T _value
Свойства:
  string Name
  T Value
Методы:
  string get_Name()
  T get_Value()
  void .ctor(string name, T value)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.BufferUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  Char[] RentBuffer(IArrayPool`1<char> bufferPool, int minSize)
  void ReturnBuffer(IArrayPool`1<char> bufferPool, Char[] buffer)
  Char[] EnsureBufferSize(IArrayPool`1<char> bufferPool, int size, Char[] buffer)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.JavaScriptUtils
Наследуется от: object
Поля:
  Boolean[] SingleQuoteCharEscapeFlags
  Boolean[] DoubleQuoteCharEscapeFlags
  Boolean[] HtmlCharEscapeFlags
  int UnicodeTextLength
  string EscapedUnicodeText
Свойства:
Методы:
  void .cctor()
  Boolean[] GetCharEscapeFlags(StringEscapeHandling stringEscapeHandling, char quoteChar)
  bool ShouldEscapeJavaScriptString(string s, Boolean[] charEscapeFlags)
  void WriteEscapedJavaScriptString(TextWriter writer, string s, char delimiter, bool appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, IArrayPool`1<char> bufferPool, Char[]& writeBuffer)
  string ToEscapedJavaScriptString(string value, char delimiter, bool appendDelimiters, StringEscapeHandling stringEscapeHandling)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringBuffer
Наследуется от: ValueType
Поля:
  Char[] _buffer
  int _position
Свойства:
  int Position
  bool IsEmpty
  Char[] InternalBuffer
Методы:
  int get_Position()
  void set_Position(int value)
  bool get_IsEmpty()
  void .ctor(IArrayPool`1<char> bufferPool, int initalSize)
  void .ctor(Char[] buffer)
  void Append(IArrayPool`1<char> bufferPool, char value)
  void Append(IArrayPool`1<char> bufferPool, Char[] buffer, int startIndex, int count)
  void Clear(IArrayPool`1<char> bufferPool)
  void EnsureSize(IArrayPool`1<char> bufferPool, int appendLength)
  string ToString()
  string ToString(int start, int length)
  Char[] get_InternalBuffer()
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.CollectionUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsNullOrEmpty(ICollection`1<T> collection)
  void AddRange(IList`1<T> initial, IEnumerable`1<T> collection)
  void AddRange(IList`1<T> initial, IEnumerable collection)
  bool IsDictionaryType(Type type)
  ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType)
  ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType, Type constructorArgumentType)
  bool AddDistinct(IList`1<T> list, T value)
  bool AddDistinct(IList`1<T> list, T value, IEqualityComparer`1<T> comparer)
  bool ContainsValue(IEnumerable`1<TSource> source, TSource value, IEqualityComparer`1<TSource> comparer)
  bool AddRangeDistinct(IList`1<T> list, IEnumerable`1<T> values, IEqualityComparer`1<T> comparer)
  int IndexOf(IEnumerable`1<T> collection, Func`2<T, bool> predicate)
  bool Contains(List`1<T> list, T value, IEqualityComparer comparer)
  int IndexOfReference(List`1<T> list, T item)
  IList`1<int> GetDimensions(IList values, int dimensionsCount)
  void CopyFromJaggedToMultidimensionalArray(IList values, Array multidimensionalArray, Int32[] indices)
  object JaggedArrayGetValue(IList values, Int32[] indices)
  Array ToMultidimensionalArray(IList values, Type type, int rank)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.MathUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  int IntLength(ulong i)
  char IntToHex(int n)
  Nullable`1<int> Min(Nullable`1<int> val1, Nullable`1<int> val2)
  Nullable`1<int> Max(Nullable`1<int> val1, Nullable`1<int> val2)
  Nullable`1<double> Max(Nullable`1<double> val1, Nullable`1<double> val2)
  bool ApproxEquals(double d1, double d2)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.Creator`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  T Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  T EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.MiscellaneousUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ValueEquals(object objA, object objB)
  ArgumentOutOfRangeException CreateArgumentOutOfRangeException(string paramName, object actualValue, string message)
  string ToString(object value)
  int ByteArrayCompare(Byte[] a1, Byte[] a2)
  string GetPrefix(string qualifiedName)
  string GetLocalName(string qualifiedName)
  void GetQualifiedNameParts(string qualifiedName, String& prefix, String& localName)
  string FormatValueForPrint(object value)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ReflectionUtils
Наследуется от: object
Поля:
  Type[] EmptyTypes
Свойства:
Методы:
  void .cctor()
  bool IsVirtual(PropertyInfo propertyInfo)
  MethodInfo GetBaseDefinition(PropertyInfo propertyInfo)
  bool IsPublic(PropertyInfo property)
  Type GetObjectType(object v)
  string GetTypeName(Type t, FormatterAssemblyStyle assemblyFormat, SerializationBinder binder)
  string RemoveAssemblyDetails(string fullyQualifiedTypeName)
  bool HasDefaultConstructor(Type t, bool nonPublic)
  ConstructorInfo GetDefaultConstructor(Type t)
  ConstructorInfo GetDefaultConstructor(Type t, bool nonPublic)
  bool IsNullable(Type t)
  bool IsNullableType(Type t)
  Type EnsureNotNullableType(Type t)
  bool IsGenericDefinition(Type type, Type genericInterfaceDefinition)
  bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition)
  bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition, Type& implementingType)
  bool InheritsGenericDefinition(Type type, Type genericClassDefinition)
  bool InheritsGenericDefinition(Type type, Type genericClassDefinition, Type& implementingType)
  bool InheritsGenericDefinitionInternal(Type currentType, Type genericClassDefinition, Type& implementingType)
  Type GetCollectionItemType(Type type)
  void GetDictionaryKeyValueTypes(Type dictionaryType, Type& keyType, Type& valueType)
  Type GetMemberUnderlyingType(MemberInfo member)
  bool IsIndexedProperty(MemberInfo member)
  bool IsIndexedProperty(PropertyInfo property)
  object GetMemberValue(MemberInfo member, object target)
  void SetMemberValue(MemberInfo member, object target, object value)
  bool CanReadMemberValue(MemberInfo member, bool nonPublic)
  bool CanSetMemberValue(MemberInfo member, bool nonPublic, bool canSetReadOnly)
  List`1<MemberInfo> GetFieldsAndProperties(Type type, BindingFlags bindingAttr)
  bool IsOverridenGenericMember(MemberInfo memberInfo, BindingFlags bindingAttr)
  T GetAttribute(object attributeProvider)
  T GetAttribute(object attributeProvider, bool inherit)
  T[] GetAttributes(object attributeProvider, bool inherit)
  Attribute[] GetAttributes(object attributeProvider, Type attributeType, bool inherit)
  void SplitFullyQualifiedTypeName(string fullyQualifiedTypeName, String& typeName, String& assemblyName)
  Nullable`1<int> GetAssemblyDelimiterIndex(string fullyQualifiedTypeName)
  MemberInfo GetMemberInfoFromType(Type targetType, MemberInfo memberInfo)
  IEnumerable`1<FieldInfo> GetFields(Type targetType, BindingFlags bindingAttr)
  void GetChildPrivateFields(IList`1<MemberInfo> initialFields, Type targetType, BindingFlags bindingAttr)
  IEnumerable`1<PropertyInfo> GetProperties(Type targetType, BindingFlags bindingAttr)
  BindingFlags RemoveFlag(BindingFlags bindingAttr, BindingFlags flag)
  void GetChildPrivateProperties(IList`1<PropertyInfo> initialProperties, Type targetType, BindingFlags bindingAttr)
  bool IsMethodOverridden(Type currentType, Type methodDeclaringType, string method)
  object GetDefaultValue(Type type)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.StringUtils
Наследуется от: object
Поля:
  string CarriageReturnLineFeed
  string Empty
  char CarriageReturn
  char LineFeed
  char Tab
Свойства:
Методы:
  string FormatWith(string format, IFormatProvider provider, object arg0)
  string FormatWith(string format, IFormatProvider provider, object arg0, object arg1)
  string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2)
  string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2, object arg3)
  string FormatWith(string format, IFormatProvider provider, Object[] args)
  bool IsWhiteSpace(string s)
  string NullEmptyString(string s)
  StringWriter CreateStringWriter(int capacity)
  Nullable`1<int> GetLength(string value)
  void ToCharAsUnicode(char c, Char[] buffer)
  TSource ForgivingCaseSensitiveFind(IEnumerable`1<TSource> source, Func`2<TSource, string> valueSelector, string testValue)
  string ToCamelCase(string s)
  bool IsHighSurrogate(char c)
  bool IsLowSurrogate(char c)
  bool StartsWith(string source, char value)
  bool EndsWith(string source, char value)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.TypeExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  MethodInfo Method(Delegate d)
  MemberTypes MemberType(MemberInfo memberInfo)
  bool ContainsGenericParameters(Type type)
  bool IsInterface(Type type)
  bool IsGenericType(Type type)
  bool IsGenericTypeDefinition(Type type)
  Type BaseType(Type type)
  Assembly Assembly(Type type)
  bool IsEnum(Type type)
  bool IsClass(Type type)
  bool IsSealed(Type type)
  bool IsAbstract(Type type)
  bool IsVisible(Type type)
  bool IsValueType(Type type)
  bool AssignableToTypeName(Type type, string fullTypeName, Type& match)
  bool AssignableToTypeName(Type type, string fullTypeName)
  bool ImplementInterface(Type type, Type interfaceType)
--------------------------------------------------
Класс: Newtonsoft.Json.Utilities.ValidationUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  void ArgumentNotNull(object value, string parameterName)
--------------------------------------------------
Класс: Newtonsoft.Json.Shims.PreserveAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DiagnosticsTraceWriter
Наследуется от: object
Поля:
  TraceLevel <LevelFilter>k__BackingField
Свойства:
  TraceLevel LevelFilter
Методы:
  TraceLevel get_LevelFilter()
  void set_LevelFilter(TraceLevel value)
  TraceEventType GetTraceEventType(TraceLevel level)
  void Trace(TraceLevel level, string message, Exception ex)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IAttributeProvider
Поля:
Свойства:
Методы:
  IList`1<Attribute> GetAttributes(bool inherit)
  IList`1<Attribute> GetAttributes(Type attributeType, bool inherit)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ITraceWriter
Поля:
Свойства:
  TraceLevel LevelFilter
Методы:
  TraceLevel get_LevelFilter()
  void Trace(TraceLevel level, string message, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonContainerContract
Наследуется от: JsonContract
Поля:
  JsonContract _itemContract
  JsonContract _finalItemContract
  JsonConverter <ItemConverter>k__BackingField
  Nullable`1<bool> <ItemIsReference>k__BackingField
  Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
  Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField
Свойства:
  JsonContract ItemContract
  JsonContract FinalItemContract
  JsonConverter ItemConverter
  Nullable`1<bool> ItemIsReference
  Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling
  Nullable`1<TypeNameHandling> ItemTypeNameHandling
Методы:
  JsonContract get_ItemContract()
  void set_ItemContract(JsonContract value)
  JsonContract get_FinalItemContract()
  JsonConverter get_ItemConverter()
  void set_ItemConverter(JsonConverter value)
  Nullable`1<bool> get_ItemIsReference()
  void set_ItemIsReference(Nullable`1<bool> value)
  Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value)
  Nullable`1<TypeNameHandling> get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value)
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.MemoryTraceWriter
Наследуется от: object
Поля:
  Queue`1<string> _traceMessages
  TraceLevel <LevelFilter>k__BackingField
Свойства:
  TraceLevel LevelFilter
Методы:
  TraceLevel get_LevelFilter()
  void set_LevelFilter(TraceLevel value)
  void .ctor()
  void Trace(TraceLevel level, string message, Exception ex)
  IEnumerable`1<string> GetTraceMessages()
  string ToString()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ReflectionAttributeProvider
Наследуется от: object
Поля:
  object _attributeProvider
Свойства:
Методы:
  void .ctor(object attributeProvider)
  IList`1<Attribute> GetAttributes(bool inherit)
  IList`1<Attribute> GetAttributes(Type attributeType, bool inherit)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.TraceJsonReader
Наследуется от: JsonReader
Поля:
  JsonReader _innerReader
  JsonTextWriter _textWriter
  StringWriter _sw
Свойства:
  int Depth
  string Path
  char QuoteChar
  JsonToken TokenType
  object Value
  Type ValueType
  int Newtonsoft.Json.IJsonLineInfo.LineNumber
  int Newtonsoft.Json.IJsonLineInfo.LinePosition
Методы:
  void .ctor(JsonReader innerReader)
  string GetDeserializedJsonMessage()
  bool Read()
  Nullable`1<int> ReadAsInt32()
  string ReadAsString()
  Byte[] ReadAsBytes()
  Nullable`1<decimal> ReadAsDecimal()
  Nullable`1<double> ReadAsDouble()
  Nullable`1<bool> ReadAsBoolean()
  Nullable`1<DateTime> ReadAsDateTime()
  Nullable`1<DateTimeOffset> ReadAsDateTimeOffset()
  int get_Depth()
  string get_Path()
  char get_QuoteChar()
  void set_QuoteChar(char value)
  JsonToken get_TokenType()
  object get_Value()
  Type get_ValueType()
  void Close()
  bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  int Newtonsoft.Json.IJsonLineInfo.get_LineNumber()
  int Newtonsoft.Json.IJsonLineInfo.get_LinePosition()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.TraceJsonWriter
Наследуется от: JsonWriter
Поля:
  JsonWriter _innerWriter
  JsonTextWriter _textWriter
  StringWriter _sw
Свойства:
Методы:
  void .ctor(JsonWriter innerWriter)
  string GetSerializedJsonMessage()
  void WriteValue(decimal value)
  void WriteValue(bool value)
  void WriteValue(byte value)
  void WriteValue(Nullable`1<byte> value)
  void WriteValue(char value)
  void WriteValue(Byte[] value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(double value)
  void WriteUndefined()
  void WriteNull()
  void WriteValue(float value)
  void WriteValue(Guid value)
  void WriteValue(int value)
  void WriteValue(long value)
  void WriteValue(object value)
  void WriteValue(sbyte value)
  void WriteValue(short value)
  void WriteValue(string value)
  void WriteValue(TimeSpan value)
  void WriteValue(UInt32 value)
  void WriteValue(ulong value)
  void WriteValue(Uri value)
  void WriteValue(ushort value)
  void WriteWhitespace(string ws)
  void WriteComment(string text)
  void WriteStartArray()
  void WriteEndArray()
  void WriteStartConstructor(string name)
  void WriteEndConstructor()
  void WritePropertyName(string name)
  void WritePropertyName(string name, bool escape)
  void WriteStartObject()
  void WriteEndObject()
  void WriteRawValue(string json)
  void WriteRaw(string json)
  void Close()
  void Flush()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonFormatterConverter
Наследуется от: object
Поля:
  JsonSerializerInternalReader _reader
  JsonISerializableContract _contract
  JsonProperty _member
Свойства:
Методы:
  void .ctor(JsonSerializerInternalReader reader, JsonISerializableContract contract, JsonProperty member)
  T GetTokenValue(object value)
  object Convert(object value, Type type)
  object Convert(object value, TypeCode typeCode)
  bool ToBoolean(object value)
  byte ToByte(object value)
  char ToChar(object value)
  DateTime ToDateTime(object value)
  decimal ToDecimal(object value)
  double ToDouble(object value)
  short ToInt16(object value)
  int ToInt32(object value)
  long ToInt64(object value)
  sbyte ToSByte(object value)
  float ToSingle(object value)
  string ToString(object value)
  ushort ToUInt16(object value)
  UInt32 ToUInt32(object value)
  ulong ToUInt64(object value)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonISerializableContract
Наследуется от: JsonContainerContract
Поля:
  ObjectConstructor`1<object> <ISerializableCreator>k__BackingField
Свойства:
  ObjectConstructor`1<object> ISerializableCreator
Методы:
  ObjectConstructor`1<object> get_ISerializableCreator()
  void set_ISerializableCreator(ObjectConstructor`1<object> value)
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonLinqContract
Наследуется от: JsonContract
Поля:
Свойства:
Методы:
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonPrimitiveContract
Наследуется от: JsonContract
Поля:
  PrimitiveTypeCode <TypeCode>k__BackingField
  Dictionary`2<Type, ReadType> ReadTypeMap
Свойства:
  PrimitiveTypeCode TypeCode
Методы:
  PrimitiveTypeCode get_TypeCode()
  void set_TypeCode(PrimitiveTypeCode value)
  void .ctor(Type underlyingType)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ErrorEventArgs
Наследуется от: EventArgs
Поля:
  object <CurrentObject>k__BackingField
  ErrorContext <ErrorContext>k__BackingField
Свойства:
  object CurrentObject
  ErrorContext ErrorContext
Методы:
  object get_CurrentObject()
  void set_CurrentObject(object value)
  ErrorContext get_ErrorContext()
  void set_ErrorContext(ErrorContext value)
  void .ctor(object currentObject, ErrorContext errorContext)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultReferenceResolver
Наследуется от: object
Поля:
  int _referenceCount
Свойства:
Методы:
  BidirectionalDictionary`2<string, object> GetMappings(object context)
  object ResolveReference(object context, string reference)
  string GetReference(object context, object value)
  void AddReference(object context, string reference, object value)
  bool IsReferenced(object context, object value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver
Наследуется от: DefaultContractResolver
Поля:
Свойства:
Методы:
  void .ctor()
  string ResolvePropertyName(string propertyName)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ResolverContractKey
Наследуется от: ValueType
Поля:
  Type _resolverType
  Type _contractType
Свойства:
Методы:
  void .ctor(Type resolverType, Type contractType)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(ResolverContractKey other)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultContractResolverState
Наследуется от: object
Поля:
  Dictionary`2<ResolverContractKey, JsonContract> ContractCache
  PropertyNameTable NameTable
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultContractResolver
Наследуется от: object
Поля:
  IContractResolver _instance
  JsonConverter[] BuiltInConverters
  object TypeContractCacheLock
  DefaultContractResolverState _sharedState
  DefaultContractResolverState _instanceState
  bool _sharedCache
  BindingFlags <DefaultMembersSearchFlags>k__BackingField
  bool <SerializeCompilerGeneratedMembers>k__BackingField
  bool <IgnoreSerializableInterface>k__BackingField
  bool <IgnoreSerializableAttribute>k__BackingField
Свойства:
  IContractResolver Instance
  bool DynamicCodeGeneration
  BindingFlags DefaultMembersSearchFlags
  bool SerializeCompilerGeneratedMembers
  bool IgnoreSerializableInterface
  bool IgnoreSerializableAttribute
Методы:
  IContractResolver get_Instance()
  bool get_DynamicCodeGeneration()
  BindingFlags get_DefaultMembersSearchFlags()
  void set_DefaultMembersSearchFlags(BindingFlags value)
  bool get_SerializeCompilerGeneratedMembers()
  void set_SerializeCompilerGeneratedMembers(bool value)
  bool get_IgnoreSerializableInterface()
  void set_IgnoreSerializableInterface(bool value)
  bool get_IgnoreSerializableAttribute()
  void set_IgnoreSerializableAttribute(bool value)
  void .ctor()
  void .ctor(bool shareCache)
  DefaultContractResolverState GetState()
  JsonContract ResolveContract(Type type)
  List`1<MemberInfo> GetSerializableMembers(Type objectType)
  bool ShouldSerializeEntityMember(MemberInfo memberInfo)
  JsonObjectContract CreateObjectContract(Type objectType)
  MemberInfo GetExtensionDataMemberForType(Type type)
  void SetExtensionDataDelegates(JsonObjectContract contract, MemberInfo member)
  ConstructorInfo GetAttributeConstructor(Type objectType)
  ConstructorInfo GetParameterizedConstructor(Type objectType)
  IList`1<JsonProperty> CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties)
  JsonProperty CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo)
  JsonConverter ResolveContractConverter(Type objectType)
  Func`1<object> GetDefaultCreator(Type createdType)
  void InitializeContract(JsonContract contract)
  void ResolveCallbackMethods(JsonContract contract, Type t)
  void GetCallbackMethodsForType(Type type, List`1& onSerializing, List`1& onSerialized, List`1& onDeserializing, List`1& onDeserialized, List`1& onError)
  bool ShouldSkipDeserialized(Type t)
  bool ShouldSkipSerializing(Type t)
  List`1<Type> GetClassHierarchyForType(Type type)
  JsonDictionaryContract CreateDictionaryContract(Type objectType)
  JsonArrayContract CreateArrayContract(Type objectType)
  JsonPrimitiveContract CreatePrimitiveContract(Type objectType)
  JsonLinqContract CreateLinqContract(Type objectType)
  JsonISerializableContract CreateISerializableContract(Type objectType)
  JsonStringContract CreateStringContract(Type objectType)
  JsonContract CreateContract(Type objectType)
  bool IsJsonPrimitiveType(Type t)
  bool IsIConvertible(Type t)
  bool CanConvertToString(Type type)
  bool IsValidCallback(MethodInfo method, ParameterInfo[] parameters, Type attributeType, MethodInfo currentCallback, Type& prevAttributeType)
  string GetClrTypeFullName(Type type)
  IList`1<JsonProperty> CreateProperties(Type type, MemberSerialization memberSerialization)
  IValueProvider CreateMemberValueProvider(MemberInfo member)
  JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)
  void SetPropertySettingsFromAttributes(JsonProperty property, object attributeProvider, string name, Type declaringType, MemberSerialization memberSerialization, Boolean& allowNonPublicAccess)
  Predicate`1<object> CreateShouldSerializeTest(MemberInfo member)
  void SetIsSpecifiedActions(JsonProperty property, MemberInfo member, bool allowNonPublicAccess)
  string ResolvePropertyName(string propertyName)
  string ResolveDictionaryKey(string dictionaryKey)
  string GetResolvedPropertyName(string propertyName)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.DefaultSerializationBinder
Наследуется от: SerializationBinder
Поля:
  DefaultSerializationBinder Instance
  ThreadSafeStore`2<TypeNameKey, Type> _typeCache
Свойства:
Методы:
  Type GetTypeFromTypeNameKey(TypeNameKey typeNameKey)
  Type BindToType(string assemblyName, string typeName)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ErrorContext
Наследуется от: object
Поля:
  bool <Traced>k__BackingField
  Exception <Error>k__BackingField
  object <OriginalObject>k__BackingField
  object <Member>k__BackingField
  string <Path>k__BackingField
  bool <Handled>k__BackingField
Свойства:
  bool Traced
  Exception Error
  object OriginalObject
  object Member
  string Path
  bool Handled
Методы:
  void .ctor(object originalObject, object member, string path, Exception error)
  bool get_Traced()
  void set_Traced(bool value)
  Exception get_Error()
  void set_Error(Exception value)
  object get_OriginalObject()
  void set_OriginalObject(object value)
  object get_Member()
  void set_Member(object value)
  string get_Path()
  void set_Path(string value)
  bool get_Handled()
  void set_Handled(bool value)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IContractResolver
Поля:
Свойства:
Методы:
  JsonContract ResolveContract(Type type)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IValueProvider
Поля:
Свойства:
Методы:
  void SetValue(object target, object value)
  object GetValue(object target)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonArrayContract
Наследуется от: JsonContainerContract
Поля:
  Type <CollectionItemType>k__BackingField
  bool <IsMultidimensionalArray>k__BackingField
  Type _genericCollectionDefinitionType
  Type _genericWrapperType
  ObjectConstructor`1<object> _genericWrapperCreator
  Func`1<object> _genericTemporaryCollectionCreator
  bool <IsArray>k__BackingField
  bool <ShouldCreateWrapper>k__BackingField
  bool <CanDeserialize>k__BackingField
  ConstructorInfo _parameterizedConstructor
  ObjectConstructor`1<object> _parameterizedCreator
  ObjectConstructor`1<object> _overrideCreator
  bool <HasParameterizedCreator>k__BackingField
Свойства:
  Type CollectionItemType
  bool IsMultidimensionalArray
  bool IsArray
  bool ShouldCreateWrapper
  bool CanDeserialize
  ObjectConstructor`1<object> ParameterizedCreator
  ObjectConstructor`1<object> OverrideCreator
  bool HasParameterizedCreator
  bool HasParameterizedCreatorInternal
Методы:
  Type get_CollectionItemType()
  void set_CollectionItemType(Type value)
  bool get_IsMultidimensionalArray()
  void set_IsMultidimensionalArray(bool value)
  bool get_IsArray()
  void set_IsArray(bool value)
  bool get_ShouldCreateWrapper()
  void set_ShouldCreateWrapper(bool value)
  bool get_CanDeserialize()
  void set_CanDeserialize(bool value)
  ObjectConstructor`1<object> get_ParameterizedCreator()
  ObjectConstructor`1<object> get_OverrideCreator()
  void set_OverrideCreator(ObjectConstructor`1<object> value)
  bool get_HasParameterizedCreator()
  void set_HasParameterizedCreator(bool value)
  bool get_HasParameterizedCreatorInternal()
  void .ctor(Type underlyingType)
  IWrappedCollection CreateWrapper(object list)
  IList CreateTemporaryCollection()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonContractType
Наследуется от: Enum
Поля:
  int value__
  JsonContractType None
  JsonContractType Object
  JsonContractType Array
  JsonContractType Primitive
  JsonContractType String
  JsonContractType Dictionary
  JsonContractType Dynamic
  JsonContractType Serializable
  JsonContractType Linq
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.SerializationCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object o, StreamingContext context)
  IAsyncResult BeginInvoke(object o, StreamingContext context, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.SerializationErrorCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object o, StreamingContext context, ErrorContext errorContext)
  IAsyncResult BeginInvoke(object o, StreamingContext context, ErrorContext errorContext, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ExtensionDataSetter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object o, string key, object value)
  IAsyncResult BeginInvoke(object o, string key, object value, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ExtensionDataGetter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  IEnumerable`1<KeyValuePair`2<object, object>> Invoke(object o)
  IAsyncResult BeginInvoke(object o, AsyncCallback callback, object object)
  IEnumerable`1<KeyValuePair`2<object, object>> EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonContract
Наследуется от: object
Поля:
  bool IsNullable
  bool IsConvertable
  bool IsEnum
  Type NonNullableUnderlyingType
  ReadType InternalReadType
  JsonContractType ContractType
  bool IsReadOnlyOrFixedSize
  bool IsSealed
  bool IsInstantiable
  List`1<SerializationCallback> _onDeserializedCallbacks
  IList`1<SerializationCallback> _onDeserializingCallbacks
  IList`1<SerializationCallback> _onSerializedCallbacks
  IList`1<SerializationCallback> _onSerializingCallbacks
  IList`1<SerializationErrorCallback> _onErrorCallbacks
  Type _createdType
  Type <UnderlyingType>k__BackingField
  Nullable`1<bool> <IsReference>k__BackingField
  JsonConverter <Converter>k__BackingField
  JsonConverter <InternalConverter>k__BackingField
  Func`1<object> <DefaultCreator>k__BackingField
  bool <DefaultCreatorNonPublic>k__BackingField
Свойства:
  Type UnderlyingType
  Type CreatedType
  Nullable`1<bool> IsReference
  JsonConverter Converter
  JsonConverter InternalConverter
  IList`1<SerializationCallback> OnDeserializedCallbacks
  IList`1<SerializationCallback> OnDeserializingCallbacks
  IList`1<SerializationCallback> OnSerializedCallbacks
  IList`1<SerializationCallback> OnSerializingCallbacks
  IList`1<SerializationErrorCallback> OnErrorCallbacks
  MethodInfo OnDeserialized
  MethodInfo OnDeserializing
  MethodInfo OnSerialized
  MethodInfo OnSerializing
  MethodInfo OnError
  Func`1<object> DefaultCreator
  bool DefaultCreatorNonPublic
Методы:
  Type get_UnderlyingType()
  void set_UnderlyingType(Type value)
  Type get_CreatedType()
  void set_CreatedType(Type value)
  Nullable`1<bool> get_IsReference()
  void set_IsReference(Nullable`1<bool> value)
  JsonConverter get_Converter()
  void set_Converter(JsonConverter value)
  JsonConverter get_InternalConverter()
  void set_InternalConverter(JsonConverter value)
  IList`1<SerializationCallback> get_OnDeserializedCallbacks()
  IList`1<SerializationCallback> get_OnDeserializingCallbacks()
  IList`1<SerializationCallback> get_OnSerializedCallbacks()
  IList`1<SerializationCallback> get_OnSerializingCallbacks()
  IList`1<SerializationErrorCallback> get_OnErrorCallbacks()
  MethodInfo get_OnDeserialized()
  void set_OnDeserialized(MethodInfo value)
  MethodInfo get_OnDeserializing()
  void set_OnDeserializing(MethodInfo value)
  MethodInfo get_OnSerialized()
  void set_OnSerialized(MethodInfo value)
  MethodInfo get_OnSerializing()
  void set_OnSerializing(MethodInfo value)
  MethodInfo get_OnError()
  void set_OnError(MethodInfo value)
  Func`1<object> get_DefaultCreator()
  void set_DefaultCreator(Func`1<object> value)
  bool get_DefaultCreatorNonPublic()
  void set_DefaultCreatorNonPublic(bool value)
  void .ctor(Type underlyingType)
  void InvokeOnSerializing(object o, StreamingContext context)
  void InvokeOnSerialized(object o, StreamingContext context)
  void InvokeOnDeserializing(object o, StreamingContext context)
  void InvokeOnDeserialized(object o, StreamingContext context)
  void InvokeOnError(object o, StreamingContext context, ErrorContext errorContext)
  SerializationCallback CreateSerializationCallback(MethodInfo callbackMethodInfo)
  SerializationErrorCallback CreateSerializationErrorCallback(MethodInfo callbackMethodInfo)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonDictionaryContract
Наследуется от: JsonContainerContract
Поля:
  Func`2<string, string> <DictionaryKeyResolver>k__BackingField
  Type <DictionaryKeyType>k__BackingField
  Type <DictionaryValueType>k__BackingField
  JsonContract <KeyContract>k__BackingField
  Type _genericCollectionDefinitionType
  Type _genericWrapperType
  ObjectConstructor`1<object> _genericWrapperCreator
  Func`1<object> _genericTemporaryDictionaryCreator
  bool <ShouldCreateWrapper>k__BackingField
  ConstructorInfo _parameterizedConstructor
  ObjectConstructor`1<object> _overrideCreator
  ObjectConstructor`1<object> _parameterizedCreator
  bool <HasParameterizedCreator>k__BackingField
Свойства:
  Func`2<string, string> PropertyNameResolver
  Func`2<string, string> DictionaryKeyResolver
  Type DictionaryKeyType
  Type DictionaryValueType
  JsonContract KeyContract
  bool ShouldCreateWrapper
  ObjectConstructor`1<object> ParameterizedCreator
  ObjectConstructor`1<object> OverrideCreator
  bool HasParameterizedCreator
  bool HasParameterizedCreatorInternal
Методы:
  Func`2<string, string> get_PropertyNameResolver()
  void set_PropertyNameResolver(Func`2<string, string> value)
  Func`2<string, string> get_DictionaryKeyResolver()
  void set_DictionaryKeyResolver(Func`2<string, string> value)
  Type get_DictionaryKeyType()
  void set_DictionaryKeyType(Type value)
  Type get_DictionaryValueType()
  void set_DictionaryValueType(Type value)
  JsonContract get_KeyContract()
  void set_KeyContract(JsonContract value)
  bool get_ShouldCreateWrapper()
  void set_ShouldCreateWrapper(bool value)
  ObjectConstructor`1<object> get_ParameterizedCreator()
  ObjectConstructor`1<object> get_OverrideCreator()
  void set_OverrideCreator(ObjectConstructor`1<object> value)
  bool get_HasParameterizedCreator()
  void set_HasParameterizedCreator(bool value)
  bool get_HasParameterizedCreatorInternal()
  void .ctor(Type underlyingType)
  IWrappedDictionary CreateWrapper(object dictionary)
  IDictionary CreateTemporaryDictionary()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonProperty
Наследуется от: object
Поля:
  Nullable`1<Required> _required
  bool _hasExplicitDefaultValue
  object _defaultValue
  bool _hasGeneratedDefaultValue
  string _propertyName
  bool _skipPropertyNameEscape
  Type _propertyType
  JsonContract <PropertyContract>k__BackingField
  Type <DeclaringType>k__BackingField
  Nullable`1<int> <Order>k__BackingField
  string <UnderlyingName>k__BackingField
  IValueProvider <ValueProvider>k__BackingField
  IAttributeProvider <AttributeProvider>k__BackingField
  JsonConverter <Converter>k__BackingField
  JsonConverter <MemberConverter>k__BackingField
  bool <Ignored>k__BackingField
  bool <Readable>k__BackingField
  bool <Writable>k__BackingField
  bool <HasMemberAttribute>k__BackingField
  Nullable`1<bool> <IsReference>k__BackingField
  Nullable`1<NullValueHandling> <NullValueHandling>k__BackingField
  Nullable`1<DefaultValueHandling> <DefaultValueHandling>k__BackingField
  Nullable`1<ReferenceLoopHandling> <ReferenceLoopHandling>k__BackingField
  Nullable`1<ObjectCreationHandling> <ObjectCreationHandling>k__BackingField
  Nullable`1<TypeNameHandling> <TypeNameHandling>k__BackingField
  Predicate`1<object> <ShouldSerialize>k__BackingField
  Predicate`1<object> <ShouldDeserialize>k__BackingField
  Predicate`1<object> <GetIsSpecified>k__BackingField
  Action`2<object, object> <SetIsSpecified>k__BackingField
  JsonConverter <ItemConverter>k__BackingField
  Nullable`1<bool> <ItemIsReference>k__BackingField
  Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField
  Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField
Свойства:
  JsonContract PropertyContract
  string PropertyName
  Type DeclaringType
  Nullable`1<int> Order
  string UnderlyingName
  IValueProvider ValueProvider
  IAttributeProvider AttributeProvider
  Type PropertyType
  JsonConverter Converter
  JsonConverter MemberConverter
  bool Ignored
  bool Readable
  bool Writable
  bool HasMemberAttribute
  object DefaultValue
  Required Required
  Nullable`1<bool> IsReference
  Nullable`1<NullValueHandling> NullValueHandling
  Nullable`1<DefaultValueHandling> DefaultValueHandling
  Nullable`1<ReferenceLoopHandling> ReferenceLoopHandling
  Nullable`1<ObjectCreationHandling> ObjectCreationHandling
  Nullable`1<TypeNameHandling> TypeNameHandling
  Predicate`1<object> ShouldSerialize
  Predicate`1<object> ShouldDeserialize
  Predicate`1<object> GetIsSpecified
  Action`2<object, object> SetIsSpecified
  JsonConverter ItemConverter
  Nullable`1<bool> ItemIsReference
  Nullable`1<TypeNameHandling> ItemTypeNameHandling
  Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling
Методы:
  JsonContract get_PropertyContract()
  void set_PropertyContract(JsonContract value)
  string get_PropertyName()
  void set_PropertyName(string value)
  Type get_DeclaringType()
  void set_DeclaringType(Type value)
  Nullable`1<int> get_Order()
  void set_Order(Nullable`1<int> value)
  string get_UnderlyingName()
  void set_UnderlyingName(string value)
  IValueProvider get_ValueProvider()
  void set_ValueProvider(IValueProvider value)
  IAttributeProvider get_AttributeProvider()
  void set_AttributeProvider(IAttributeProvider value)
  Type get_PropertyType()
  void set_PropertyType(Type value)
  JsonConverter get_Converter()
  void set_Converter(JsonConverter value)
  JsonConverter get_MemberConverter()
  void set_MemberConverter(JsonConverter value)
  bool get_Ignored()
  void set_Ignored(bool value)
  bool get_Readable()
  void set_Readable(bool value)
  bool get_Writable()
  void set_Writable(bool value)
  bool get_HasMemberAttribute()
  void set_HasMemberAttribute(bool value)
  object get_DefaultValue()
  void set_DefaultValue(object value)
  object GetResolvedDefaultValue()
  Required get_Required()
  void set_Required(Required value)
  Nullable`1<bool> get_IsReference()
  void set_IsReference(Nullable`1<bool> value)
  Nullable`1<NullValueHandling> get_NullValueHandling()
  void set_NullValueHandling(Nullable`1<NullValueHandling> value)
  Nullable`1<DefaultValueHandling> get_DefaultValueHandling()
  void set_DefaultValueHandling(Nullable`1<DefaultValueHandling> value)
  Nullable`1<ReferenceLoopHandling> get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value)
  Nullable`1<ObjectCreationHandling> get_ObjectCreationHandling()
  void set_ObjectCreationHandling(Nullable`1<ObjectCreationHandling> value)
  Nullable`1<TypeNameHandling> get_TypeNameHandling()
  void set_TypeNameHandling(Nullable`1<TypeNameHandling> value)
  Predicate`1<object> get_ShouldSerialize()
  void set_ShouldSerialize(Predicate`1<object> value)
  Predicate`1<object> get_ShouldDeserialize()
  void set_ShouldDeserialize(Predicate`1<object> value)
  Predicate`1<object> get_GetIsSpecified()
  void set_GetIsSpecified(Predicate`1<object> value)
  Action`2<object, object> get_SetIsSpecified()
  void set_SetIsSpecified(Action`2<object, object> value)
  string ToString()
  JsonConverter get_ItemConverter()
  void set_ItemConverter(JsonConverter value)
  Nullable`1<bool> get_ItemIsReference()
  void set_ItemIsReference(Nullable`1<bool> value)
  Nullable`1<TypeNameHandling> get_ItemTypeNameHandling()
  void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value)
  Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling()
  void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value)
  void WritePropertyName(JsonWriter writer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonPropertyCollection
Наследуется от: KeyedCollection`2<string, JsonProperty>
Поля:
  Type _type
  List`1<JsonProperty> _list
Свойства:
Методы:
  void .ctor(Type type)
  string GetKeyForItem(JsonProperty item)
  void AddProperty(JsonProperty property)
  JsonProperty GetClosestMatchProperty(string propertyName)
  bool TryGetValue(string key, JsonProperty& item)
  JsonProperty GetProperty(string propertyName, StringComparison comparisonType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.IReferenceResolver
Поля:
Свойства:
Методы:
  object ResolveReference(object context, string reference)
  string GetReference(object context, object value)
  bool IsReferenced(object context, object value)
  void AddReference(object context, string reference, object value)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonObjectContract
Наследуется от: JsonContainerContract
Поля:
  MemberSerialization <MemberSerialization>k__BackingField
  Nullable`1<Required> <ItemRequired>k__BackingField
  JsonPropertyCollection <Properties>k__BackingField
  ExtensionDataSetter <ExtensionDataSetter>k__BackingField
  ExtensionDataGetter <ExtensionDataGetter>k__BackingField
  bool ExtensionDataIsJToken
  Nullable`1<bool> _hasRequiredOrDefaultValueProperties
  ConstructorInfo _parametrizedConstructor
  ConstructorInfo _overrideConstructor
  ObjectConstructor`1<object> _overrideCreator
  ObjectConstructor`1<object> _parameterizedCreator
  JsonPropertyCollection _creatorParameters
  Type _extensionDataValueType
Свойства:
  MemberSerialization MemberSerialization
  Nullable`1<Required> ItemRequired
  JsonPropertyCollection Properties
  JsonPropertyCollection ConstructorParameters
  JsonPropertyCollection CreatorParameters
  ConstructorInfo OverrideConstructor
  ConstructorInfo ParametrizedConstructor
  ObjectConstructor`1<object> OverrideCreator
  ObjectConstructor`1<object> ParameterizedCreator
  ExtensionDataSetter ExtensionDataSetter
  ExtensionDataGetter ExtensionDataGetter
  Type ExtensionDataValueType
  bool HasRequiredOrDefaultValueProperties
Методы:
  MemberSerialization get_MemberSerialization()
  void set_MemberSerialization(MemberSerialization value)
  Nullable`1<Required> get_ItemRequired()
  void set_ItemRequired(Nullable`1<Required> value)
  JsonPropertyCollection get_Properties()
  void set_Properties(JsonPropertyCollection value)
  JsonPropertyCollection get_ConstructorParameters()
  JsonPropertyCollection get_CreatorParameters()
  ConstructorInfo get_OverrideConstructor()
  void set_OverrideConstructor(ConstructorInfo value)
  ConstructorInfo get_ParametrizedConstructor()
  void set_ParametrizedConstructor(ConstructorInfo value)
  ObjectConstructor`1<object> get_OverrideCreator()
  void set_OverrideCreator(ObjectConstructor`1<object> value)
  ObjectConstructor`1<object> get_ParameterizedCreator()
  ExtensionDataSetter get_ExtensionDataSetter()
  void set_ExtensionDataSetter(ExtensionDataSetter value)
  ExtensionDataGetter get_ExtensionDataGetter()
  void set_ExtensionDataGetter(ExtensionDataGetter value)
  Type get_ExtensionDataValueType()
  void set_ExtensionDataValueType(Type value)
  bool get_HasRequiredOrDefaultValueProperties()
  void .ctor(Type underlyingType)
  object GetUninitializedObject()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerInternalBase
Наследуется от: object
Поля:
  ErrorContext _currentErrorContext
  BidirectionalDictionary`2<string, object> _mappings
  JsonSerializer Serializer
  ITraceWriter TraceWriter
  JsonSerializerProxy InternalSerializer
Свойства:
  BidirectionalDictionary`2<string, object> DefaultReferenceMappings
Методы:
  void .ctor(JsonSerializer serializer)
  BidirectionalDictionary`2<string, object> get_DefaultReferenceMappings()
  ErrorContext GetErrorContext(object currentObject, object member, string path, Exception error)
  void ClearErrorContext()
  bool IsErrorHandled(object currentObject, JsonContract contract, object keyValue, IJsonLineInfo lineInfo, string path, Exception ex)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerInternalReader
Наследуется от: JsonSerializerInternalBase
Поля:
Свойства:
Методы:
  void .ctor(JsonSerializer serializer)
  void Populate(JsonReader reader, object target)
  JsonContract GetContractSafe(Type type)
  object Deserialize(JsonReader reader, Type objectType, bool checkAdditionalContent)
  JsonSerializerProxy GetInternalSerializer()
  JToken CreateJToken(JsonReader reader, JsonContract contract)
  JToken CreateJObject(JsonReader reader)
  object CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue)
  bool CoerceEmptyStringToNull(Type objectType, JsonContract contract, string s)
  string GetExpectedDescription(JsonContract contract)
  JsonConverter GetConverter(JsonContract contract, JsonConverter memberConverter, JsonContainerContract containerContract, JsonProperty containerProperty)
  object CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue)
  bool ReadMetadataPropertiesToken(JTokenReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id)
  bool ReadMetadataProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id)
  void ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, string qualifiedTypeName)
  JsonArrayContract EnsureArrayContract(JsonReader reader, Type objectType, JsonContract contract)
  object CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, object existingValue, string id)
  bool HasNoDefinedType(JsonContract contract)
  object EnsureType(JsonReader reader, object value, CultureInfo culture, JsonContract contract, Type targetType)
  bool SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target)
  bool CalculatePropertyDetails(JsonProperty property, JsonConverter& propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target, Boolean& useExistingValue, Object& currentValue, JsonContract& propertyContract, Boolean& gottenCurrentValue)
  void AddReference(JsonReader reader, string id, object value)
  bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag)
  bool ShouldSetPropertyValue(JsonProperty property, object value)
  IList CreateNewList(JsonReader reader, JsonArrayContract contract, Boolean& createdFromNonDefaultCreator)
  IDictionary CreateNewDictionary(JsonReader reader, JsonDictionaryContract contract, Boolean& createdFromNonDefaultCreator)
  void OnDeserializing(JsonReader reader, JsonContract contract, object value)
  void OnDeserialized(JsonReader reader, JsonContract contract, object value)
  object PopulateDictionary(IDictionary dictionary, JsonReader reader, JsonDictionaryContract contract, JsonProperty containerProperty, string id)
  object PopulateMultidimensionalArray(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id)
  void ThrowUnexpectedEndException(JsonReader reader, JsonContract contract, object currentObject, string message)
  object PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id)
  object CreateISerializable(JsonReader reader, JsonISerializableContract contract, JsonProperty member, string id)
  object CreateISerializableItem(JToken token, Type type, JsonISerializableContract contract, JsonProperty member)
  object CreateObjectUsingCreatorWithParameters(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ObjectConstructor`1<object> creator, string id)
  object DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, object existingValue)
  List`1<CreatorPropertyContext> ResolvePropertyAndCreatorValues(JsonObjectContract contract, JsonProperty containerProperty, JsonReader reader, Type objectType)
  bool ReadForType(JsonReader reader, JsonContract contract, bool hasConverter)
  object CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, string id, Boolean& createdFromNonDefaultCreator)
  object PopulateObject(object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, string id)
  bool ShouldDeserialize(JsonReader reader, JsonProperty property, object target)
  bool CheckPropertyName(JsonReader reader, string memberName)
  void SetExtensionData(JsonObjectContract contract, JsonProperty member, JsonReader reader, string memberName, object o)
  object ReadExtensionDataValue(JsonObjectContract contract, JsonProperty member, JsonReader reader)
  void EndProcessProperty(object newObject, JsonReader reader, JsonObjectContract contract, int initialDepth, JsonProperty property, PropertyPresence presence, bool setDefaultValue)
  void SetPropertyPresence(JsonReader reader, JsonProperty property, Dictionary`2<JsonProperty, PropertyPresence> requiredProperties)
  void HandleError(JsonReader reader, bool readPastError, int initialDepth)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerInternalWriter
Наследуется от: JsonSerializerInternalBase
Поля:
  Type _rootType
  int _rootLevel
  List`1<object> _serializeStack
Свойства:
Методы:
  void .ctor(JsonSerializer serializer)
  void Serialize(JsonWriter jsonWriter, object value, Type objectType)
  JsonSerializerProxy GetInternalSerializer()
  JsonContract GetContractSafe(object value)
  void SerializePrimitive(JsonWriter writer, object value, JsonPrimitiveContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  void SerializeValue(JsonWriter writer, object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  Nullable`1<bool> ResolveIsReference(JsonContract contract, JsonProperty property, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool ShouldWriteReference(object value, JsonProperty property, JsonContract valueContract, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool ShouldWriteProperty(object memberValue, JsonProperty property)
  bool CheckForCircularReference(JsonWriter writer, object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
  void WriteReference(JsonWriter writer, object value)
  string GetReference(JsonWriter writer, object value)
  bool TryConvertToString(object value, Type type, String& s)
  void SerializeString(JsonWriter writer, object value, JsonStringContract contract)
  void OnSerializing(JsonWriter writer, JsonContract contract, object value)
  void OnSerialized(JsonWriter writer, JsonContract contract, object value)
  void SerializeObject(JsonWriter writer, object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool CalculatePropertyValues(JsonWriter writer, object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
  void WriteObjectStart(JsonWriter writer, object value, JsonContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void WriteReferenceIdProperty(JsonWriter writer, Type type, object value)
  void WriteTypeProperty(JsonWriter writer, Type type)
  bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag)
  bool HasFlag(PreserveReferencesHandling value, PreserveReferencesHandling flag)
  bool HasFlag(TypeNameHandling value, TypeNameHandling flag)
  void SerializeConvertable(JsonWriter writer, JsonConverter converter, object value, JsonContract contract, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, int initialDepth, Int32[] indices)
  bool WriteStartArray(JsonWriter writer, object values, JsonArrayContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  void SerializeISerializable(JsonWriter writer, ISerializable value, JsonISerializableContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  bool ShouldWriteDynamicProperty(object memberValue)
  bool ShouldWriteType(TypeNameHandling typeNameHandlingFlag, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
  void SerializeDictionary(JsonWriter writer, IDictionary values, JsonDictionaryContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
  string GetPropertyName(JsonWriter writer, object name, JsonContract contract, Boolean& escape)
  void HandleError(JsonWriter writer, int initialDepth)
  bool ShouldSerialize(JsonWriter writer, JsonProperty property, object target)
  bool IsSpecified(JsonWriter writer, JsonProperty property, object target)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonSerializerProxy
Наследуется от: JsonSerializer
Поля:
  JsonSerializerInternalReader _serializerReader
  JsonSerializerInternalWriter _serializerWriter
  JsonSerializer _serializer
Свойства:
  IReferenceResolver ReferenceResolver
  ITraceWriter TraceWriter
  IEqualityComparer EqualityComparer
  JsonConverterCollection Converters
  DefaultValueHandling DefaultValueHandling
  IContractResolver ContractResolver
  MissingMemberHandling MissingMemberHandling
  NullValueHandling NullValueHandling
  ObjectCreationHandling ObjectCreationHandling
  ReferenceLoopHandling ReferenceLoopHandling
  PreserveReferencesHandling PreserveReferencesHandling
  TypeNameHandling TypeNameHandling
  MetadataPropertyHandling MetadataPropertyHandling
  FormatterAssemblyStyle TypeNameAssemblyFormat
  ConstructorHandling ConstructorHandling
  SerializationBinder Binder
  StreamingContext Context
  Formatting Formatting
  DateFormatHandling DateFormatHandling
  DateTimeZoneHandling DateTimeZoneHandling
  DateParseHandling DateParseHandling
  FloatFormatHandling FloatFormatHandling
  FloatParseHandling FloatParseHandling
  StringEscapeHandling StringEscapeHandling
  string DateFormatString
  CultureInfo Culture
  Nullable`1<int> MaxDepth
  bool CheckAdditionalContent
Методы:
  void add_Error(EventHandler`1<ErrorEventArgs> value)
  void remove_Error(EventHandler`1<ErrorEventArgs> value)
  IReferenceResolver get_ReferenceResolver()
  void set_ReferenceResolver(IReferenceResolver value)
  ITraceWriter get_TraceWriter()
  void set_TraceWriter(ITraceWriter value)
  IEqualityComparer get_EqualityComparer()
  void set_EqualityComparer(IEqualityComparer value)
  JsonConverterCollection get_Converters()
  DefaultValueHandling get_DefaultValueHandling()
  void set_DefaultValueHandling(DefaultValueHandling value)
  IContractResolver get_ContractResolver()
  void set_ContractResolver(IContractResolver value)
  MissingMemberHandling get_MissingMemberHandling()
  void set_MissingMemberHandling(MissingMemberHandling value)
  NullValueHandling get_NullValueHandling()
  void set_NullValueHandling(NullValueHandling value)
  ObjectCreationHandling get_ObjectCreationHandling()
  void set_ObjectCreationHandling(ObjectCreationHandling value)
  ReferenceLoopHandling get_ReferenceLoopHandling()
  void set_ReferenceLoopHandling(ReferenceLoopHandling value)
  PreserveReferencesHandling get_PreserveReferencesHandling()
  void set_PreserveReferencesHandling(PreserveReferencesHandling value)
  TypeNameHandling get_TypeNameHandling()
  void set_TypeNameHandling(TypeNameHandling value)
  MetadataPropertyHandling get_MetadataPropertyHandling()
  void set_MetadataPropertyHandling(MetadataPropertyHandling value)
  FormatterAssemblyStyle get_TypeNameAssemblyFormat()
  void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value)
  ConstructorHandling get_ConstructorHandling()
  void set_ConstructorHandling(ConstructorHandling value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
  Formatting get_Formatting()
  void set_Formatting(Formatting value)
  DateFormatHandling get_DateFormatHandling()
  void set_DateFormatHandling(DateFormatHandling value)
  DateTimeZoneHandling get_DateTimeZoneHandling()
  void set_DateTimeZoneHandling(DateTimeZoneHandling value)
  DateParseHandling get_DateParseHandling()
  void set_DateParseHandling(DateParseHandling value)
  FloatFormatHandling get_FloatFormatHandling()
  void set_FloatFormatHandling(FloatFormatHandling value)
  FloatParseHandling get_FloatParseHandling()
  void set_FloatParseHandling(FloatParseHandling value)
  StringEscapeHandling get_StringEscapeHandling()
  void set_StringEscapeHandling(StringEscapeHandling value)
  string get_DateFormatString()
  void set_DateFormatString(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  Nullable`1<int> get_MaxDepth()
  void set_MaxDepth(Nullable`1<int> value)
  bool get_CheckAdditionalContent()
  void set_CheckAdditionalContent(bool value)
  JsonSerializerInternalBase GetInternalSerializer()
  void .ctor(JsonSerializerInternalReader serializerReader)
  void .ctor(JsonSerializerInternalWriter serializerWriter)
  object DeserializeInternal(JsonReader reader, Type objectType)
  void PopulateInternal(JsonReader reader, object target)
  void SerializeInternal(JsonWriter jsonWriter, object value, Type rootType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonStringContract
Наследуется от: JsonPrimitiveContract
Поля:
Свойства:
Методы:
  void .ctor(Type underlyingType)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.JsonTypeReflector
Наследуется от: object
Поля:
  Nullable`1<bool> _dynamicCodeGeneration
  Nullable`1<bool> _fullyTrusted
  string IdPropertyName
  string RefPropertyName
  string TypePropertyName
  string ValuePropertyName
  string ArrayValuesPropertyName
  string ShouldSerializePrefix
  string SpecifiedPostfix
  ThreadSafeStore`2<Type, Func`2<Object[], JsonConverter>> JsonConverterCreatorCache
  ThreadSafeStore`2<Type, Type> AssociatedMetadataTypesCache
  ReflectionObject _metadataTypeAttributeReflectionObject
Свойства:
  bool DynamicCodeGeneration
  bool FullyTrusted
  ReflectionDelegateFactory ReflectionDelegateFactory
Методы:
  T GetCachedAttribute(object attributeProvider)
  DataContractAttribute GetDataContractAttribute(Type type)
  DataMemberAttribute GetDataMemberAttribute(MemberInfo memberInfo)
  MemberSerialization GetObjectMemberSerialization(Type objectType, bool ignoreSerializableAttribute)
  JsonConverter GetJsonConverter(object attributeProvider)
  JsonConverter CreateJsonConverterInstance(Type converterType, Object[] converterArgs)
  Func`2<Object[], JsonConverter> GetJsonConverterCreator(Type converterType)
  TypeConverter GetTypeConverter(Type type)
  Type GetAssociatedMetadataType(Type type)
  Type GetAssociateMetadataTypeFromAttribute(Type type)
  T GetAttribute(Type type)
  T GetAttribute(MemberInfo memberInfo)
  T GetAttribute(object provider)
  bool get_DynamicCodeGeneration()
  bool get_FullyTrusted()
  ReflectionDelegateFactory get_ReflectionDelegateFactory()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.CachedAttributeGetter`1
Наследуется от: object
Поля:
  ThreadSafeStore`2<object, T> TypeAttributeCache
Свойства:
Методы:
  T GetAttribute(object type)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ReflectionValueProvider
Наследуется от: object
Поля:
  MemberInfo _memberInfo
Свойства:
Методы:
  void .ctor(MemberInfo memberInfo)
  void SetValue(object target, object value)
  object GetValue(object target)
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.OnErrorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Serialization.ObjectConstructor`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  object Invoke(Object[] args)
  IAsyncResult BeginInvoke(Object[] args, AsyncCallback callback, object object)
  object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.CommentHandling
Наследуется от: Enum
Поля:
  int value__
  CommentHandling Ignore
  CommentHandling Load
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.LineInfoHandling
Наследуется от: Enum
Поля:
  int value__
  LineInfoHandling Ignore
  LineInfoHandling Load
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JPropertyDescriptor
Наследуется от: PropertyDescriptor
Поля:
Свойства:
  Type ComponentType
  bool IsReadOnly
  Type PropertyType
  int NameHashCode
Методы:
  void .ctor(string name)
  JObject CastInstance(object instance)
  bool CanResetValue(object component)
  object GetValue(object component)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
  Type get_ComponentType()
  bool get_IsReadOnly()
  Type get_PropertyType()
  int get_NameHashCode()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JPropertyKeyedCollection
Наследуется от: Collection`1<JToken>
Поля:
  IEqualityComparer`1<string> Comparer
  Dictionary`2<string, JToken> _dictionary
Свойства:
  JToken Item
  ICollection`1<string> Keys
  ICollection`1<JToken> Values
Методы:
  void .ctor()
  void AddKey(string key, JToken item)
  void ChangeItemKey(JToken item, string newKey)
  void ClearItems()
  bool Contains(string key)
  bool ContainsItem(JToken item)
  void EnsureDictionary()
  string GetKeyForItem(JToken item)
  void InsertItem(int index, JToken item)
  bool Remove(string key)
  void RemoveItem(int index)
  void RemoveKey(string key)
  void SetItem(int index, JToken item)
  JToken get_Item(string key)
  bool TryGetValue(string key, JToken& value)
  ICollection`1<string> get_Keys()
  ICollection`1<JToken> get_Values()
  int IndexOfReference(JToken t)
  bool Compare(JPropertyKeyedCollection other)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonLoadSettings
Наследуется от: object
Поля:
  CommentHandling _commentHandling
  LineInfoHandling _lineInfoHandling
Свойства:
  CommentHandling CommentHandling
  LineInfoHandling LineInfoHandling
Методы:
  CommentHandling get_CommentHandling()
  void set_CommentHandling(CommentHandling value)
  LineInfoHandling get_LineInfoHandling()
  void set_LineInfoHandling(LineInfoHandling value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonMergeSettings
Наследуется от: object
Поля:
  MergeArrayHandling _mergeArrayHandling
  MergeNullValueHandling _mergeNullValueHandling
Свойства:
  MergeArrayHandling MergeArrayHandling
  MergeNullValueHandling MergeNullValueHandling
Методы:
  MergeArrayHandling get_MergeArrayHandling()
  void set_MergeArrayHandling(MergeArrayHandling value)
  MergeNullValueHandling get_MergeNullValueHandling()
  void set_MergeNullValueHandling(MergeNullValueHandling value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.MergeArrayHandling
Наследуется от: Enum
Поля:
  int value__
  MergeArrayHandling Concat
  MergeArrayHandling Union
  MergeArrayHandling Replace
  MergeArrayHandling Merge
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.MergeNullValueHandling
Наследуется от: Enum
Поля:
  int value__
  MergeNullValueHandling Ignore
  MergeNullValueHandling Merge
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JRaw
Наследуется от: JValue
Поля:
Свойства:
Методы:
  void .ctor(JRaw other)
  void .ctor(object rawJson)
  JRaw Create(JsonReader reader)
  JToken CloneToken()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.IJEnumerable`1
Поля:
Свойства:
  IJEnumerable`1<JToken> Item
Методы:
  IJEnumerable`1<JToken> get_Item(object key)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenEqualityComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(JToken x, JToken y)
  int GetHashCode(JToken obj)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.Extensions
Наследуется от: object
Поля:
Свойства:
Методы:
  IJEnumerable`1<JToken> Ancestors(IEnumerable`1<T> source)
  IJEnumerable`1<JToken> AncestorsAndSelf(IEnumerable`1<T> source)
  IJEnumerable`1<JToken> Descendants(IEnumerable`1<T> source)
  IJEnumerable`1<JToken> DescendantsAndSelf(IEnumerable`1<T> source)
  IJEnumerable`1<JProperty> Properties(IEnumerable`1<JObject> source)
  IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source, object key)
  IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source)
  IEnumerable`1<U> Values(IEnumerable`1<JToken> source, object key)
  IEnumerable`1<U> Values(IEnumerable`1<JToken> source)
  U Value(IEnumerable`1<JToken> value)
  U Value(IEnumerable`1<T> value)
  IEnumerable`1<U> Values(IEnumerable`1<T> source, object key)
  IJEnumerable`1<JToken> Children(IEnumerable`1<T> source)
  IEnumerable`1<U> Children(IEnumerable`1<T> source)
  IEnumerable`1<U> Convert(IEnumerable`1<T> source)
  U Convert(T token)
  IJEnumerable`1<JToken> AsJEnumerable(IEnumerable`1<JToken> source)
  IJEnumerable`1<T> AsJEnumerable(IEnumerable`1<T> source)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JConstructor
Наследуется от: JContainer
Поля:
  string _name
  List`1<JToken> _values
Свойства:
  IList`1<JToken> ChildrenTokens
  string Name
  JTokenType Type
  JToken Item
Методы:
  IList`1<JToken> get_ChildrenTokens()
  int IndexOfItem(JToken item)
  void MergeItem(object content, JsonMergeSettings settings)
  string get_Name()
  void set_Name(string value)
  JTokenType get_Type()
  void .ctor()
  void .ctor(JConstructor other)
  void .ctor(string name, Object[] content)
  void .ctor(string name, object content)
  void .ctor(string name)
  bool DeepEquals(JToken node)
  JToken CloneToken()
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  int GetDeepHashCode()
  JConstructor Load(JsonReader reader)
  JConstructor Load(JsonReader reader, JsonLoadSettings settings)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JContainer
Наследуется от: JToken
Поля:
  ListChangedEventHandler _listChanged
  AddingNewEventHandler _addingNew
  object _syncRoot
  bool _busy
Свойства:
  IList`1<JToken> ChildrenTokens
  bool HasValues
  JToken First
  JToken Last
  JToken System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Item
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
  object System.Collections.IList.Item
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool System.ComponentModel.IBindingList.AllowEdit
  bool System.ComponentModel.IBindingList.AllowNew
  bool System.ComponentModel.IBindingList.AllowRemove
  bool System.ComponentModel.IBindingList.IsSorted
  ListSortDirection System.ComponentModel.IBindingList.SortDirection
  PropertyDescriptor System.ComponentModel.IBindingList.SortProperty
  bool System.ComponentModel.IBindingList.SupportsChangeNotification
  bool System.ComponentModel.IBindingList.SupportsSearching
  bool System.ComponentModel.IBindingList.SupportsSorting
Методы:
  void add_ListChanged(ListChangedEventHandler value)
  void remove_ListChanged(ListChangedEventHandler value)
  void add_AddingNew(AddingNewEventHandler value)
  void remove_AddingNew(AddingNewEventHandler value)
  IList`1<JToken> get_ChildrenTokens()
  void .ctor()
  void .ctor(JContainer other)
  void CheckReentrancy()
  IList`1<JToken> CreateChildrenCollection()
  void OnAddingNew(AddingNewEventArgs e)
  void OnListChanged(ListChangedEventArgs e)
  bool get_HasValues()
  bool ContentsEqual(JContainer container)
  JToken get_First()
  JToken get_Last()
  JEnumerable`1<JToken> Children()
  IEnumerable`1<T> Values()
  IEnumerable`1<JToken> Descendants()
  IEnumerable`1<JToken> DescendantsAndSelf()
  IEnumerable`1<JToken> GetDescendants(bool self)
  bool IsMultiContent(object content)
  JToken EnsureParentToken(JToken item, bool skipParentCheck)
  int IndexOfItem(JToken item)
  void InsertItem(int index, JToken item, bool skipParentCheck)
  void RemoveItemAt(int index)
  bool RemoveItem(JToken item)
  JToken GetItem(int index)
  void SetItem(int index, JToken item)
  void ClearItems()
  void ReplaceItem(JToken existing, JToken replacement)
  bool ContainsItem(JToken item)
  void CopyItemsTo(Array array, int arrayIndex)
  bool IsTokenUnchanged(JToken currentValue, JToken newValue)
  void ValidateToken(JToken o, JToken existing)
  void Add(object content)
  void AddAndSkipParentCheck(JToken token)
  void AddFirst(object content)
  void AddInternal(int index, object content, bool skipParentCheck)
  JToken CreateFromContent(object content)
  JsonWriter CreateWriter()
  void ReplaceAll(object content)
  void RemoveAll()
  void MergeItem(object content, JsonMergeSettings settings)
  void Merge(object content)
  void Merge(object content, JsonMergeSettings settings)
  void ReadTokenFrom(JsonReader reader, JsonLoadSettings options)
  void ReadContentFrom(JsonReader r, JsonLoadSettings settings)
  int ContentsHashCode()
  string System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[] listAccessors)
  PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors)
  int System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(JToken item)
  void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int index, JToken item)
  void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int index)
  JToken System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item(int index)
  void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item(int index, JToken value)
  void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(JToken item)
  void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear()
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(JToken item)
  void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(JToken[] array, int arrayIndex)
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly()
  bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(JToken item)
  JToken EnsureValue(object value)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property)
  object System.ComponentModel.IBindingList.AddNew()
  bool System.ComponentModel.IBindingList.get_AllowEdit()
  bool System.ComponentModel.IBindingList.get_AllowNew()
  bool System.ComponentModel.IBindingList.get_AllowRemove()
  void System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)
  int System.ComponentModel.IBindingList.Find(PropertyDescriptor property, object key)
  bool System.ComponentModel.IBindingList.get_IsSorted()
  void System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property)
  void System.ComponentModel.IBindingList.RemoveSort()
  ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
  PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
  bool System.ComponentModel.IBindingList.get_SupportsChangeNotification()
  bool System.ComponentModel.IBindingList.get_SupportsSearching()
  bool System.ComponentModel.IBindingList.get_SupportsSorting()
  void MergeEnumerableContent(JContainer target, IEnumerable content, JsonMergeSettings settings)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JEnumerable`1
Наследуется от: ValueType
Поля:
  JEnumerable`1<T> Empty
  IEnumerable`1<T> _enumerable
Свойства:
  IJEnumerable`1<JToken> Item
Методы:
  void .ctor(IEnumerable`1<T> enumerable)
  IEnumerator`1<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IJEnumerable`1<JToken> get_Item(object key)
  bool Equals(JEnumerable`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JObject
Наследуется от: JContainer
Поля:
  JPropertyKeyedCollection _properties
  PropertyChangedEventHandler PropertyChanged
  PropertyChangingEventHandler PropertyChanging
Свойства:
  IList`1<JToken> ChildrenTokens
  JTokenType Type
  JToken Item
  JToken Item
  ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.Keys
  ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.Values
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.IsReadOnly
Методы:
  IList`1<JToken> get_ChildrenTokens()
  void add_PropertyChanged(PropertyChangedEventHandler value)
  void remove_PropertyChanged(PropertyChangedEventHandler value)
  void add_PropertyChanging(PropertyChangingEventHandler value)
  void remove_PropertyChanging(PropertyChangingEventHandler value)
  void .ctor()
  void .ctor(JObject other)
  void .ctor(Object[] content)
  void .ctor(object content)
  bool DeepEquals(JToken node)
  int IndexOfItem(JToken item)
  void InsertItem(int index, JToken item, bool skipParentCheck)
  void ValidateToken(JToken o, JToken existing)
  void MergeItem(object content, JsonMergeSettings settings)
  void InternalPropertyChanged(JProperty childProperty)
  void InternalPropertyChanging(JProperty childProperty)
  JToken CloneToken()
  JTokenType get_Type()
  IEnumerable`1<JProperty> Properties()
  JProperty Property(string name)
  JEnumerable`1<JToken> PropertyValues()
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  JToken get_Item(string propertyName)
  void set_Item(string propertyName, JToken value)
  JObject Load(JsonReader reader)
  JObject Load(JsonReader reader, JsonLoadSettings settings)
  JObject Parse(string json)
  JObject Parse(string json, JsonLoadSettings settings)
  JObject FromObject(object o)
  JObject FromObject(object o, JsonSerializer jsonSerializer)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  JToken GetValue(string propertyName)
  JToken GetValue(string propertyName, StringComparison comparison)
  bool TryGetValue(string propertyName, StringComparison comparison, JToken& value)
  void Add(string propertyName, JToken value)
  bool System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.ContainsKey(string key)
  ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Keys()
  bool Remove(string propertyName)
  bool TryGetValue(string propertyName, JToken& value)
  ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values()
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add(KeyValuePair`2<string, JToken> item)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains(KeyValuePair`2<string, JToken> item)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo(KeyValuePair`2[] array, int arrayIndex)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove(KeyValuePair`2<string, JToken> item)
  int GetDeepHashCode()
  IEnumerator`1<KeyValuePair`2<string, JToken>> GetEnumerator()
  void OnPropertyChanged(string propertyName)
  void OnPropertyChanging(string propertyName)
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes)
  AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JArray
Наследуется от: JContainer
Поля:
  List`1<JToken> _values
Свойства:
  IList`1<JToken> ChildrenTokens
  JTokenType Type
  JToken Item
  JToken Item
  bool IsReadOnly
Методы:
  IList`1<JToken> get_ChildrenTokens()
  JTokenType get_Type()
  void .ctor()
  void .ctor(JArray other)
  void .ctor(Object[] content)
  void .ctor(object content)
  bool DeepEquals(JToken node)
  JToken CloneToken()
  JArray Load(JsonReader reader)
  JArray Load(JsonReader reader, JsonLoadSettings settings)
  JArray Parse(string json)
  JArray Parse(string json, JsonLoadSettings settings)
  JArray FromObject(object o)
  JArray FromObject(object o, JsonSerializer jsonSerializer)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  JToken get_Item(int index)
  void set_Item(int index, JToken value)
  int IndexOfItem(JToken item)
  void MergeItem(object content, JsonMergeSettings settings)
  int IndexOf(JToken item)
  void Insert(int index, JToken item)
  void RemoveAt(int index)
  IEnumerator`1<JToken> GetEnumerator()
  void Add(JToken item)
  void Clear()
  bool Contains(JToken item)
  void CopyTo(JToken[] array, int arrayIndex)
  bool get_IsReadOnly()
  bool Remove(JToken item)
  int GetDeepHashCode()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenReader
Наследуется от: JsonReader
Поля:
  JToken _root
  string _initialPath
  JToken _parent
  JToken _current
Свойства:
  JToken CurrentToken
  int Newtonsoft.Json.IJsonLineInfo.LineNumber
  int Newtonsoft.Json.IJsonLineInfo.LinePosition
  string Path
Методы:
  JToken get_CurrentToken()
  void .ctor(JToken token)
  void .ctor(JToken token, string initialPath)
  bool Read()
  bool ReadOver(JToken t)
  bool ReadToEnd()
  Nullable`1<JsonToken> GetEndToken(JContainer c)
  bool ReadInto(JContainer c)
  bool SetEnd(JContainer c)
  void SetToken(JToken token)
  string SafeToString(object value)
  bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  int Newtonsoft.Json.IJsonLineInfo.get_LineNumber()
  int Newtonsoft.Json.IJsonLineInfo.get_LinePosition()
  string get_Path()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenWriter
Наследуется от: JsonWriter
Поля:
  JContainer _token
  JContainer _parent
  JValue _value
  JToken _current
Свойства:
  JToken CurrentToken
  JToken Token
Методы:
  JToken get_CurrentToken()
  JToken get_Token()
  void .ctor(JContainer container)
  void .ctor()
  void Flush()
  void Close()
  void WriteStartObject()
  void AddParent(JContainer container)
  void RemoveParent()
  void WriteStartArray()
  void WriteStartConstructor(string name)
  void WriteEnd(JsonToken token)
  void WritePropertyName(string name)
  void AddValue(object value, JsonToken token)
  void AddValue(JValue value, JsonToken token)
  void WriteValue(object value)
  void WriteNull()
  void WriteUndefined()
  void WriteRaw(string json)
  void WriteComment(string text)
  void WriteValue(string value)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(double value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Byte[] value)
  void WriteValue(TimeSpan value)
  void WriteValue(Guid value)
  void WriteValue(Uri value)
  void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JToken
Наследуется от: object
Поля:
  JTokenEqualityComparer _equalityComparer
  JContainer _parent
  JToken _previous
  JToken _next
  object _annotations
  JTokenType[] BooleanTypes
  JTokenType[] NumberTypes
  JTokenType[] StringTypes
  JTokenType[] GuidTypes
  JTokenType[] TimeSpanTypes
  JTokenType[] UriTypes
  JTokenType[] CharTypes
  JTokenType[] DateTimeTypes
  JTokenType[] BytesTypes
Свойства:
  JTokenEqualityComparer EqualityComparer
  JContainer Parent
  JToken Root
  JTokenType Type
  bool HasValues
  JToken Next
  JToken Previous
  string Path
  JToken Item
  JToken First
  JToken Last
  IJEnumerable`1<JToken> Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item
  int Newtonsoft.Json.IJsonLineInfo.LineNumber
  int Newtonsoft.Json.IJsonLineInfo.LinePosition
Методы:
  JTokenEqualityComparer get_EqualityComparer()
  JContainer get_Parent()
  void set_Parent(JContainer value)
  JToken get_Root()
  JToken CloneToken()
  bool DeepEquals(JToken node)
  JTokenType get_Type()
  bool get_HasValues()
  bool DeepEquals(JToken t1, JToken t2)
  JToken get_Next()
  void set_Next(JToken value)
  JToken get_Previous()
  void set_Previous(JToken value)
  string get_Path()
  void .ctor()
  void AddAfterSelf(object content)
  void AddBeforeSelf(object content)
  IEnumerable`1<JToken> Ancestors()
  IEnumerable`1<JToken> AncestorsAndSelf()
  IEnumerable`1<JToken> GetAncestors(bool self)
  IEnumerable`1<JToken> AfterSelf()
  IEnumerable`1<JToken> BeforeSelf()
  JToken get_Item(object key)
  void set_Item(object key, JToken value)
  T Value(object key)
  JToken get_First()
  JToken get_Last()
  JEnumerable`1<JToken> Children()
  JEnumerable`1<T> Children()
  IEnumerable`1<T> Values()
  void Remove()
  void Replace(JToken value)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  string ToString()
  string ToString(Formatting formatting, JsonConverter[] converters)
  JValue EnsureValue(JToken value)
  string GetType(JToken token)
  bool ValidateToken(JToken o, JTokenType[] validTypes, bool nullable)
  bool op_Explicit(JToken value)
  DateTimeOffset op_Explicit(JToken value)
  Nullable`1<bool> op_Explicit(JToken value)
  long op_Explicit(JToken value)
  Nullable`1<DateTime> op_Explicit(JToken value)
  Nullable`1<DateTimeOffset> op_Explicit(JToken value)
  Nullable`1<decimal> op_Explicit(JToken value)
  Nullable`1<double> op_Explicit(JToken value)
  Nullable`1<char> op_Explicit(JToken value)
  int op_Explicit(JToken value)
  short op_Explicit(JToken value)
  ushort op_Explicit(JToken value)
  char op_Explicit(JToken value)
  byte op_Explicit(JToken value)
  sbyte op_Explicit(JToken value)
  Nullable`1<int> op_Explicit(JToken value)
  Nullable`1<short> op_Explicit(JToken value)
  Nullable`1<ushort> op_Explicit(JToken value)
  Nullable`1<byte> op_Explicit(JToken value)
  Nullable`1<sbyte> op_Explicit(JToken value)
  DateTime op_Explicit(JToken value)
  Nullable`1<long> op_Explicit(JToken value)
  Nullable`1<float> op_Explicit(JToken value)
  decimal op_Explicit(JToken value)
  Nullable`1<UInt32> op_Explicit(JToken value)
  Nullable`1<ulong> op_Explicit(JToken value)
  double op_Explicit(JToken value)
  float op_Explicit(JToken value)
  string op_Explicit(JToken value)
  UInt32 op_Explicit(JToken value)
  ulong op_Explicit(JToken value)
  Byte[] op_Explicit(JToken value)
  Guid op_Explicit(JToken value)
  Nullable`1<Guid> op_Explicit(JToken value)
  TimeSpan op_Explicit(JToken value)
  Nullable`1<TimeSpan> op_Explicit(JToken value)
  Uri op_Explicit(JToken value)
  JToken op_Implicit(bool value)
  JToken op_Implicit(DateTimeOffset value)
  JToken op_Implicit(byte value)
  JToken op_Implicit(Nullable`1<byte> value)
  JToken op_Implicit(sbyte value)
  JToken op_Implicit(Nullable`1<sbyte> value)
  JToken op_Implicit(Nullable`1<bool> value)
  JToken op_Implicit(long value)
  JToken op_Implicit(Nullable`1<DateTime> value)
  JToken op_Implicit(Nullable`1<DateTimeOffset> value)
  JToken op_Implicit(Nullable`1<decimal> value)
  JToken op_Implicit(Nullable`1<double> value)
  JToken op_Implicit(short value)
  JToken op_Implicit(ushort value)
  JToken op_Implicit(int value)
  JToken op_Implicit(Nullable`1<int> value)
  JToken op_Implicit(DateTime value)
  JToken op_Implicit(Nullable`1<long> value)
  JToken op_Implicit(Nullable`1<float> value)
  JToken op_Implicit(decimal value)
  JToken op_Implicit(Nullable`1<short> value)
  JToken op_Implicit(Nullable`1<ushort> value)
  JToken op_Implicit(Nullable`1<UInt32> value)
  JToken op_Implicit(Nullable`1<ulong> value)
  JToken op_Implicit(double value)
  JToken op_Implicit(float value)
  JToken op_Implicit(string value)
  JToken op_Implicit(UInt32 value)
  JToken op_Implicit(ulong value)
  JToken op_Implicit(Byte[] value)
  JToken op_Implicit(Uri value)
  JToken op_Implicit(TimeSpan value)
  JToken op_Implicit(Nullable`1<TimeSpan> value)
  JToken op_Implicit(Guid value)
  JToken op_Implicit(Nullable`1<Guid> value)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<JToken> System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator()
  int GetDeepHashCode()
  IJEnumerable`1<JToken> Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item(object key)
  JsonReader CreateReader()
  JToken FromObjectInternal(object o, JsonSerializer jsonSerializer)
  JToken FromObject(object o)
  JToken FromObject(object o, JsonSerializer jsonSerializer)
  T ToObject()
  object ToObject(Type objectType)
  T ToObject(JsonSerializer jsonSerializer)
  object ToObject(Type objectType, JsonSerializer jsonSerializer)
  JToken ReadFrom(JsonReader reader)
  JToken ReadFrom(JsonReader reader, JsonLoadSettings settings)
  JToken Parse(string json)
  JToken Parse(string json, JsonLoadSettings settings)
  JToken Load(JsonReader reader, JsonLoadSettings settings)
  JToken Load(JsonReader reader)
  void SetLineInfo(IJsonLineInfo lineInfo, JsonLoadSettings settings)
  void SetLineInfo(int lineNumber, int linePosition)
  bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo()
  int Newtonsoft.Json.IJsonLineInfo.get_LineNumber()
  int Newtonsoft.Json.IJsonLineInfo.get_LinePosition()
  JToken SelectToken(string path)
  JToken SelectToken(string path, bool errorWhenNoMatch)
  IEnumerable`1<JToken> SelectTokens(string path)
  IEnumerable`1<JToken> SelectTokens(string path, bool errorWhenNoMatch)
  object System.ICloneable.Clone()
  JToken DeepClone()
  void AddAnnotation(object annotation)
  T Annotation()
  object Annotation(Type type)
  IEnumerable`1<T> Annotations()
  IEnumerable`1<object> Annotations(Type type)
  void RemoveAnnotations()
  void RemoveAnnotations(Type type)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JProperty
Наследуется от: JContainer
Поля:
  JPropertyList _content
  string _name
Свойства:
  IList`1<JToken> ChildrenTokens
  string Name
  JToken Value
  JTokenType Type
Методы:
  IList`1<JToken> get_ChildrenTokens()
  string get_Name()
  JToken get_Value()
  void set_Value(JToken value)
  void .ctor(JProperty other)
  JToken GetItem(int index)
  void SetItem(int index, JToken item)
  bool RemoveItem(JToken item)
  void RemoveItemAt(int index)
  int IndexOfItem(JToken item)
  void InsertItem(int index, JToken item, bool skipParentCheck)
  bool ContainsItem(JToken item)
  void MergeItem(object content, JsonMergeSettings settings)
  void ClearItems()
  bool DeepEquals(JToken node)
  JToken CloneToken()
  JTokenType get_Type()
  void .ctor(string name)
  void .ctor(string name, Object[] content)
  void .ctor(string name, object content)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  int GetDeepHashCode()
  JProperty Load(JsonReader reader)
  JProperty Load(JsonReader reader, JsonLoadSettings settings)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JTokenType
Наследуется от: Enum
Поля:
  int value__
  JTokenType None
  JTokenType Object
  JTokenType Array
  JTokenType Constructor
  JTokenType Property
  JTokenType Comment
  JTokenType Integer
  JTokenType Float
  JTokenType String
  JTokenType Boolean
  JTokenType Null
  JTokenType Undefined
  JTokenType Date
  JTokenType Raw
  JTokenType Bytes
  JTokenType Guid
  JTokenType Uri
  JTokenType TimeSpan
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JValue
Наследуется от: JToken
Поля:
  JTokenType _valueType
  object _value
Свойства:
  bool HasValues
  JTokenType Type
  object Value
Методы:
  void .ctor(object value, JTokenType type)
  void .ctor(JValue other)
  void .ctor(long value)
  void .ctor(decimal value)
  void .ctor(char value)
  void .ctor(ulong value)
  void .ctor(double value)
  void .ctor(float value)
  void .ctor(DateTime value)
  void .ctor(DateTimeOffset value)
  void .ctor(bool value)
  void .ctor(string value)
  void .ctor(Guid value)
  void .ctor(Uri value)
  void .ctor(TimeSpan value)
  void .ctor(object value)
  bool DeepEquals(JToken node)
  bool get_HasValues()
  int Compare(JTokenType valueType, object objA, object objB)
  int CompareFloat(object objA, object objB)
  JToken CloneToken()
  JValue CreateComment(string value)
  JValue CreateString(string value)
  JValue CreateNull()
  JValue CreateUndefined()
  JTokenType GetValueType(Nullable`1<JTokenType> current, object value)
  JTokenType GetStringValueType(Nullable`1<JTokenType> current)
  JTokenType get_Type()
  object get_Value()
  void set_Value(object value)
  void WriteTo(JsonWriter writer, JsonConverter[] converters)
  int GetDeepHashCode()
  bool ValuesEquals(JValue v1, JValue v2)
  bool Equals(JValue other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider formatProvider)
  string ToString(string format, IFormatProvider formatProvider)
  int System.IComparable.CompareTo(object obj)
  int CompareTo(JValue obj)
  TypeCode System.IConvertible.GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type conversionType, IFormatProvider provider)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter
Наследуется от: PathFilter
Поля:
  Nullable`1<int> <Index>k__BackingField
Свойства:
  Nullable`1<int> Index
Методы:
  Nullable`1<int> get_Index()
  void set_Index(Nullable`1<int> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter
Наследуется от: PathFilter
Поля:
  List`1<int> <Indexes>k__BackingField
Свойства:
  List`1<int> Indexes
Методы:
  List`1<int> get_Indexes()
  void set_Indexes(List`1<int> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter
Наследуется от: PathFilter
Поля:
  Nullable`1<int> <Start>k__BackingField
  Nullable`1<int> <End>k__BackingField
  Nullable`1<int> <Step>k__BackingField
Свойства:
  Nullable`1<int> Start
  Nullable`1<int> End
  Nullable`1<int> Step
Методы:
  Nullable`1<int> get_Start()
  void set_Start(Nullable`1<int> value)
  Nullable`1<int> get_End()
  void set_End(Nullable`1<int> value)
  Nullable`1<int> get_Step()
  void set_Step(Nullable`1<int> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  bool IsValid(int index, int stopIndex, bool positiveStep)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.FieldFilter
Наследуется от: PathFilter
Поля:
  string <Name>k__BackingField
Свойства:
  string Name
Методы:
  string get_Name()
  void set_Name(string value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter
Наследуется от: PathFilter
Поля:
  List`1<string> <Names>k__BackingField
Свойства:
  List`1<string> Names
Методы:
  List`1<string> get_Names()
  void set_Names(List`1<string> value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.JPath
Наследуется от: object
Поля:
  string _expression
  List`1<PathFilter> <Filters>k__BackingField
  int _currentIndex
Свойства:
  List`1<PathFilter> Filters
Методы:
  List`1<PathFilter> get_Filters()
  void set_Filters(List`1<PathFilter> value)
  void .ctor(string expression)
  void ParseMain()
  bool ParsePath(List`1<PathFilter> filters, int currentPartStartIndex, bool query)
  PathFilter ParseIndexer(char indexerOpenChar)
  PathFilter ParseArrayIndexer(char indexerCloseChar)
  void EatWhitespace()
  PathFilter ParseQuery(char indexerCloseChar)
  QueryExpression ParseExpression()
  object ParseValue()
  string ReadQuotedString()
  bool Match(string s)
  QueryOperator ParseOperator()
  PathFilter ParseQuotedField(char indexerCloseChar)
  void EnsureLength(string message)
  IEnumerable`1<JToken> Evaluate(JToken t, bool errorWhenNoMatch)
  IEnumerable`1<JToken> Evaluate(List`1<PathFilter> filters, JToken t, bool errorWhenNoMatch)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.PathFilter
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  JToken GetTokenIndex(JToken t, bool errorWhenNoMatch, int index)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.QueryOperator
Наследуется от: Enum
Поля:
  int value__
  QueryOperator None
  QueryOperator Equals
  QueryOperator NotEquals
  QueryOperator Exists
  QueryOperator LessThan
  QueryOperator LessThanOrEquals
  QueryOperator GreaterThan
  QueryOperator GreaterThanOrEquals
  QueryOperator And
  QueryOperator Or
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.QueryExpression
Наследуется от: object
Поля:
  QueryOperator <Operator>k__BackingField
Свойства:
  QueryOperator Operator
Методы:
  QueryOperator get_Operator()
  void set_Operator(QueryOperator value)
  bool IsMatch(JToken t)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.CompositeExpression
Наследуется от: QueryExpression
Поля:
  List`1<QueryExpression> <Expressions>k__BackingField
Свойства:
  List`1<QueryExpression> Expressions
Методы:
  List`1<QueryExpression> get_Expressions()
  void set_Expressions(List`1<QueryExpression> value)
  void .ctor()
  bool IsMatch(JToken t)
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression
Наследуется от: QueryExpression
Поля:
  List`1<PathFilter> <Path>k__BackingField
  JValue <Value>k__BackingField
Свойства:
  List`1<PathFilter> Path
  JValue Value
Методы:
  List`1<PathFilter> get_Path()
  void set_Path(List`1<PathFilter> value)
  JValue get_Value()
  void set_Value(JValue value)
  bool IsMatch(JToken t)
  bool EqualsWithStringCoercion(JValue value, JValue queryValue)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.QueryFilter
Наследуется от: PathFilter
Поля:
  QueryExpression <Expression>k__BackingField
Свойства:
  QueryExpression Expression
Методы:
  QueryExpression get_Expression()
  void set_Expression(QueryExpression value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Linq.JsonPath.ScanFilter
Наследуется от: PathFilter
Поля:
  string <Name>k__BackingField
Свойства:
  string Name
Методы:
  string get_Name()
  void set_Name(string value)
  IEnumerable`1<JToken> ExecuteFilter(IEnumerable`1<JToken> current, bool errorWhenNoMatch)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.BinaryConverter
Наследуется от: JsonConverter
Поля:
  string BinaryTypeName
  string BinaryToArrayName
  ReflectionObject _reflectionObject
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  Byte[] GetByteArray(object value)
  void EnsureReflectionObject(Type t)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  Byte[] ReadByteArray(JsonReader reader)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.ColorConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.CustomCreationConverter`1
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanWrite
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  T Create(Type objectType)
  bool CanConvert(Type objectType)
  bool get_CanWrite()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.DateTimeConverterBase
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.EnumerableVectorConverter`1
Наследуется от: JsonConverter
Поля:
  VectorConverter VectorConverter
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.HashSetConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanWrite
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  bool get_CanWrite()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.KeyValuePairConverter
Наследуется от: JsonConverter
Поля:
  string KeyName
  string ValueName
  ThreadSafeStore`2<Type, ReflectionObject> ReflectionObjectPerType
Свойства:
Методы:
  ReflectionObject InitializeReflectionObject(Type t)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.BsonObjectIdConverter
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.Matrix4x4Converter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.QuaternionConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.RegexConverter
Наследуется от: JsonConverter
Поля:
  string PatternName
  string OptionsName
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool HasFlag(RegexOptions options, RegexOptions flag)
  void WriteBson(BsonWriter writer, Regex regex)
  void WriteJson(JsonWriter writer, Regex regex, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  object ReadRegexString(JsonReader reader)
  Regex ReadRegexObject(JsonReader reader, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.ResolutionConverter
Наследуется от: JsonConverter
Поля:
Свойства:
  bool CanRead
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool get_CanRead()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.StringEnumConverter
Наследуется от: JsonConverter
Поля:
  bool <CamelCaseText>k__BackingField
  bool <AllowIntegerValues>k__BackingField
Свойства:
  bool CamelCaseText
  bool AllowIntegerValues
Методы:
  bool get_CamelCaseText()
  void set_CamelCaseText(bool value)
  bool get_AllowIntegerValues()
  void set_AllowIntegerValues(bool value)
  void .ctor()
  void .ctor(bool camelCaseText)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.UriConverter
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  bool CanConvert(Type objectType)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.VectorConverter
Наследуется от: JsonConverter
Поля:
  Type V2
  Type V3
  Type V4
  bool <EnableVector2>k__BackingField
  bool <EnableVector3>k__BackingField
  bool <EnableVector4>k__BackingField
Свойства:
  bool EnableVector2
  bool EnableVector3
  bool EnableVector4
Методы:
  bool get_EnableVector2()
  void set_EnableVector2(bool value)
  bool get_EnableVector3()
  void set_EnableVector3(bool value)
  bool get_EnableVector4()
  void set_EnableVector4(bool value)
  void .ctor()
  void .ctor(bool enableVector2, bool enableVector3, bool enableVector4)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  void WriteVector(JsonWriter writer, float x, float y, Nullable`1<float> z, Nullable`1<float> w)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  Vector2 PopulateVector2(JsonReader reader)
  Vector3 PopulateVector3(JsonReader reader)
  Vector4 PopulateVector4(JsonReader reader)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.VersionConverter
Наследуется от: JsonConverter
Поля:
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  bool CanConvert(Type objectType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IsoDateTimeConverter
Наследуется от: DateTimeConverterBase
Поля:
  string DefaultDateTimeFormat
  DateTimeStyles _dateTimeStyles
  string _dateTimeFormat
  CultureInfo _culture
Свойства:
  DateTimeStyles DateTimeStyles
  string DateTimeFormat
  CultureInfo Culture
Методы:
  DateTimeStyles get_DateTimeStyles()
  void set_DateTimeStyles(DateTimeStyles value)
  string get_DateTimeFormat()
  void set_DateTimeFormat(string value)
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter
Наследуется от: DateTimeConverterBase
Поля:
Свойства:
Методы:
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlDocumentWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlDocument _document
Свойства:
  IXmlElement DocumentElement
Методы:
  void .ctor(XmlDocument document)
  IXmlNode CreateComment(string data)
  IXmlNode CreateTextNode(string text)
  IXmlNode CreateCDataSection(string data)
  IXmlNode CreateWhitespace(string text)
  IXmlNode CreateSignificantWhitespace(string text)
  IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone)
  IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset)
  IXmlNode CreateProcessingInstruction(string target, string data)
  IXmlElement CreateElement(string elementName)
  IXmlElement CreateElement(string qualifiedName, string namespaceUri)
  IXmlNode CreateAttribute(string name, string value)
  IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value)
  IXmlElement get_DocumentElement()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlElementWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlElement _element
Свойства:
  bool IsEmpty
Методы:
  void .ctor(XmlElement element)
  void SetAttributeNode(IXmlNode attribute)
  string GetPrefixOfNamespace(string namespaceUri)
  bool get_IsEmpty()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlDeclarationWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlDeclaration _declaration
Свойства:
  string Version
  string Encoding
  string Standalone
Методы:
  void .ctor(XmlDeclaration declaration)
  string get_Version()
  string get_Encoding()
  void set_Encoding(string value)
  string get_Standalone()
  void set_Standalone(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper
Наследуется от: XmlNodeWrapper
Поля:
  XmlDocumentType _documentType
Свойства:
  string Name
  string System
  string Public
  string InternalSubset
  string LocalName
Методы:
  void .ctor(XmlDocumentType documentType)
  string get_Name()
  string get_System()
  string get_Public()
  string get_InternalSubset()
  string get_LocalName()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlNodeWrapper
Наследуется от: object
Поля:
  XmlNode _node
  List`1<IXmlNode> _childNodes
  List`1<IXmlNode> _attributes
Свойства:
  object WrappedNode
  XmlNodeType NodeType
  string LocalName
  List`1<IXmlNode> ChildNodes
  List`1<IXmlNode> Attributes
  IXmlNode ParentNode
  string Value
  string NamespaceUri
Методы:
  void .ctor(XmlNode node)
  object get_WrappedNode()
  XmlNodeType get_NodeType()
  string get_LocalName()
  List`1<IXmlNode> get_ChildNodes()
  IXmlNode WrapNode(XmlNode node)
  List`1<IXmlNode> get_Attributes()
  IXmlNode get_ParentNode()
  string get_Value()
  void set_Value(string value)
  IXmlNode AppendChild(IXmlNode newChild)
  string get_NamespaceUri()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlDocument
Поля:
Свойства:
  IXmlElement DocumentElement
Методы:
  IXmlNode CreateComment(string text)
  IXmlNode CreateTextNode(string text)
  IXmlNode CreateCDataSection(string data)
  IXmlNode CreateWhitespace(string text)
  IXmlNode CreateSignificantWhitespace(string text)
  IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone)
  IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset)
  IXmlNode CreateProcessingInstruction(string target, string data)
  IXmlElement CreateElement(string elementName)
  IXmlElement CreateElement(string qualifiedName, string namespaceUri)
  IXmlNode CreateAttribute(string name, string value)
  IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value)
  IXmlElement get_DocumentElement()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlDeclaration
Поля:
Свойства:
  string Version
  string Encoding
  string Standalone
Методы:
  string get_Version()
  string get_Encoding()
  void set_Encoding(string value)
  string get_Standalone()
  void set_Standalone(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlDocumentType
Поля:
Свойства:
  string Name
  string System
  string Public
  string InternalSubset
Методы:
  string get_Name()
  string get_System()
  string get_Public()
  string get_InternalSubset()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlElement
Поля:
Свойства:
  bool IsEmpty
Методы:
  void SetAttributeNode(IXmlNode attribute)
  string GetPrefixOfNamespace(string namespaceUri)
  bool get_IsEmpty()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.IXmlNode
Поля:
Свойства:
  XmlNodeType NodeType
  string LocalName
  List`1<IXmlNode> ChildNodes
  List`1<IXmlNode> Attributes
  IXmlNode ParentNode
  string Value
  string NamespaceUri
  object WrappedNode
Методы:
  XmlNodeType get_NodeType()
  string get_LocalName()
  List`1<IXmlNode> get_ChildNodes()
  List`1<IXmlNode> get_Attributes()
  IXmlNode get_ParentNode()
  string get_Value()
  void set_Value(string value)
  IXmlNode AppendChild(IXmlNode newChild)
  string get_NamespaceUri()
  object get_WrappedNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XDeclarationWrapper
Наследуется от: XObjectWrapper
Поля:
  XDeclaration <Declaration>k__BackingField
Свойства:
  XDeclaration Declaration
  XmlNodeType NodeType
  string Version
  string Encoding
  string Standalone
Методы:
  XDeclaration get_Declaration()
  void set_Declaration(XDeclaration value)
  void .ctor(XDeclaration declaration)
  XmlNodeType get_NodeType()
  string get_Version()
  string get_Encoding()
  void set_Encoding(string value)
  string get_Standalone()
  void set_Standalone(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XDocumentTypeWrapper
Наследуется от: XObjectWrapper
Поля:
  XDocumentType _documentType
Свойства:
  string Name
  string System
  string Public
  string InternalSubset
  string LocalName
Методы:
  void .ctor(XDocumentType documentType)
  string get_Name()
  string get_System()
  string get_Public()
  string get_InternalSubset()
  string get_LocalName()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XDocumentWrapper
Наследуется от: XContainerWrapper
Поля:
Свойства:
  XDocument Document
  List`1<IXmlNode> ChildNodes
  IXmlElement DocumentElement
Методы:
  XDocument get_Document()
  void .ctor(XDocument document)
  List`1<IXmlNode> get_ChildNodes()
  IXmlNode CreateComment(string text)
  IXmlNode CreateTextNode(string text)
  IXmlNode CreateCDataSection(string data)
  IXmlNode CreateWhitespace(string text)
  IXmlNode CreateSignificantWhitespace(string text)
  IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone)
  IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset)
  IXmlNode CreateProcessingInstruction(string target, string data)
  IXmlElement CreateElement(string elementName)
  IXmlElement CreateElement(string qualifiedName, string namespaceUri)
  IXmlNode CreateAttribute(string name, string value)
  IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value)
  IXmlElement get_DocumentElement()
  IXmlNode AppendChild(IXmlNode newChild)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XTextWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XText Text
  string Value
  IXmlNode ParentNode
Методы:
  XText get_Text()
  void .ctor(XText text)
  string get_Value()
  void set_Value(string value)
  IXmlNode get_ParentNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XCommentWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XComment Text
  string Value
  IXmlNode ParentNode
Методы:
  XComment get_Text()
  void .ctor(XComment text)
  string get_Value()
  void set_Value(string value)
  IXmlNode get_ParentNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XProcessingInstructionWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XProcessingInstruction ProcessingInstruction
  string LocalName
  string Value
Методы:
  XProcessingInstruction get_ProcessingInstruction()
  void .ctor(XProcessingInstruction processingInstruction)
  string get_LocalName()
  string get_Value()
  void set_Value(string value)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XContainerWrapper
Наследуется от: XObjectWrapper
Поля:
  List`1<IXmlNode> _childNodes
Свойства:
  XContainer Container
  List`1<IXmlNode> ChildNodes
  IXmlNode ParentNode
Методы:
  XContainer get_Container()
  void .ctor(XContainer container)
  List`1<IXmlNode> get_ChildNodes()
  IXmlNode get_ParentNode()
  IXmlNode WrapNode(XObject node)
  IXmlNode AppendChild(IXmlNode newChild)
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XObjectWrapper
Наследуется от: object
Поля:
  List`1<IXmlNode> EmptyChildNodes
  XObject _xmlObject
Свойства:
  object WrappedNode
  XmlNodeType NodeType
  string LocalName
  List`1<IXmlNode> ChildNodes
  List`1<IXmlNode> Attributes
  IXmlNode ParentNode
  string Value
  string NamespaceUri
Методы:
  void .ctor(XObject xmlObject)
  object get_WrappedNode()
  XmlNodeType get_NodeType()
  string get_LocalName()
  List`1<IXmlNode> get_ChildNodes()
  List`1<IXmlNode> get_Attributes()
  IXmlNode get_ParentNode()
  string get_Value()
  void set_Value(string value)
  IXmlNode AppendChild(IXmlNode newChild)
  string get_NamespaceUri()
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XAttributeWrapper
Наследуется от: XObjectWrapper
Поля:
Свойства:
  XAttribute Attribute
  string Value
  string LocalName
  string NamespaceUri
  IXmlNode ParentNode
Методы:
  XAttribute get_Attribute()
  void .ctor(XAttribute attribute)
  string get_Value()
  void set_Value(string value)
  string get_LocalName()
  string get_NamespaceUri()
  IXmlNode get_ParentNode()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XElementWrapper
Наследуется от: XContainerWrapper
Поля:
  List`1<IXmlNode> _attributes
Свойства:
  XElement Element
  List`1<IXmlNode> Attributes
  string Value
  string LocalName
  string NamespaceUri
  bool IsEmpty
Методы:
  XElement get_Element()
  void .ctor(XElement element)
  void SetAttributeNode(IXmlNode attribute)
  List`1<IXmlNode> get_Attributes()
  IXmlNode AppendChild(IXmlNode newChild)
  string get_Value()
  void set_Value(string value)
  string get_LocalName()
  string get_NamespaceUri()
  string GetPrefixOfNamespace(string namespaceUri)
  bool get_IsEmpty()
--------------------------------------------------
Класс: Newtonsoft.Json.Converters.XmlNodeConverter
Наследуется от: JsonConverter
Поля:
  string TextName
  string CommentName
  string CDataName
  string WhitespaceName
  string SignificantWhitespaceName
  string DeclarationName
  string JsonNamespaceUri
  string <DeserializeRootElementName>k__BackingField
  bool <WriteArrayAttribute>k__BackingField
  bool <OmitRootObject>k__BackingField
Свойства:
  string DeserializeRootElementName
  bool WriteArrayAttribute
  bool OmitRootObject
Методы:
  string get_DeserializeRootElementName()
  void set_DeserializeRootElementName(string value)
  bool get_WriteArrayAttribute()
  void set_WriteArrayAttribute(bool value)
  bool get_OmitRootObject()
  void set_OmitRootObject(bool value)
  void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
  IXmlNode WrapXml(object value)
  void PushParentNamespaces(IXmlNode node, XmlNamespaceManager manager)
  string ResolveFullName(IXmlNode node, XmlNamespaceManager manager)
  string GetPropertyName(IXmlNode node, XmlNamespaceManager manager)
  bool IsArray(IXmlNode node)
  void SerializeGroupedNodes(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName)
  void SerializeNode(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName)
  bool AllSameName(IXmlNode node)
  object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
  void DeserializeValue(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, string propertyName, IXmlNode currentNode)
  void ReadElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName, XmlNamespaceManager manager)
  void CreateElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string elementName, XmlNamespaceManager manager, string elementPrefix, Dictionary`2<string, string> attributeNameValues)
  void AddAttribute(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string attributeName, XmlNamespaceManager manager, string attributePrefix)
  string ConvertTokenToXmlValue(JsonReader reader)
  void ReadArrayElements(JsonReader reader, IXmlDocument document, string propertyName, IXmlNode currentNode, XmlNamespaceManager manager)
  void AddJsonArrayAttribute(IXmlElement element, IXmlDocument document)
  Dictionary`2<string, string> ReadAttributeElements(JsonReader reader, XmlNamespaceManager manager)
  void CreateInstruction(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName)
  void CreateDocumentType(JsonReader reader, IXmlDocument document, IXmlNode currentNode)
  IXmlElement CreateElement(string elementName, IXmlDocument document, string elementPrefix, XmlNamespaceManager manager)
  void DeserializeNode(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, IXmlNode currentNode)
  bool IsNamespaceAttribute(string attributeName, String& prefix)
  bool ValueAttributes(List`1<IXmlNode> c)
  bool CanConvert(Type valueType)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonBinaryType
Наследуется от: Enum
Поля:
  byte value__
  BsonBinaryType Binary
  BsonBinaryType Function
  BsonBinaryType BinaryOld
  BsonBinaryType UuidOld
  BsonBinaryType Uuid
  BsonBinaryType Md5
  BsonBinaryType UserDefined
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonBinaryWriter
Наследуется от: object
Поля:
  Encoding Encoding
  BinaryWriter _writer
  Byte[] _largeByteBuffer
  DateTimeKind <DateTimeKindHandling>k__BackingField
Свойства:
  DateTimeKind DateTimeKindHandling
Методы:
  DateTimeKind get_DateTimeKindHandling()
  void set_DateTimeKindHandling(DateTimeKind value)
  void .ctor(BinaryWriter writer)
  void Flush()
  void Close()
  void WriteToken(BsonToken t)
  void WriteTokenInternal(BsonToken t)
  void WriteString(string s, int byteCount, Nullable`1<int> calculatedlengthPrefix)
  void WriteUtf8Bytes(string s, int byteCount)
  int CalculateSize(int stringByteCount)
  int CalculateSizeWithLength(int stringByteCount, bool includeSize)
  int CalculateSize(BsonToken t)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonReader
Наследуется от: JsonReader
Поля:
  int MaxCharBytesSize
  Byte[] SeqRange1
  Byte[] SeqRange2
  Byte[] SeqRange3
  Byte[] SeqRange4
  BinaryReader _reader
  List`1<ContainerContext> _stack
  Byte[] _byteBuffer
  Char[] _charBuffer
  BsonType _currentElementType
  BsonReaderState _bsonReaderState
  ContainerContext _currentContext
  bool _readRootValueAsArray
  bool _jsonNet35BinaryCompatibility
  DateTimeKind _dateTimeKindHandling
Свойства:
  bool JsonNet35BinaryCompatibility
  bool ReadRootValueAsArray
  DateTimeKind DateTimeKindHandling
Методы:
  bool get_JsonNet35BinaryCompatibility()
  void set_JsonNet35BinaryCompatibility(bool value)
  bool get_ReadRootValueAsArray()
  void set_ReadRootValueAsArray(bool value)
  DateTimeKind get_DateTimeKindHandling()
  void set_DateTimeKindHandling(DateTimeKind value)
  void .ctor(Stream stream)
  void .ctor(BinaryReader reader)
  void .ctor(Stream stream, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling)
  void .ctor(BinaryReader reader, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling)
  string ReadElement()
  bool Read()
  void Close()
  bool ReadCodeWScope()
  bool ReadReference()
  bool ReadNormal()
  void PopContext()
  void PushContext(ContainerContext newContext)
  byte ReadByte()
  void ReadType(BsonType type)
  Byte[] ReadBinary(BsonBinaryType& binaryType)
  string ReadString()
  string ReadLengthString()
  string GetString(int length)
  int GetLastFullCharStop(int start)
  int BytesInSequence(byte b)
  void EnsureBuffers()
  double ReadDouble()
  int ReadInt32()
  long ReadInt64()
  BsonType ReadType()
  void MovePosition(int count)
  Byte[] ReadBytes(int count)
  void .cctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonToken
Наследуется от: object
Поля:
  BsonToken <Parent>k__BackingField
  int <CalculatedSize>k__BackingField
Свойства:
  BsonType Type
  BsonToken Parent
  int CalculatedSize
Методы:
  BsonType get_Type()
  BsonToken get_Parent()
  void set_Parent(BsonToken value)
  int get_CalculatedSize()
  void set_CalculatedSize(int value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonObject
Наследуется от: BsonToken
Поля:
  List`1<BsonProperty> _children
Свойства:
  BsonType Type
Методы:
  void Add(string name, BsonToken token)
  BsonType get_Type()
  IEnumerator`1<BsonProperty> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonArray
Наследуется от: BsonToken
Поля:
  List`1<BsonToken> _children
Свойства:
  BsonType Type
Методы:
  void Add(BsonToken token)
  BsonType get_Type()
  IEnumerator`1<BsonToken> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonValue
Наследуется от: BsonToken
Поля:
  object _value
  BsonType _type
Свойства:
  object Value
  BsonType Type
Методы:
  void .ctor(object value, BsonType type)
  object get_Value()
  BsonType get_Type()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonString
Наследуется от: BsonValue
Поля:
  int <ByteCount>k__BackingField
  bool <IncludeLength>k__BackingField
Свойства:
  int ByteCount
  bool IncludeLength
Методы:
  int get_ByteCount()
  void set_ByteCount(int value)
  bool get_IncludeLength()
  void set_IncludeLength(bool value)
  void .ctor(object value, bool includeLength)
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonBinary
Наследуется от: BsonValue
Поля:
  BsonBinaryType <BinaryType>k__BackingField
Свойства:
  BsonBinaryType BinaryType
Методы:
  BsonBinaryType get_BinaryType()
  void set_BinaryType(BsonBinaryType value)
  void .ctor(Byte[] value, BsonBinaryType binaryType)
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonRegex
Наследуется от: BsonToken
Поля:
  BsonString <Pattern>k__BackingField
  BsonString <Options>k__BackingField
Свойства:
  BsonString Pattern
  BsonString Options
  BsonType Type
Методы:
  BsonString get_Pattern()
  void set_Pattern(BsonString value)
  BsonString get_Options()
  void set_Options(BsonString value)
  void .ctor(string pattern, string options)
  BsonType get_Type()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonProperty
Наследуется от: object
Поля:
  BsonString <Name>k__BackingField
  BsonToken <Value>k__BackingField
Свойства:
  BsonString Name
  BsonToken Value
Методы:
  BsonString get_Name()
  void set_Name(BsonString value)
  BsonToken get_Value()
  void set_Value(BsonToken value)
  void .ctor()
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonType
Наследуется от: Enum
Поля:
  sbyte value__
  BsonType Number
  BsonType String
  BsonType Object
  BsonType Array
  BsonType Binary
  BsonType Undefined
  BsonType Oid
  BsonType Boolean
  BsonType Date
  BsonType Null
  BsonType Regex
  BsonType Reference
  BsonType Code
  BsonType Symbol
  BsonType CodeWScope
  BsonType Integer
  BsonType TimeStamp
  BsonType Long
  BsonType MinKey
  BsonType MaxKey
Свойства:
Методы:
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonWriter
Наследуется от: JsonWriter
Поля:
  BsonBinaryWriter _writer
  BsonToken _root
  BsonToken _parent
  string _propertyName
Свойства:
  DateTimeKind DateTimeKindHandling
Методы:
  DateTimeKind get_DateTimeKindHandling()
  void set_DateTimeKindHandling(DateTimeKind value)
  void .ctor(Stream stream)
  void .ctor(BinaryWriter writer)
  void Flush()
  void WriteEnd(JsonToken token)
  void WriteComment(string text)
  void WriteStartConstructor(string name)
  void WriteRaw(string json)
  void WriteRawValue(string json)
  void WriteStartArray()
  void WriteStartObject()
  void WritePropertyName(string name)
  void Close()
  void AddParent(BsonToken container)
  void RemoveParent()
  void AddValue(object value, BsonType type)
  void AddToken(BsonToken token)
  void WriteValue(object value)
  void WriteNull()
  void WriteUndefined()
  void WriteValue(string value)
  void WriteValue(int value)
  void WriteValue(UInt32 value)
  void WriteValue(long value)
  void WriteValue(ulong value)
  void WriteValue(float value)
  void WriteValue(double value)
  void WriteValue(bool value)
  void WriteValue(short value)
  void WriteValue(ushort value)
  void WriteValue(char value)
  void WriteValue(byte value)
  void WriteValue(sbyte value)
  void WriteValue(decimal value)
  void WriteValue(DateTime value)
  void WriteValue(DateTimeOffset value)
  void WriteValue(Byte[] value)
  void WriteValue(Guid value)
  void WriteValue(TimeSpan value)
  void WriteValue(Uri value)
  void WriteObjectId(Byte[] value)
  void WriteRegex(string pattern, string options)
--------------------------------------------------
Класс: Newtonsoft.Json.Bson.BsonObjectId
Наследуется от: object
Поля:
  Byte[] <Value>k__BackingField
Свойства:
  Byte[] Value
Методы:
  Byte[] get_Value()
  void set_Value(Byte[] value)
  void .ctor(Byte[] value)
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=6 3DE43C11C7130AF9014115BCDC2584DFE6B50579
  __StaticArrayInitTypeSize=28 9E31F24F64765FCAA589F589324D17C9FCF6A06D
  __StaticArrayInitTypeSize=12 ADFD2E1C801C825415DD53F4F2F72A13B389313C
  __StaticArrayInitTypeSize=10 D40004AB0E92BF6C8DFE481B56BE3D04ABDA76EB
  __StaticArrayInitTypeSize=52 DD3AEFEADB1CD615F3017763F1568179FEE640B0
  __StaticArrayInitTypeSize=52 E92B39D8233061927D9ACDE54665E68E7535635A
Свойства:
Методы:
--------------------------------------------------
Класс: ProtoBuf.TimeSpanScale
Наследуется от: Enum
Поля:
  int value__
  TimeSpanScale Days
  TimeSpanScale Hours
  TimeSpanScale Minutes
  TimeSpanScale Seconds
  TimeSpanScale Milliseconds
  TimeSpanScale Ticks
  TimeSpanScale MinMax
Свойства:
Методы:
--------------------------------------------------
Класс: ProtoBuf.BclHelpers
Наследуется от: object
Поля:
  int FieldTimeSpanValue
  int FieldTimeSpanScale
  int FieldDecimalLow
  int FieldDecimalHigh
  int FieldDecimalSignScale
  int FieldGuidLow
  int FieldGuidHigh
  int FieldExistingObjectKey
  int FieldNewObjectKey
  int FieldExistingTypeKey
  int FieldNewTypeKey
  int FieldTypeName
  int FieldObject
  DateTime EpochOrigin
Свойства:
Методы:
  object GetUninitializedObject(Type type)
  void WriteTimeSpan(TimeSpan timeSpan, ProtoWriter dest)
  TimeSpan ReadTimeSpan(ProtoReader source)
  DateTime ReadDateTime(ProtoReader source)
  void WriteDateTime(DateTime value, ProtoWriter dest)
  long ReadTimeSpanTicks(ProtoReader source)
  decimal ReadDecimal(ProtoReader reader)
  void WriteDecimal(decimal value, ProtoWriter writer)
  void WriteGuid(Guid value, ProtoWriter dest)
  Guid ReadGuid(ProtoReader source)
  object ReadNetObject(object value, ProtoReader source, int key, Type type, NetObjectOptions options)
  void WriteNetObject(object value, ProtoWriter dest, int key, NetObjectOptions options)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.IExtension
Поля:
Свойства:
Методы:
  Stream BeginAppend()
  void EndAppend(Stream stream, bool commit)
  Stream BeginQuery()
  void EndQuery(Stream stream)
  int GetLength()
--------------------------------------------------
Класс: ProtoBuf.BufferExtension
Наследуется от: object
Поля:
  Byte[] buffer
Свойства:
Методы:
  int ProtoBuf.IExtension.GetLength()
  Stream ProtoBuf.IExtension.BeginAppend()
  void ProtoBuf.IExtension.EndAppend(Stream stream, bool commit)
  Stream ProtoBuf.IExtension.BeginQuery()
  void ProtoBuf.IExtension.EndQuery(Stream stream)
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.BufferPool
Наследуется от: object
Поля:
  int PoolSize
  int BufferLength
  Object[] pool
Свойства:
Методы:
  void Flush()
  void .ctor()
  Byte[] GetBuffer()
  void ResizeAndFlushLeft(Byte[]& buffer, int toFitAtLeastBytes, int copyFromIndex, int copyBytes)
  void ReleaseBufferToPool(Byte[]& buffer)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoBeforeSerializationAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoAfterSerializationAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoBeforeDeserializationAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoAfterDeserializationAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.Compiler.ProtoSerializer
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object value, ProtoWriter dest)
  IAsyncResult BeginInvoke(object value, ProtoWriter dest, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: ProtoBuf.Compiler.ProtoDeserializer
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  object Invoke(object value, ProtoReader source)
  IAsyncResult BeginInvoke(object value, ProtoReader source, AsyncCallback callback, object object)
  object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: ProtoBuf.Compiler.CodeLabel
Наследуется от: ValueType
Поля:
  Label Value
  int Index
Свойства:
Методы:
  void .ctor(Label value, int index)
--------------------------------------------------
Класс: ProtoBuf.Compiler.CompilerContext
Наследуется от: object
Поля:
  DynamicMethod method
  int next
  bool isStatic
  SerializerPair[] methodPairs
  bool isWriter
  bool nonPublic
  Local inputValue
  string assemblyName
  ILGenerator il
  MutableList locals
  int nextLabel
  BasicList knownTrustedAssemblies
  BasicList knownUntrustedAssemblies
  TypeModel model
  ILVersion metadataVersion
Свойства:
  TypeModel Model
  bool NonPublic
  Local InputValue
  ILVersion MetadataVersion
Методы:
  TypeModel get_Model()
  CodeLabel DefineLabel()
  void MarkLabel(CodeLabel label)
  ProtoSerializer BuildSerializer(IProtoSerializer head, TypeModel model)
  ProtoDeserializer BuildDeserializer(IProtoSerializer head, TypeModel model)
  void Return()
  bool IsObject(Type type)
  void CastToObject(Type type)
  void CastFromObject(Type type)
  MethodBuilder GetDedicatedMethod(int metaKey, bool read)
  int MapMetaKeyToCompiledKey(int metaKey)
  bool get_NonPublic()
  Local get_InputValue()
  void .ctor(ILGenerator il, bool isStatic, bool isWriter, SerializerPair[] methodPairs, TypeModel model, ILVersion metadataVersion, string assemblyName, Type inputType)
  void .ctor(Type associatedType, bool isWriter, bool isStatic, TypeModel model, Type inputType)
  void Emit(OpCode opcode)
  void LoadValue(string value)
  void LoadValue(float value)
  void LoadValue(double value)
  void LoadValue(long value)
  void LoadValue(int value)
  LocalBuilder GetFromPool(Type type)
  void ReleaseToPool(LocalBuilder value)
  void LoadReaderWriter()
  void StoreValue(Local local)
  void LoadValue(Local local)
  Local GetLocalWithValue(Type type, Local fromValue)
  void EmitBasicRead(string methodName, Type expectedType)
  void EmitBasicRead(Type helperType, string methodName, Type expectedType)
  void EmitBasicWrite(string methodName, Local fromValue)
  MethodInfo GetWriterMethod(string methodName)
  void EmitWrite(Type helperType, string methodName, Local valueFrom)
  void EmitCall(MethodInfo method)
  void LoadNullRef()
  void WriteNullCheckedTail(Type type, IProtoSerializer tail, Local valueFrom)
  void ReadNullCheckedTail(Type type, IProtoSerializer tail, Local valueFrom)
  void EmitCtor(Type type)
  void EmitCtor(ConstructorInfo ctor)
  void EmitCtor(Type type, Type[] parameterTypes)
  bool InternalsVisible(Assembly assembly)
  void CheckAccessibility(MemberInfo member)
  void LoadValue(FieldInfo field)
  void StoreValue(FieldInfo field)
  void LoadValue(PropertyInfo property)
  void StoreValue(PropertyInfo property)
  void LoadValue(ILGenerator il, int value)
  bool UseShortForm(Local local)
  void LoadAddress(Local local, Type type)
  void Branch(CodeLabel label, bool short)
  void BranchIfFalse(CodeLabel label, bool short)
  void BranchIfTrue(CodeLabel label, bool short)
  void BranchIfEqual(CodeLabel label, bool short)
  void CopyValue()
  void BranchIfGreater(CodeLabel label, bool short)
  void BranchIfLess(CodeLabel label, bool short)
  void DiscardValue()
  void Subtract()
  void Switch(CodeLabel[] jumpTable)
  void EndFinally()
  void BeginFinally()
  void EndTry(CodeLabel label, bool short)
  CodeLabel BeginTry()
  void Constrain(Type type)
  void TryCast(Type type)
  void Cast(Type type)
  IDisposable Using(Local local)
  void Add()
  void LoadLength(Local arr, bool zeroIfNull)
  void CreateArray(Type elementType, Local length)
  void LoadArrayValue(Local arr, Local i)
  void LoadValue(Type type)
  void ConvertToInt32(ProtoTypeCode typeCode, bool uint32Overflow)
  void ConvertFromInt32(ProtoTypeCode typeCode, bool uint32Overflow)
  void LoadValue(decimal value)
  void LoadValue(Guid value)
  void LoadSerializationContext()
  Type MapType(Type type)
  ILVersion get_MetadataVersion()
  bool AllowInternal(PropertyInfo property)
--------------------------------------------------
Класс: ProtoBuf.Compiler.Local
Наследуется от: object
Поля:
  LocalBuilder value
  CompilerContext ctx
  Type type
Свойства:
  Type Type
  LocalBuilder Value
Методы:
  Type get_Type()
  Local AsCopy()
  LocalBuilder get_Value()
  void Dispose()
  void .ctor(LocalBuilder value, Type type)
  void .ctor(CompilerContext ctx, Type type)
  bool IsSame(Local other)
--------------------------------------------------
Класс: ProtoBuf.DataFormat
Наследуется от: Enum
Поля:
  int value__
  DataFormat Default
  DataFormat ZigZag
  DataFormat TwosComplement
  DataFormat FixedSize
  DataFormat Group
Свойства:
Методы:
--------------------------------------------------
Класс: ProtoBuf.IExtensible
Поля:
Свойства:
Методы:
  IExtension GetExtensionObject(bool createIfMissing)
--------------------------------------------------
Класс: ProtoBuf.Extensible
Наследуется от: object
Поля:
  IExtension extensionObject
Свойства:
Методы:
  IExtension ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
  IExtension GetExtensionObject(bool createIfMissing)
  IExtension GetExtensionObject(IExtension& extensionObject, bool createIfMissing)
  void AppendValue(IExtensible instance, int tag, TValue value)
  void AppendValue(IExtensible instance, int tag, DataFormat format, TValue value)
  TValue GetValue(IExtensible instance, int tag)
  TValue GetValue(IExtensible instance, int tag, DataFormat format)
  bool TryGetValue(IExtensible instance, int tag, TValue& value)
  bool TryGetValue(IExtensible instance, int tag, DataFormat format, TValue& value)
  bool TryGetValue(IExtensible instance, int tag, DataFormat format, bool allowDefinedTag, TValue& value)
  IEnumerable`1<TValue> GetValues(IExtensible instance, int tag)
  IEnumerable`1<TValue> GetValues(IExtensible instance, int tag, DataFormat format)
  bool TryGetValue(TypeModel model, Type type, IExtensible instance, int tag, DataFormat format, bool allowDefinedTag, Object& value)
  IEnumerable GetValues(TypeModel model, Type type, IExtensible instance, int tag, DataFormat format)
  void AppendValue(TypeModel model, IExtensible instance, int tag, DataFormat format, object value)
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.ExtensibleUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerable`1<TValue> GetExtendedValues(IExtensible instance, int tag, DataFormat format, bool singleton, bool allowDefinedTag)
  IEnumerable GetExtendedValues(TypeModel model, Type type, IExtensible instance, int tag, DataFormat format, bool singleton, bool allowDefinedTag)
  void AppendExtendValue(TypeModel model, IExtensible instance, int tag, DataFormat format, object value)
--------------------------------------------------
Класс: ProtoBuf.Helpers
Наследуется от: object
Поля:
  Type[] EmptyTypes
Свойства:
Методы:
  void .ctor()
  StringBuilder AppendLine(StringBuilder builder)
  bool IsNullOrEmpty(string value)
  void DebugWriteLine(string message, object obj)
  void DebugWriteLine(string message)
  void TraceWriteLine(string message)
  void DebugAssert(bool condition, string message)
  void DebugAssert(bool condition, string message, Object[] args)
  void DebugAssert(bool condition)
  void Sort(Int32[] keys, Object[] values)
  void BlockCopy(Byte[] from, int fromIndex, Byte[] to, int toIndex, int count)
  bool IsInfinity(float value)
  MethodInfo GetInstanceMethod(Type declaringType, string name)
  MethodInfo GetStaticMethod(Type declaringType, string name)
  MethodInfo GetInstanceMethod(Type declaringType, string name, Type[] types)
  bool IsSubclassOf(Type type, Type baseClass)
  bool IsInfinity(double value)
  ProtoTypeCode GetTypeCode(Type type)
  Type GetUnderlyingType(Type type)
  bool IsValueType(Type type)
  bool IsEnum(Type type)
  MethodInfo GetGetMethod(PropertyInfo property, bool nonPublic, bool allowInternal)
  MethodInfo GetSetMethod(PropertyInfo property, bool nonPublic, bool allowInternal)
  ConstructorInfo GetConstructor(Type type, Type[] parameterTypes, bool nonPublic)
  ConstructorInfo[] GetConstructors(Type type, bool nonPublic)
  PropertyInfo GetProperty(Type type, string name, bool nonPublic)
  object ParseEnum(Type type, string value)
  MemberInfo[] GetInstanceFieldsAndProperties(Type type, bool publicOnly)
  Type GetMemberType(MemberInfo member)
  bool IsAssignableFrom(Type target, Type type)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoTypeCode
Наследуется от: Enum
Поля:
  int value__
  ProtoTypeCode Empty
  ProtoTypeCode Unknown
  ProtoTypeCode Boolean
  ProtoTypeCode Char
  ProtoTypeCode SByte
  ProtoTypeCode Byte
  ProtoTypeCode Int16
  ProtoTypeCode UInt16
  ProtoTypeCode Int32
  ProtoTypeCode UInt32
  ProtoTypeCode Int64
  ProtoTypeCode UInt64
  ProtoTypeCode Single
  ProtoTypeCode Double
  ProtoTypeCode Decimal
  ProtoTypeCode DateTime
  ProtoTypeCode String
  ProtoTypeCode TimeSpan
  ProtoTypeCode ByteArray
  ProtoTypeCode Guid
  ProtoTypeCode Uri
  ProtoTypeCode Type
Свойства:
Методы:
--------------------------------------------------
Класс: ProtoBuf.ImplicitFields
Наследуется от: Enum
Поля:
  int value__
  ImplicitFields None
  ImplicitFields AllPublic
  ImplicitFields AllFields
Свойства:
Методы:
--------------------------------------------------
Класс: ProtoBuf.Meta.AttributeMap
Наследуется от: object
Поля:
Свойства:
  Type AttributeType
  object Target
Методы:
  bool TryGet(string key, bool publicOnly, Object& value)
  bool TryGet(string key, Object& value)
  Type get_AttributeType()
  AttributeMap[] Create(TypeModel model, Type type, bool inherit)
  AttributeMap[] Create(TypeModel model, MemberInfo member, bool inherit)
  AttributeMap[] Create(TypeModel model, Assembly assembly)
  object get_Target()
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.Meta.BasicList
Наследуется от: object
Поля:
  Node nil
  Node head
Свойства:
  object Item
  int Count
Методы:
  void CopyTo(Array array, int offset)
  int Add(object value)
  object get_Item(int index)
  void Trim()
  int get_Count()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  NodeEnumerator GetEnumerator()
  int IndexOf(MatchPredicate predicate, object ctx)
  int IndexOfString(string value)
  int IndexOfReference(object instance)
  bool Contains(object value)
  BasicList GetContiguousGroups(Int32[] keys, Object[] values)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Meta.MutableList
Наследуется от: BasicList
Поля:
Свойства:
  object Item
Методы:
  object get_Item(int index)
  void set_Item(int index, object value)
  void RemoveLast()
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.Meta.CallbackSet
Наследуется от: object
Поля:
  MetaType metaType
  MethodInfo beforeSerialize
  MethodInfo afterSerialize
  MethodInfo beforeDeserialize
  MethodInfo afterDeserialize
Свойства:
  MethodInfo Item
  MethodInfo BeforeSerialize
  MethodInfo BeforeDeserialize
  MethodInfo AfterSerialize
  MethodInfo AfterDeserialize
  bool NonTrivial
Методы:
  void .ctor(MetaType metaType)
  MethodInfo get_Item(CallbackType callbackType)
  bool CheckCallbackParameters(TypeModel model, MethodInfo method)
  MethodInfo SanityCheckCallback(TypeModel model, MethodInfo callback)
  Exception CreateInvalidCallbackSignature(MethodInfo method)
  MethodInfo get_BeforeSerialize()
  void set_BeforeSerialize(MethodInfo value)
  MethodInfo get_BeforeDeserialize()
  void set_BeforeDeserialize(MethodInfo value)
  MethodInfo get_AfterSerialize()
  void set_AfterSerialize(MethodInfo value)
  MethodInfo get_AfterDeserialize()
  void set_AfterDeserialize(MethodInfo value)
  bool get_NonTrivial()
--------------------------------------------------
Класс: ProtoBuf.Serializers.ISerializerProxy
Поля:
Свойства:
  IProtoSerializer Serializer
Методы:
  IProtoSerializer get_Serializer()
--------------------------------------------------
Класс: ProtoBuf.Meta.MetaType
Наследуется от: object
Поля:
  byte OPTIONS_Pending
  byte OPTIONS_EnumPassThru
  byte OPTIONS_Frozen
  byte OPTIONS_PrivateOnApi
  byte OPTIONS_SkipConstructor
  byte OPTIONS_AsReferenceDefault
  byte OPTIONS_AutoTuple
  byte OPTIONS_IgnoreListHandling
  MetaType baseType
  BasicList subTypes
  Type ienumerable
  CallbackSet callbacks
  string name
  MethodInfo factory
  RuntimeTypeModel model
  Type type
  IProtoTypeSerializer serializer
  Type constructType
  Type surrogate
  BasicList fields
  Byte modreq(System.Runtime.CompilerServices.IsVolatile) flags
Свойства:
  IProtoSerializer ProtoBuf.Serializers.ISerializerProxy.Serializer
  MetaType BaseType
  TypeModel Model
  bool IncludeSerializerMethod
  bool AsReferenceDefault
  bool HasCallbacks
  bool HasSubtypes
  CallbackSet Callbacks
  bool IsValueType
  string Name
  Type Type
  IProtoTypeSerializer Serializer
  bool IsList
  bool UseConstructor
  Type ConstructType
  ValueMember Item
  ValueMember Item
  bool EnumPassthru
  bool IgnoreListHandling
  bool Pending
  IEnumerable Fields
  bool IsAutoTuple
Методы:
  string ToString()
  IProtoSerializer ProtoBuf.Serializers.ISerializerProxy.get_Serializer()
  MetaType get_BaseType()
  TypeModel get_Model()
  bool get_IncludeSerializerMethod()
  void set_IncludeSerializerMethod(bool value)
  bool get_AsReferenceDefault()
  void set_AsReferenceDefault(bool value)
  bool IsValidSubType(Type subType)
  MetaType AddSubType(int fieldNumber, Type derivedType)
  MetaType AddSubType(int fieldNumber, Type derivedType, DataFormat dataFormat)
  void SetBaseType(MetaType baseType)
  bool get_HasCallbacks()
  bool get_HasSubtypes()
  CallbackSet get_Callbacks()
  bool get_IsValueType()
  MetaType SetCallbacks(MethodInfo beforeSerialize, MethodInfo afterSerialize, MethodInfo beforeDeserialize, MethodInfo afterDeserialize)
  MetaType SetCallbacks(string beforeSerialize, string afterSerialize, string beforeDeserialize, string afterDeserialize)
  string GetSchemaTypeName()
  string get_Name()
  void set_Name(string value)
  MetaType SetFactory(MethodInfo factory)
  MetaType SetFactory(string factory)
  MethodInfo ResolveMethod(string name, bool instance)
  Exception InbuiltType(Type type)
  void .ctor(RuntimeTypeModel model, Type type, MethodInfo factory)
  void ThrowIfFrozen()
  Type get_Type()
  IProtoTypeSerializer get_Serializer()
  bool get_IsList()
  IProtoTypeSerializer BuildSerializer()
  Type GetBaseType(MetaType type)
  bool GetAsReferenceDefault(RuntimeTypeModel model, Type type)
  void ApplyDefaultBehaviour()
  void ApplyDefaultBehaviour_AddMembers(TypeModel model, AttributeFamily family, bool isEnum, BasicList partialMembers, int dataMemberOffset, bool inferTagByName, ImplicitFields implicitMode, BasicList members, MemberInfo member, Boolean& forced, bool isPublic, bool isField, Type& effectiveType)
  MethodInfo Coalesce(MethodInfo[] arr, int x, int y)
  AttributeFamily GetContractFamily(RuntimeTypeModel model, Type type, AttributeMap[] attributes)
  ConstructorInfo ResolveTupleConstructor(Type type, MemberInfo[]& mappedMembers)
  void CheckForCallback(MethodInfo method, AttributeMap[] attributes, string callbackTypeName, MethodInfo[]& callbacks, int index)
  bool HasFamily(AttributeFamily value, AttributeFamily required)
  ProtoMemberAttribute NormalizeProtoMember(TypeModel model, MemberInfo member, AttributeFamily family, bool forced, bool isEnum, BasicList partialMembers, int dataMemberOffset, bool inferByTagName)
  ValueMember ApplyDefaultBehaviour(bool isEnum, ProtoMemberAttribute normalizedAttribute)
  void GetDataFormat(DataFormat& value, AttributeMap attrib, string memberName)
  void GetIgnore(Boolean& ignore, AttributeMap attrib, AttributeMap[] attribs, string fullName)
  void GetFieldBoolean(Boolean& value, AttributeMap attrib, string memberName)
  bool GetFieldBoolean(Boolean& value, AttributeMap attrib, string memberName, bool publicOnly)
  void GetFieldNumber(Int32& value, AttributeMap attrib, string memberName)
  void GetFieldName(String& name, AttributeMap attrib, string memberName)
  AttributeMap GetAttribute(AttributeMap[] attribs, string fullName)
  MetaType Add(int fieldNumber, string memberName)
  ValueMember AddField(int fieldNumber, string memberName)
  bool get_UseConstructor()
  void set_UseConstructor(bool value)
  Type get_ConstructType()
  void set_ConstructType(Type value)
  MetaType Add(string memberName)
  void SetSurrogate(Type surrogateType)
  MetaType GetSurrogateOrSelf()
  MetaType GetSurrogateOrBaseOrSelf(bool deep)
  int GetNextFieldNumber()
  MetaType Add(String[] memberNames)
  MetaType Add(int fieldNumber, string memberName, object defaultValue)
  MetaType Add(int fieldNumber, string memberName, Type itemType, Type defaultType)
  ValueMember AddField(int fieldNumber, string memberName, Type itemType, Type defaultType)
  ValueMember AddField(int fieldNumber, string memberName, Type itemType, Type defaultType, object defaultValue)
  void ResolveListTypes(TypeModel model, Type type, Type& itemType, Type& defaultType)
  void Add(ValueMember member)
  ValueMember get_Item(int fieldNumber)
  ValueMember get_Item(MemberInfo member)
  ValueMember[] GetFields()
  SubType[] GetSubtypes()
  void CompileInPlace()
  bool IsDefined(int fieldNumber)
  int GetKey(bool demand, bool getBaseKey)
  EnumPair[] GetEnumMap()
  bool get_EnumPassthru()
  void set_EnumPassthru(bool value)
  bool get_IgnoreListHandling()
  void set_IgnoreListHandling(bool value)
  bool get_Pending()
  void set_Pending(bool value)
  bool HasFlag(byte flag)
  void SetFlag(byte flag, bool value, bool throwIfFrozen)
  MetaType GetRootType(MetaType source)
  bool IsPrepared()
  IEnumerable get_Fields()
  StringBuilder NewLine(StringBuilder builder, int indent)
  bool get_IsAutoTuple()
  void WriteSchema(StringBuilder builder, int indent, Boolean& requiresBclImport)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Meta.TypeModel
Наследуется от: object
Поля:
  Type ilist
  TypeFormatEventHandler DynamicTypeFormatting
Свойства:
Методы:
  Type MapType(Type type)
  Type MapType(Type type, bool demand)
  WireType GetWireType(ProtoTypeCode code, DataFormat format, Type& type, Int32& modelKey)
  bool TrySerializeAuxiliaryType(ProtoWriter writer, Type type, DataFormat format, int tag, object value, bool isInsideList)
  void SerializeCore(ProtoWriter writer, object value)
  void Serialize(Stream dest, object value)
  void Serialize(Stream dest, object value, SerializationContext context)
  void Serialize(ProtoWriter dest, object value)
  object DeserializeWithLengthPrefix(Stream source, object value, Type type, PrefixStyle style, int fieldNumber)
  object DeserializeWithLengthPrefix(Stream source, object value, Type type, PrefixStyle style, int expectedField, TypeResolver resolver)
  object DeserializeWithLengthPrefix(Stream source, object value, Type type, PrefixStyle style, int expectedField, TypeResolver resolver, Int32& bytesRead)
  object DeserializeWithLengthPrefix(Stream source, object value, Type type, PrefixStyle style, int expectedField, TypeResolver resolver, Int32& bytesRead, Boolean& haveObject, SerializationContext context)
  IEnumerable DeserializeItems(Stream source, Type type, PrefixStyle style, int expectedField, TypeResolver resolver)
  IEnumerable DeserializeItems(Stream source, Type type, PrefixStyle style, int expectedField, TypeResolver resolver, SerializationContext context)
  IEnumerable`1<T> DeserializeItems(Stream source, PrefixStyle style, int expectedField)
  IEnumerable`1<T> DeserializeItems(Stream source, PrefixStyle style, int expectedField, SerializationContext context)
  void SerializeWithLengthPrefix(Stream dest, object value, Type type, PrefixStyle style, int fieldNumber)
  void SerializeWithLengthPrefix(Stream dest, object value, Type type, PrefixStyle style, int fieldNumber, SerializationContext context)
  object Deserialize(Stream source, object value, Type type)
  object Deserialize(Stream source, object value, Type type, SerializationContext context)
  bool PrepareDeserialize(object value, Type& type)
  object Deserialize(Stream source, object value, Type type, int length)
  object Deserialize(Stream source, object value, Type type, int length, SerializationContext context)
  object Deserialize(ProtoReader source, object value, Type type)
  object DeserializeCore(ProtoReader reader, Type type, object value, bool noAutoCreate)
  MethodInfo ResolveListAdd(TypeModel model, Type listType, Type itemType, Boolean& isList)
  Type GetListItemType(TypeModel model, Type listType)
  void TestEnumerableListPatterns(TypeModel model, BasicList candidates, Type iType)
  bool CheckDictionaryAccessors(TypeModel model, Type pair, Type value)
  bool TryDeserializeList(TypeModel model, ProtoReader reader, DataFormat format, int tag, Type listType, Type itemType, Object& value)
  object CreateListInstance(Type listType, Type itemType)
  bool TryDeserializeAuxiliaryType(ProtoReader reader, DataFormat format, int tag, Type type, Object& value, bool skipOtherFields, bool asListItem, bool autoCreate, bool insideList)
  RuntimeTypeModel Create()
  Type ResolveProxies(Type type)
  bool IsDefined(Type type)
  int GetKey(Type& type)
  int GetKeyImpl(Type type)
  void Serialize(int key, object value, ProtoWriter dest)
  object Deserialize(int key, object value, ProtoReader source)
  object DeepClone(object value)
  void ThrowUnexpectedSubtype(Type expected, Type actual)
  void ThrowUnexpectedType(Type type)
  Exception CreateNestedListsNotSupported()
  void ThrowCannotCreateInstance(Type type)
  string SerializeType(TypeModel model, Type type)
  Type DeserializeType(TypeModel model, string value)
  bool CanSerializeContractType(Type type)
  bool CanSerialize(Type type)
  bool CanSerializeBasicType(Type type)
  bool CanSerialize(Type type, bool allowBasic, bool allowContract, bool allowLists)
  string GetSchema(Type type)
  void add_DynamicTypeFormatting(TypeFormatEventHandler value)
  void remove_DynamicTypeFormatting(TypeFormatEventHandler value)
  IFormatter CreateFormatter(Type type)
  Type GetType(string fullName, Assembly context)
  Type ResolveKnownType(string name, TypeModel model, Assembly assembly)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Meta.RuntimeTypeModel
Наследуется от: TypeModel
Поля:
  byte OPTIONS_InferTagFromNameDefault
  byte OPTIONS_IsDefaultModel
  byte OPTIONS_Frozen
  byte OPTIONS_AutoAddMissingTypes
  byte OPTIONS_AutoCompile
  byte OPTIONS_UseImplicitZeroDefaults
  byte OPTIONS_AllowParseableTypes
  byte OPTIONS_AutoAddProtoContractTypesOnly
  int KnownTypes_Array
  int KnownTypes_Dictionary
  int KnownTypes_Hashtable
  int KnownTypes_ArrayCutoff
  byte options
  MatchPredicate MetaTypeFinder
  MatchPredicate BasicTypeFinder
  BasicList basicTypes
  BasicList types
  int metadataTimeoutMilliseconds
  int contentionCounter
  object contentionLock
  LockContentedEventHandler LockContended
  MethodInfo defaultFactory
Свойства:
  bool InferTagFromNameDefault
  bool AutoAddProtoContractTypesOnly
  bool UseImplicitZeroDefaults
  bool AllowParseableTypes
  RuntimeTypeModel Default
  MetaType Item
  bool AutoCompile
  bool AutoAddMissingTypes
  int MetadataTimeoutMilliseconds
Методы:
  bool GetOption(byte option)
  void SetOption(byte option, bool value)
  bool get_InferTagFromNameDefault()
  void set_InferTagFromNameDefault(bool value)
  bool get_AutoAddProtoContractTypesOnly()
  void set_AutoAddProtoContractTypesOnly(bool value)
  bool get_UseImplicitZeroDefaults()
  void set_UseImplicitZeroDefaults(bool value)
  bool get_AllowParseableTypes()
  void set_AllowParseableTypes(bool value)
  RuntimeTypeModel get_Default()
  IEnumerable GetTypes()
  string GetSchema(Type type)
  void CascadeDependents(BasicList list, MetaType metaType)
  void .ctor(bool isDefault)
  MetaType get_Item(Type type)
  MetaType FindWithoutAdd(Type type)
  bool MetaTypeFinderImpl(object value, object ctx)
  bool BasicTypeFinderImpl(object value, object ctx)
  void WaitOnLock(MetaType type)
  IProtoSerializer TryGetBasicTypeSerializer(Type type)
  int FindOrAddAuto(Type type, bool demand, bool addWithContractOnly, bool addEvenIfAutoDisabled)
  MetaType RecogniseCommonTypes(Type type)
  MetaType Create(Type type)
  MetaType Add(Type type, bool applyDefaultBehaviour)
  bool get_AutoCompile()
  void set_AutoCompile(bool value)
  bool get_AutoAddMissingTypes()
  void set_AutoAddMissingTypes(bool value)
  void ThrowIfFrozen()
  void Freeze()
  int GetKeyImpl(Type type)
  int GetKey(Type type, bool demand, bool getBaseKey)
  void Serialize(int key, object value, ProtoWriter dest)
  object Deserialize(int key, object value, ProtoReader source)
  ProtoSerializer GetSerializer(IProtoSerializer serializer, bool compiled)
  void CompileInPlace()
  void BuildAllSerializers()
  TypeModel Compile()
  ILGenerator Override(TypeBuilder type, string name)
  TypeModel Compile(string name, string path)
  TypeModel Compile(CompilerOptions options)
  void WriteConstructors(TypeBuilder type, Int32& index, SerializerPair[] methodPairs, ILGenerator& il, int knownTypesCategory, FieldBuilder knownTypes, Type knownTypesLookupType, CompilerContext ctx)
  CompilerContext WriteSerializeDeserialize(string assemblyName, TypeBuilder type, SerializerPair[] methodPairs, ILVersion ilVersion, ILGenerator& il)
  void WriteGetKeyImpl(TypeBuilder type, bool hasInheritance, SerializerPair[] methodPairs, ILVersion ilVersion, string assemblyName, ILGenerator& il, Int32& knownTypesCategory, FieldBuilder& knownTypes, Type& knownTypesLookupType)
  void WriteSerializers(CompilerOptions options, string assemblyName, TypeBuilder type, Int32& index, Boolean& hasInheritance, SerializerPair[]& methodPairs, ILVersion& ilVersion)
  TypeBuilder WriteBasicTypeModel(CompilerOptions options, string typeName, ModuleBuilder module)
  void WriteAssemblyAttributes(CompilerOptions options, string assemblyName, AssemblyBuilder asm)
  MethodBuilder EmitBoxedSerializer(TypeBuilder type, int i, Type valueType, SerializerPair[] methodPairs, TypeModel model, ILVersion ilVersion, string assemblyName)
  bool IsPrepared(Type type)
  EnumPair[] GetEnumMap(Type type)
  int get_MetadataTimeoutMilliseconds()
  void set_MetadataTimeoutMilliseconds(int value)
  void TakeLock(Int32& opaqueToken)
  int GetContention()
  void AddContention()
  void ReleaseLock(int opaqueToken)
  void add_LockContended(LockContentedEventHandler value)
  void remove_LockContended(LockContentedEventHandler value)
  void ResolveListTypes(Type type, Type& itemType, Type& defaultType)
  string GetSchemaTypeName(Type effectiveType, DataFormat dataFormat, bool asReference, bool dynamicType, Boolean& requiresBclImport)
  void SetDefaultFactory(MethodInfo methodInfo)
  void VerifyFactory(MethodInfo factory, Type type)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Meta.LockContentedEventArgs
Наследуется от: EventArgs
Поля:
  string ownerStackTrace
Свойства:
  string OwnerStackTrace
Методы:
  void .ctor(string ownerStackTrace)
  string get_OwnerStackTrace()
--------------------------------------------------
Класс: ProtoBuf.Meta.LockContentedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, LockContentedEventArgs args)
  IAsyncResult BeginInvoke(object sender, LockContentedEventArgs args, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: ProtoBuf.Meta.SubType
Наследуется от: object
Поля:
  int fieldNumber
  MetaType derivedType
  DataFormat dataFormat
  IProtoSerializer serializer
Свойства:
  int FieldNumber
  MetaType DerivedType
  IProtoSerializer Serializer
Методы:
  int get_FieldNumber()
  MetaType get_DerivedType()
  void .ctor(int fieldNumber, MetaType derivedType, DataFormat format)
  IProtoSerializer get_Serializer()
  IProtoSerializer BuildSerializer()
--------------------------------------------------
Класс: ProtoBuf.Meta.TypeFormatEventArgs
Наследуется от: EventArgs
Поля:
  Type type
  string formattedName
  bool typeFixed
Свойства:
  Type Type
  string FormattedName
Методы:
  Type get_Type()
  void set_Type(Type value)
  string get_FormattedName()
  void set_FormattedName(string value)
  void .ctor(string formattedName)
  void .ctor(Type type)
--------------------------------------------------
Класс: ProtoBuf.Meta.TypeFormatEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, TypeFormatEventArgs args)
  IAsyncResult BeginInvoke(object sender, TypeFormatEventArgs args, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: ProtoBuf.Meta.ValueMember
Наследуется от: object
Поля:
  byte OPTIONS_IsStrict
  byte OPTIONS_IsPacked
  byte OPTIONS_IsRequired
  byte OPTIONS_OverwriteList
  byte OPTIONS_SupportNull
  int fieldNumber
  MemberInfo member
  Type parentType
  Type itemType
  Type defaultType
  Type memberType
  object defaultValue
  RuntimeTypeModel model
  IProtoSerializer serializer
  DataFormat dataFormat
  bool asReference
  bool dynamicType
  MethodInfo getSpecified
  MethodInfo setSpecified
  string name
  byte flags
Свойства:
  int FieldNumber
  MemberInfo Member
  Type ItemType
  Type MemberType
  Type DefaultType
  Type ParentType
  object DefaultValue
  IProtoSerializer Serializer
  DataFormat DataFormat
  bool IsStrict
  bool IsPacked
  bool OverwriteList
  bool IsRequired
  bool AsReference
  bool DynamicType
  string Name
  bool SupportNull
Методы:
  int get_FieldNumber()
  MemberInfo get_Member()
  Type get_ItemType()
  Type get_MemberType()
  Type get_DefaultType()
  Type get_ParentType()
  object get_DefaultValue()
  void set_DefaultValue(object value)
  void .ctor(RuntimeTypeModel model, Type parentType, int fieldNumber, MemberInfo member, Type memberType, Type itemType, Type defaultType, DataFormat dataFormat, object defaultValue)
  void .ctor(RuntimeTypeModel model, int fieldNumber, Type memberType, Type itemType, Type defaultType, DataFormat dataFormat)
  object GetRawEnumValue()
  object ParseDefaultValue(Type type, object value)
  IProtoSerializer get_Serializer()
  DataFormat get_DataFormat()
  void set_DataFormat(DataFormat value)
  bool get_IsStrict()
  void set_IsStrict(bool value)
  bool get_IsPacked()
  void set_IsPacked(bool value)
  bool get_OverwriteList()
  void set_OverwriteList(bool value)
  bool get_IsRequired()
  void set_IsRequired(bool value)
  bool get_AsReference()
  void set_AsReference(bool value)
  bool get_DynamicType()
  void set_DynamicType(bool value)
  void SetSpecified(MethodInfo getSpecified, MethodInfo setSpecified)
  void ThrowIfFrozen()
  IProtoSerializer BuildSerializer()
  WireType GetIntWireType(DataFormat format, int width)
  WireType GetDateTimeWireType(DataFormat format)
  IProtoSerializer TryGetCoreSerializer(RuntimeTypeModel model, DataFormat dataFormat, Type type, WireType& defaultWireType, bool asReference, bool dynamicType, bool overwriteList, bool allowComplexTypes)
  void SetName(string name)
  string get_Name()
  bool HasFlag(byte flag)
  void SetFlag(byte flag, bool value, bool throwIfFrozen)
  bool get_SupportNull()
  void set_SupportNull(bool value)
  string GetSchemaTypeName(bool applyNetObjectProxy, Boolean& requiresBclImport)
--------------------------------------------------
Класс: ProtoBuf.NetObjectCache
Наследуется от: object
Поля:
  int Root
  MutableList underlyingList
  object rootObject
  int trapStartIndex
  Dictionary`2<string, int> stringKeys
  Dictionary`2<object, int> objectKeys
Свойства:
  MutableList List
Методы:
  MutableList get_List()
  object GetKeyedObject(int key)
  void SetKeyedObject(int key, object value)
  int AddObjectKey(object value, Boolean& existing)
  void RegisterTrappedObject(object value)
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.PrefixStyle
Наследуется от: Enum
Поля:
  int value__
  PrefixStyle None
  PrefixStyle Base128
  PrefixStyle Fixed32
  PrefixStyle Fixed32BigEndian
Свойства:
Методы:
--------------------------------------------------
Класс: ProtoBuf.ProtoContractAttribute
Наследуется от: Attribute
Поля:
  byte OPTIONS_InferTagFromName
  byte OPTIONS_InferTagFromNameHasValue
  byte OPTIONS_UseProtoMembersOnly
  byte OPTIONS_SkipConstructor
  byte OPTIONS_IgnoreListHandling
  byte OPTIONS_AsReferenceDefault
  byte OPTIONS_EnumPassthru
  byte OPTIONS_EnumPassthruHasValue
  string name
  int implicitFirstTag
  ImplicitFields implicitFields
  int dataMemberOffset
  byte flags
Свойства:
  string Name
  int ImplicitFirstTag
  bool UseProtoMembersOnly
  bool IgnoreListHandling
  ImplicitFields ImplicitFields
  bool InferTagFromName
  bool InferTagFromNameHasValue
  int DataMemberOffset
  bool SkipConstructor
  bool AsReferenceDefault
  bool EnumPassthru
  bool EnumPassthruHasValue
Методы:
  string get_Name()
  void set_Name(string value)
  int get_ImplicitFirstTag()
  void set_ImplicitFirstTag(int value)
  bool get_UseProtoMembersOnly()
  void set_UseProtoMembersOnly(bool value)
  bool get_IgnoreListHandling()
  void set_IgnoreListHandling(bool value)
  ImplicitFields get_ImplicitFields()
  void set_ImplicitFields(ImplicitFields value)
  bool get_InferTagFromName()
  void set_InferTagFromName(bool value)
  bool get_InferTagFromNameHasValue()
  int get_DataMemberOffset()
  void set_DataMemberOffset(int value)
  bool get_SkipConstructor()
  void set_SkipConstructor(bool value)
  bool get_AsReferenceDefault()
  void set_AsReferenceDefault(bool value)
  bool HasFlag(byte flag)
  void SetFlag(byte flag, bool value)
  bool get_EnumPassthru()
  void set_EnumPassthru(bool value)
  bool get_EnumPassthruHasValue()
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoEnumAttribute
Наследуется от: Attribute
Поля:
  bool hasValue
  int enumValue
  string name
Свойства:
  int Value
  string Name
Методы:
  int get_Value()
  void set_Value(int value)
  bool HasValue()
  string get_Name()
  void set_Name(string value)
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: ProtoBuf.ProtoIgnoreAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoPartialIgnoreAttribute
Наследуется от: ProtoIgnoreAttribute
Поля:
  string memberName
Свойства:
  string MemberName
Методы:
  void .ctor(string memberName)
  string get_MemberName()
--------------------------------------------------
Класс: ProtoBuf.ProtoIncludeAttribute
Наследуется от: Attribute
Поля:
  int tag
  string knownTypeName
  DataFormat dataFormat
Свойства:
  int Tag
  string KnownTypeName
  Type KnownType
  DataFormat DataFormat
Методы:
  void .ctor(int tag, Type knownType)
  void .ctor(int tag, string knownTypeName)
  int get_Tag()
  string get_KnownTypeName()
  Type get_KnownType()
  DataFormat get_DataFormat()
  void set_DataFormat(DataFormat value)
--------------------------------------------------
Класс: ProtoBuf.ProtoMemberAttribute
Наследуется от: Attribute
Поля:
  MemberInfo Member
  bool TagIsPinned
  string name
  DataFormat dataFormat
  int tag
  MemberSerializationOptions options
Свойства:
  string Name
  DataFormat DataFormat
  int Tag
  bool IsRequired
  bool IsPacked
  bool OverwriteList
  bool AsReference
  bool AsReferenceHasValue
  bool DynamicType
  MemberSerializationOptions Options
Методы:
  int CompareTo(object other)
  int CompareTo(ProtoMemberAttribute other)
  void .ctor(int tag)
  void .ctor(int tag, bool forced)
  string get_Name()
  void set_Name(string value)
  DataFormat get_DataFormat()
  void set_DataFormat(DataFormat value)
  int get_Tag()
  void Rebase(int tag)
  bool get_IsRequired()
  void set_IsRequired(bool value)
  bool get_IsPacked()
  void set_IsPacked(bool value)
  bool get_OverwriteList()
  void set_OverwriteList(bool value)
  bool get_AsReference()
  void set_AsReference(bool value)
  bool get_AsReferenceHasValue()
  void set_AsReferenceHasValue(bool value)
  bool get_DynamicType()
  void set_DynamicType(bool value)
  MemberSerializationOptions get_Options()
  void set_Options(MemberSerializationOptions value)
--------------------------------------------------
Класс: ProtoBuf.MemberSerializationOptions
Наследуется от: Enum
Поля:
  int value__
  MemberSerializationOptions None
  MemberSerializationOptions Packed
  MemberSerializationOptions Required
  MemberSerializationOptions AsReference
  MemberSerializationOptions DynamicType
  MemberSerializationOptions OverwriteList
  MemberSerializationOptions AsReferenceHasValue
Свойства:
Методы:
--------------------------------------------------
Класс: ProtoBuf.ProtoPartialMemberAttribute
Наследуется от: ProtoMemberAttribute
Поля:
  string memberName
Свойства:
  string MemberName
Методы:
  void .ctor(int tag, string memberName)
  string get_MemberName()
--------------------------------------------------
Класс: ProtoBuf.ProtoReader
Наследуется от: object
Поля:
  int TO_EOF
  long Int64Msb
  int Int32Msb
  Stream source
  Byte[] ioBuffer
  TypeModel model
  int fieldNumber
  int depth
  int dataRemaining
  int ioIndex
  int position
  int available
  int blockEnd
  WireType wireType
  bool isFixedLength
  bool internStrings
  NetObjectCache netCache
  UInt32 trapCount
  SerializationContext context
  Dictionary`2<string, string> stringInterner
  UTF8Encoding encoding
  Byte[] EmptyBlob
  ProtoReader lastReader
Свойства:
  int FieldNumber
  WireType WireType
  bool InternStrings
  SerializationContext Context
  int Position
  TypeModel Model
  NetObjectCache NetCache
Методы:
  int get_FieldNumber()
  WireType get_WireType()
  void .ctor(Stream source, TypeModel model, SerializationContext context)
  bool get_InternStrings()
  void set_InternStrings(bool value)
  void .ctor(Stream source, TypeModel model, SerializationContext context, int length)
  void Init(ProtoReader reader, Stream source, TypeModel model, SerializationContext context, int length)
  SerializationContext get_Context()
  void Dispose()
  int TryReadUInt32VariantWithoutMoving(bool trimNegative, UInt32& value)
  UInt32 ReadUInt32Variant(bool trimNegative)
  bool TryReadUInt32Variant(UInt32& value)
  UInt32 ReadUInt32()
  int get_Position()
  void Ensure(int count, bool strict)
  short ReadInt16()
  ushort ReadUInt16()
  byte ReadByte()
  sbyte ReadSByte()
  int ReadInt32()
  int Zag(UInt32 ziggedValue)
  long Zag(ulong ziggedValue)
  long ReadInt64()
  int TryReadUInt64VariantWithoutMoving(UInt64& value)
  ulong ReadUInt64Variant()
  string Intern(string value)
  string ReadString()
  void ThrowEnumException(Type type, int value)
  Exception CreateWireTypeException()
  Exception CreateException(string message)
  double ReadDouble()
  object ReadObject(object value, int key, ProtoReader reader)
  object ReadTypedObject(object value, int key, ProtoReader reader, Type type)
  void EndSubItem(SubItemToken token, ProtoReader reader)
  SubItemToken StartSubItem(ProtoReader reader)
  int ReadFieldHeader()
  bool TryReadFieldHeader(int field)
  TypeModel get_Model()
  void Hint(WireType wireType)
  void Assert(WireType wireType)
  void SkipField()
  ulong ReadUInt64()
  float ReadSingle()
  bool ReadBoolean()
  Byte[] AppendBytes(Byte[] value, ProtoReader reader)
  int ReadByteOrThrow(Stream source)
  int ReadLengthPrefix(Stream source, bool expectHeader, PrefixStyle style, Int32& fieldNumber)
  int DirectReadLittleEndianInt32(Stream source)
  int DirectReadBigEndianInt32(Stream source)
  int DirectReadVarintInt32(Stream source)
  void DirectReadBytes(Stream source, Byte[] buffer, int offset, int count)
  Byte[] DirectReadBytes(Stream source, int count)
  string DirectReadString(Stream source, int length)
  int ReadLengthPrefix(Stream source, bool expectHeader, PrefixStyle style, Int32& fieldNumber, Int32& bytesRead)
  int TryReadUInt32Variant(Stream source, UInt32& value)
  void Seek(Stream source, int count, Byte[] buffer)
  Exception AddErrorData(Exception exception, ProtoReader source)
  Exception EoF(ProtoReader source)
  void AppendExtensionData(IExtensible instance)
  void AppendExtensionField(ProtoWriter writer)
  bool HasSubValue(WireType wireType, ProtoReader source)
  int GetTypeKey(Type& type)
  NetObjectCache get_NetCache()
  Type DeserializeType(string value)
  void SetRootObject(object value)
  void NoteObject(object value, ProtoReader reader)
  Type ReadType()
  void TrapNextObject(int newObjectKey)
  void CheckFullyConsumed()
  object Merge(ProtoReader parent, object from, object to)
  ProtoReader Create(Stream source, TypeModel model, SerializationContext context, int len)
  ProtoReader GetRecycled()
  void Recycle(ProtoReader reader)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.ProtoWriter
Наследуется от: object
Поля:
  int RecursionCheckDepth
  Stream dest
  TypeModel model
  NetObjectCache netCache
  int fieldNumber
  int flushLock
  WireType wireType
  int depth
  MutableList recursionStack
  SerializationContext context
  Byte[] ioBuffer
  int ioIndex
  int position
  UTF8Encoding encoding
  int packedFieldNumber
Свойства:
  NetObjectCache NetCache
  WireType WireType
  SerializationContext Context
  TypeModel Model
Методы:
  void WriteObject(object value, int key, ProtoWriter writer)
  void WriteRecursionSafeObject(object value, int key, ProtoWriter writer)
  void WriteObject(object value, int key, ProtoWriter writer, PrefixStyle style, int fieldNumber)
  int GetTypeKey(Type& type)
  NetObjectCache get_NetCache()
  WireType get_WireType()
  void WriteFieldHeader(int fieldNumber, WireType wireType, ProtoWriter writer)
  void WriteHeaderCore(int fieldNumber, WireType wireType, ProtoWriter writer)
  void WriteBytes(Byte[] data, ProtoWriter writer)
  void WriteBytes(Byte[] data, int offset, int length, ProtoWriter writer)
  void CopyRawFromStream(Stream source, ProtoWriter writer)
  void IncrementedAndReset(int length, ProtoWriter writer)
  SubItemToken StartSubItem(object instance, ProtoWriter writer)
  void CheckRecursionStackAndPush(object instance)
  void PopRecursionStack()
  SubItemToken StartSubItem(object instance, ProtoWriter writer, bool allowFixed)
  void EndSubItem(SubItemToken token, ProtoWriter writer)
  void EndSubItem(SubItemToken token, ProtoWriter writer, PrefixStyle style)
  void .ctor(Stream dest, TypeModel model, SerializationContext context)
  SerializationContext get_Context()
  void System.IDisposable.Dispose()
  void Dispose()
  int GetPosition(ProtoWriter writer)
  void DemandSpace(int required, ProtoWriter writer)
  void Close()
  void CheckDepthFlushlock()
  TypeModel get_Model()
  void Flush(ProtoWriter writer)
  void WriteUInt32Variant(UInt32 value, ProtoWriter writer)
  UInt32 Zig(int value)
  ulong Zig(long value)
  void WriteUInt64Variant(ulong value, ProtoWriter writer)
  void WriteString(string value, ProtoWriter writer)
  void WriteUInt64(ulong value, ProtoWriter writer)
  void WriteInt64(long value, ProtoWriter writer)
  void WriteUInt32(UInt32 value, ProtoWriter writer)
  void WriteInt16(short value, ProtoWriter writer)
  void WriteUInt16(ushort value, ProtoWriter writer)
  void WriteByte(byte value, ProtoWriter writer)
  void WriteSByte(sbyte value, ProtoWriter writer)
  void WriteInt32ToBuffer(int value, Byte[] buffer, int index)
  void WriteInt32(int value, ProtoWriter writer)
  void WriteDouble(double value, ProtoWriter writer)
  void WriteSingle(float value, ProtoWriter writer)
  void ThrowEnumException(ProtoWriter writer, object enumValue)
  Exception CreateException(ProtoWriter writer)
  void WriteBoolean(bool value, ProtoWriter writer)
  void AppendExtensionData(IExtensible instance, ProtoWriter writer)
  void SetPackedField(int fieldNumber, ProtoWriter writer)
  string SerializeType(Type type)
  void SetRootObject(object value)
  void WriteType(Type value, ProtoWriter writer)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.SerializationContext
Наследуется от: object
Поля:
  bool frozen
  object context
  SerializationContext default
  StreamingContextStates state
Свойства:
  object Context
  SerializationContext Default
  StreamingContextStates State
Методы:
  void Freeze()
  void ThrowIfFrozen()
  object get_Context()
  void set_Context(object value)
  void .cctor()
  SerializationContext get_Default()
  StreamingContextStates get_State()
  void set_State(StreamingContextStates value)
  StreamingContext op_Implicit(SerializationContext ctx)
  SerializationContext op_Implicit(StreamingContext ctx)
  void .ctor()
--------------------------------------------------
Класс: ProtoBuf.Serializer
Наследуется от: object
Поля:
  string ProtoBinaryField
  int ListItemTag
Свойства:
Методы:
  string GetProto()
  T DeepClone(T instance)
  T Merge(Stream source, T instance)
  T Deserialize(Stream source)
  void Serialize(Stream destination, T instance)
  TTo ChangeType(TFrom instance)
  void Serialize(SerializationInfo info, T instance)
  void Serialize(SerializationInfo info, StreamingContext context, T instance)
  void Serialize(XmlWriter writer, T instance)
  void Merge(XmlReader reader, T instance)
  void Merge(SerializationInfo info, T instance)
  void Merge(SerializationInfo info, StreamingContext context, T instance)
  void PrepareSerializer()
  IFormatter CreateFormatter()
  IEnumerable`1<T> DeserializeItems(Stream source, PrefixStyle style, int fieldNumber)
  T DeserializeWithLengthPrefix(Stream source, PrefixStyle style)
  T DeserializeWithLengthPrefix(Stream source, PrefixStyle style, int fieldNumber)
  T MergeWithLengthPrefix(Stream source, T instance, PrefixStyle style)
  void SerializeWithLengthPrefix(Stream destination, T instance, PrefixStyle style)
  void SerializeWithLengthPrefix(Stream destination, T instance, PrefixStyle style, int fieldNumber)
  bool TryReadLengthPrefix(Stream source, PrefixStyle style, Int32& length)
  bool TryReadLengthPrefix(Byte[] buffer, int index, int count, PrefixStyle style, Int32& length)
  void FlushPool()
--------------------------------------------------
Класс: ProtoBuf.Serializers.IProtoSerializer
Поля:
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
Методы:
  Type get_ExpectedType()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitRead(CompilerContext ctx, Local entity)
--------------------------------------------------
Класс: ProtoBuf.Serializers.BlobSerializer
Наследуется от: object
Поля:
  Type expectedType
  bool overwriteList
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  Type get_ExpectedType()
  void .ctor(TypeModel model, bool overwriteList)
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.UInt16Serializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.CharSerializer
Наследуется от: UInt16Serializer
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.IProtoTypeSerializer
Поля:
Свойства:
Методы:
  bool HasCallbacks(CallbackType callbackType)
  bool CanCreateInstance()
  object CreateInstance(ProtoReader source)
  void Callback(object value, CallbackType callbackType, SerializationContext context)
  void EmitCallback(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  void EmitCreateInstance(CompilerContext ctx)
--------------------------------------------------
Класс: ProtoBuf.Serializers.CompiledSerializer
Наследуется от: object
Поля:
  IProtoTypeSerializer head
  ProtoSerializer serializer
  ProtoDeserializer deserializer
Свойства:
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
  Type ProtoBuf.Serializers.IProtoSerializer.ExpectedType
Методы:
  bool ProtoBuf.Serializers.IProtoTypeSerializer.HasCallbacks(CallbackType callbackType)
  bool ProtoBuf.Serializers.IProtoTypeSerializer.CanCreateInstance()
  object ProtoBuf.Serializers.IProtoTypeSerializer.CreateInstance(ProtoReader source)
  void Callback(object value, CallbackType callbackType, SerializationContext context)
  CompiledSerializer Wrap(IProtoTypeSerializer head, TypeModel model)
  void .ctor(IProtoTypeSerializer head, TypeModel model)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  Type ProtoBuf.Serializers.IProtoSerializer.get_ExpectedType()
  void ProtoBuf.Serializers.IProtoSerializer.Write(object value, ProtoWriter dest)
  object ProtoBuf.Serializers.IProtoSerializer.Read(object value, ProtoReader source)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCallback(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCreateInstance(CompilerContext ctx)
--------------------------------------------------
Класс: ProtoBuf.Serializers.BooleanSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.ProtoDecoratorBase
Наследуется от: object
Поля:
  IProtoSerializer Tail
Свойства:
  Type ExpectedType
  bool ReturnsValue
  bool RequiresOldValue
Методы:
  Type get_ExpectedType()
  void .ctor(IProtoSerializer tail)
  bool get_ReturnsValue()
  bool get_RequiresOldValue()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.ArrayDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  byte OPTIONS_WritePacked
  byte OPTIONS_OverwriteList
  byte OPTIONS_SupportNull
  int fieldNumber
  byte options
  WireType packedWireType
  Type arrayType
  Type itemType
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
  bool AppendToCollection
  bool SupportNull
Методы:
  void .ctor(TypeModel model, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, Type arrayType, bool overwriteList, bool supportNull)
  Type get_ExpectedType()
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitWriteArrayLoop(CompilerContext ctx, Local i, Local arr)
  bool get_AppendToCollection()
  bool get_SupportNull()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.ByteSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  Type get_ExpectedType()
  void .ctor(TypeModel model)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.ListDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  byte OPTIONS_IsList
  byte OPTIONS_SuppressIList
  byte OPTIONS_WritePacked
  byte OPTIONS_ReturnList
  byte OPTIONS_OverwriteList
  byte OPTIONS_SupportNull
  byte options
  Type declaredType
  Type concreteType
  MethodInfo add
  int fieldNumber
  WireType packedWireType
  Type ienumeratorType
  Type ienumerableType
Свойства:
  bool IsList
  bool SuppressIList
  bool WritePacked
  bool SupportNull
  bool ReturnList
  bool RequireAdd
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
  bool AppendToCollection
Методы:
  bool CanPack(WireType wireType)
  bool get_IsList()
  bool get_SuppressIList()
  bool get_WritePacked()
  bool get_SupportNull()
  bool get_ReturnList()
  ListDecorator Create(TypeModel model, Type declaredType, Type concreteType, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, bool returnList, bool overwriteList, bool supportNull)
  void .ctor(TypeModel model, Type declaredType, Type concreteType, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, bool returnList, bool overwriteList, bool supportNull)
  bool get_RequireAdd()
  Type get_ExpectedType()
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  bool get_AppendToCollection()
  void EmitRead(CompilerContext ctx, Local valueFrom)
  void EmitReadList(CompilerContext ctx, Local list, IProtoSerializer tail, MethodInfo add, WireType packedWireType, bool castListForAdd)
  void EmitReadAndAddItem(CompilerContext ctx, Local list, IProtoSerializer tail, MethodInfo add, bool castListForAdd)
  MethodInfo GetEnumeratorInfo(TypeModel model, MethodInfo& moveNext, MethodInfo& current)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.ImmutableCollectionDecorator
Наследуется от: ListDecorator
Поля:
  MethodInfo builderFactory
  MethodInfo add
  MethodInfo addRange
  MethodInfo finish
Свойства:
  bool RequireAdd
Методы:
  bool get_RequireAdd()
  Type ResolveIReadOnlyCollection(Type declaredType, Type t)
  bool IdentifyImmutable(TypeModel model, Type declaredType, MethodInfo& builderFactory, MethodInfo& add, MethodInfo& addRange, MethodInfo& finish)
  void .ctor(TypeModel model, Type declaredType, Type concreteType, IProtoSerializer tail, int fieldNumber, bool writePacked, WireType packedWireType, bool returnList, bool overwriteList, bool supportNull, MethodInfo builderFactory, MethodInfo add, MethodInfo addRange, MethodInfo finish)
  object Read(object value, ProtoReader source)
  void EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.NullDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  int Tag
  Type expectedType
Свойства:
  Type ExpectedType
  bool ReturnsValue
  bool RequiresOldValue
Методы:
  void .ctor(TypeModel model, IProtoSerializer tail)
  Type get_ExpectedType()
  bool get_ReturnsValue()
  bool get_RequiresOldValue()
  void EmitRead(CompilerContext ctx, Local valueFrom)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
--------------------------------------------------
Класс: ProtoBuf.Serializers.ParseableSerializer
Наследуется от: object
Поля:
  MethodInfo parse
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  ParseableSerializer TryCreate(Type type, TypeModel model)
  MethodInfo GetCustomToString(Type type)
  void .ctor(MethodInfo parse)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.NetObjectSerializer
Наследуется от: object
Поля:
  int key
  Type type
  NetObjectOptions options
Свойства:
  Type ExpectedType
  bool ReturnsValue
  bool RequiresOldValue
Методы:
  void .ctor(TypeModel model, Type type, int key, NetObjectOptions options)
  Type get_ExpectedType()
  bool get_ReturnsValue()
  bool get_RequiresOldValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void EmitRead(CompilerContext ctx, Local valueFrom)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.SByteSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.MemberSpecifiedDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  MethodInfo getSpecified
  MethodInfo setSpecified
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
Методы:
  Type get_ExpectedType()
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  void .ctor(MethodInfo getSpecified, MethodInfo setSpecified, IProtoSerializer tail)
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.SystemTypeSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  void ProtoBuf.Serializers.IProtoSerializer.Write(object value, ProtoWriter dest)
  object ProtoBuf.Serializers.IProtoSerializer.Read(object value, ProtoReader source)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.TupleSerializer
Наследуется от: object
Поля:
  MemberInfo[] members
  ConstructorInfo ctor
  IProtoSerializer[] tails
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
Методы:
  void .ctor(RuntimeTypeModel model, ConstructorInfo ctor, MemberInfo[] members)
  bool HasCallbacks(CallbackType callbackType)
  void EmitCallback(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  Type get_ExpectedType()
  void ProtoBuf.Serializers.IProtoTypeSerializer.Callback(object value, CallbackType callbackType, SerializationContext context)
  object ProtoBuf.Serializers.IProtoTypeSerializer.CreateInstance(ProtoReader source)
  object GetValue(object obj, int index)
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  Type GetMemberType(int index)
  bool ProtoBuf.Serializers.IProtoTypeSerializer.CanCreateInstance()
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCreateInstance(CompilerContext ctx)
  void EmitRead(CompilerContext ctx, Local incoming)
--------------------------------------------------
Класс: ProtoBuf.Serializers.UriDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
Методы:
  void .ctor(TypeModel model, IProtoSerializer tail)
  Type get_ExpectedType()
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.EnumSerializer
Наследуется от: object
Поля:
  Type enumType
  EnumPair[] map
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(Type enumType, EnumPair[] map)
  ProtoTypeCode GetTypeCode()
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  int EnumToWire(object value)
  object WireToEnum(int value)
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void WriteEnumValue(CompilerContext ctx, ProtoTypeCode typeCode, object value)
  void WriteEnumValue(CompilerContext ctx, ProtoTypeCode typeCode, CodeLabel handler, CodeLabel continue, object value, Local local)
--------------------------------------------------
Класс: ProtoBuf.Serializers.DefaultValueDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  object defaultValue
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
Методы:
  Type get_ExpectedType()
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  void .ctor(TypeModel model, object defaultValue, IProtoSerializer tail)
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitBeq(CompilerContext ctx, CodeLabel label, Type type)
  void EmitBranchIfDefaultValue(CompilerContext ctx, CodeLabel label)
  void EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.GuidSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.SurrogateSerializer
Наследуется от: object
Поля:
  Type forType
  Type declaredType
  MethodInfo toTail
  MethodInfo fromTail
  IProtoTypeSerializer rootTail
Свойства:
  bool ReturnsValue
  bool RequiresOldValue
  Type ExpectedType
Методы:
  bool ProtoBuf.Serializers.IProtoTypeSerializer.HasCallbacks(CallbackType callbackType)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCallback(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCreateInstance(CompilerContext ctx)
  bool ProtoBuf.Serializers.IProtoTypeSerializer.CanCreateInstance()
  object ProtoBuf.Serializers.IProtoTypeSerializer.CreateInstance(ProtoReader source)
  void ProtoBuf.Serializers.IProtoTypeSerializer.Callback(object value, CallbackType callbackType, SerializationContext context)
  bool get_ReturnsValue()
  bool get_RequiresOldValue()
  Type get_ExpectedType()
  void .ctor(Type forType, Type declaredType, IProtoTypeSerializer rootTail)
  bool HasCast(Type type, Type from, Type to, MethodInfo& op)
  MethodInfo GetConversion(bool toTail)
  void Write(object value, ProtoWriter writer)
  object Read(object value, ProtoReader source)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.Int16Serializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.DecimalSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.TimeSpanSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.DateTimeSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void .ctor(TypeModel model)
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.UInt32Serializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.UInt64Serializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.Int64Serializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.DoubleSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.SingleSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  Type get_ExpectedType()
  void .ctor(TypeModel model)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.FieldDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  FieldInfo field
  Type forType
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
Методы:
  Type get_ExpectedType()
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  void .ctor(Type forType, FieldInfo field, IProtoSerializer tail)
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.Int32Serializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.PropertyDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  PropertyInfo property
  Type forType
  bool readOptionsWriteValue
  MethodInfo shadowSetter
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
Методы:
  Type get_ExpectedType()
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  void .ctor(TypeModel model, Type forType, PropertyInfo property, IProtoSerializer tail)
  void SanityCheck(TypeModel model, PropertyInfo property, IProtoSerializer tail, Boolean& writeValue, bool nonPublic, bool allowInternal)
  MethodInfo GetShadowSetter(TypeModel model, PropertyInfo property)
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitRead(CompilerContext ctx, Local valueFrom)
  bool CanWrite(TypeModel model, MemberInfo member)
--------------------------------------------------
Класс: ProtoBuf.Serializers.StringSerializer
Наследуется от: object
Поля:
  Type expectedType
Свойства:
  Type ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  void .ctor(TypeModel model)
  Type get_ExpectedType()
  void Write(object value, ProtoWriter dest)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  object Read(object value, ProtoReader source)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.Serializers.SubItemSerializer
Наследуется от: object
Поля:
  int key
  Type type
  ISerializerProxy proxy
  bool recursionCheck
Свойства:
  Type ProtoBuf.Serializers.IProtoSerializer.ExpectedType
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  bool ProtoBuf.Serializers.IProtoTypeSerializer.HasCallbacks(CallbackType callbackType)
  bool ProtoBuf.Serializers.IProtoTypeSerializer.CanCreateInstance()
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCallback(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCreateInstance(CompilerContext ctx)
  void ProtoBuf.Serializers.IProtoTypeSerializer.Callback(object value, CallbackType callbackType, SerializationContext context)
  object ProtoBuf.Serializers.IProtoTypeSerializer.CreateInstance(ProtoReader source)
  void .ctor(Type type, int key, ISerializerProxy proxy, bool recursionCheck)
  Type ProtoBuf.Serializers.IProtoSerializer.get_ExpectedType()
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void ProtoBuf.Serializers.IProtoSerializer.Write(object value, ProtoWriter dest)
  object ProtoBuf.Serializers.IProtoSerializer.Read(object value, ProtoReader source)
  bool EmitDedicatedMethod(CompilerContext ctx, Local valueFrom, bool read)
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.TagDecorator
Наследуется от: ProtoDecoratorBase
Поля:
  bool strict
  int fieldNumber
  WireType wireType
Свойства:
  Type ExpectedType
  bool RequiresOldValue
  bool ReturnsValue
  bool NeedsHint
Методы:
  bool HasCallbacks(CallbackType callbackType)
  bool CanCreateInstance()
  object CreateInstance(ProtoReader source)
  void Callback(object value, CallbackType callbackType, SerializationContext context)
  void EmitCallback(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  void EmitCreateInstance(CompilerContext ctx)
  Type get_ExpectedType()
  void .ctor(int fieldNumber, WireType wireType, bool strict, IProtoSerializer tail)
  bool get_RequiresOldValue()
  bool get_ReturnsValue()
  bool get_NeedsHint()
  object Read(object value, ProtoReader source)
  void Write(object value, ProtoWriter dest)
  void EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitRead(CompilerContext ctx, Local valueFrom)
--------------------------------------------------
Класс: ProtoBuf.Serializers.TypeSerializer
Наследуется от: object
Поля:
  Type forType
  Type constructType
  IProtoSerializer[] serializers
  Int32[] fieldNumbers
  bool isRootType
  bool useConstructor
  bool isExtensible
  bool hasConstructor
  CallbackSet callbacks
  MethodInfo[] baseCtorCallbacks
  MethodInfo factory
  Type iextensible
Свойства:
  Type ExpectedType
  bool CanHaveInheritance
  bool ProtoBuf.Serializers.IProtoSerializer.RequiresOldValue
  bool ProtoBuf.Serializers.IProtoSerializer.ReturnsValue
Методы:
  bool HasCallbacks(CallbackType callbackType)
  Type get_ExpectedType()
  void .ctor(TypeModel model, Type forType, Int32[] fieldNumbers, IProtoSerializer[] serializers, MethodInfo[] baseCtorCallbacks, bool isRootType, bool useConstructor, CallbackSet callbacks, Type constructType, MethodInfo factory)
  bool get_CanHaveInheritance()
  bool ProtoBuf.Serializers.IProtoTypeSerializer.CanCreateInstance()
  object ProtoBuf.Serializers.IProtoTypeSerializer.CreateInstance(ProtoReader source)
  void Callback(object value, CallbackType callbackType, SerializationContext context)
  IProtoSerializer GetMoreSpecificSerializer(object value)
  void Write(object value, ProtoWriter dest)
  object Read(object value, ProtoReader source)
  object InvokeCallback(MethodInfo method, object obj, SerializationContext context)
  object CreateInstance(ProtoReader source, bool includeLocalCallback)
  bool ProtoBuf.Serializers.IProtoSerializer.get_RequiresOldValue()
  bool ProtoBuf.Serializers.IProtoSerializer.get_ReturnsValue()
  void ProtoBuf.Serializers.IProtoSerializer.EmitWrite(CompilerContext ctx, Local valueFrom)
  void EmitInvokeCallback(CompilerContext ctx, MethodInfo method, bool copyValue, Type constructType, Type type)
  void EmitCallbackIfNeeded(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCallback(CompilerContext ctx, Local valueFrom, CallbackType callbackType)
  void ProtoBuf.Serializers.IProtoSerializer.EmitRead(CompilerContext ctx, Local valueFrom)
  void WriteFieldHandler(CompilerContext ctx, Type expected, Local loc, CodeLabel handler, CodeLabel continue, IProtoSerializer serializer)
  void ProtoBuf.Serializers.IProtoTypeSerializer.EmitCreateInstance(CompilerContext ctx)
  void EmitCreateIfNull(CompilerContext ctx, Local storage)
  void .cctor()
--------------------------------------------------
Класс: ProtoBuf.SubItemToken
Наследуется от: ValueType
Поля:
  int value
Свойства:
Методы:
  void .ctor(int value)
--------------------------------------------------
Класс: ProtoBuf.WireType
Наследуется от: Enum
Поля:
  int value__
  WireType None
  WireType Variant
  WireType Fixed64
  WireType String
  WireType StartGroup
  WireType EndGroup
  WireType Fixed32
  WireType SignedVariant
Свойства:
Методы:
--------------------------------------------------
