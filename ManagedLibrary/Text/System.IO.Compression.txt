Сборка: System.IO.Compression.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Interop
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoCorlibVersion
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  string FxVersion
  string FxFileVersion
  string EnvironmentVersion
  string VsVersion
  string VsFileVersion
  string PublicKeyToken
  string AssemblyI18N
  string AssemblyMicrosoft_JScript
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_2_0
  string AssemblySystemCore_3_5
  string AssemblySystem_Core
  string WindowsBase_3_0
  string AssemblyWindowsBase
  string AssemblyPresentationCore_3_5
  string AssemblyPresentationCore_4_0
  string AssemblyPresentationFramework_3_5
  string AssemblySystemServiceModel_3_0
Свойства:
Методы:
--------------------------------------------------
Класс: SR
Наследуется от: object
Поля:
  string ArgumentOutOfRange_Enum
  string ArgumentOutOfRange_NeedPosNum
  string CannotReadFromDeflateStream
  string CannotWriteToDeflateStream
  string GenericInvalidData
  string InvalidArgumentOffsetCount
  string InvalidBeginCall
  string InvalidBlockLength
  string InvalidHuffmanData
  string NotSupported
  string NotSupported_UnreadableStream
  string NotSupported_UnwritableStream
  string ObjectDisposed_StreamClosed
  string UnknownBlockType
  string UnknownState
  string ZLibErrorDLLLoadError
  string ZLibErrorInconsistentStream
  string ZLibErrorIncorrectInitParameters
  string ZLibErrorNotEnoughMemory
  string ZLibErrorVersionMismatch
  string ZLibErrorUnexpected
  string ArgumentNeedNonNegative
  string CannotBeEmpty
  string CDCorrupt
  string CentralDirectoryInvalid
  string CreateInReadMode
  string CreateModeCapabilities
  string CreateModeCreateEntryWhileOpen
  string CreateModeWriteOnceAndOneEntryAtATime
  string DateTimeOutOfRange
  string DeletedEntry
  string DeleteOnlyInUpdate
  string DeleteOpenEntry
  string EntriesInCreateMode
  string EntryNameEncodingNotSupported
  string EntryNamesTooLong
  string EntryTooLarge
  string EOCDNotFound
  string FieldTooBigCompressedSize
  string FieldTooBigLocalHeaderOffset
  string FieldTooBigNumEntries
  string FieldTooBigOffsetToCD
  string FieldTooBigOffsetToZip64EOCD
  string FieldTooBigStartDiskNumber
  string FieldTooBigUncompressedSize
  string FrozenAfterWrite
  string HiddenStreamName
  string LengthAfterWrite
  string LocalFileHeaderCorrupt
  string NumEntriesWrong
  string OffsetLengthInvalid
  string ReadingNotSupported
  string ReadModeCapabilities
  string ReadOnlyArchive
  string SeekingNotSupported
  string SetLengthRequiresSeekingAndWriting
  string SplitSpanned
  string UnexpectedEndOfStream
  string UnsupportedCompression
  string UnsupportedCompressionMethod
  string UpdateModeCapabilities
  string UpdateModeOneStream
  string WritingNotSupported
  string Zip64EOCDNotWhereExpected
  string Argument_InvalidPathChars
  string Stream_FalseCanRead
  string Stream_FalseCanWrite
  string BrotliEncoder_Create
  string BrotliEncoder_Disposed
  string BrotliEncoder_Quality
  string BrotliEncoder_Window
  string BrotliEncoder_InvalidSetParameter
  string BrotliDecoder_Create
  string BrotliDecoder_Error
  string BrotliDecoder_Disposed
  string BrotliStream_Compress_UnsupportedOperation
  string BrotliStream_Compress_InvalidData
  string BrotliStream_Decompress_UnsupportedOperation
  string BrotliStream_Decompress_InvalidData
  string BrotliStream_Decompress_InvalidStream
Свойства:
Методы:
  string GetString(string name, Object[] args)
  string GetString(CultureInfo culture, string name, Object[] args)
  string GetString(string name)
  string GetString(CultureInfo culture, string name)
  string Format(string resourceFormat, Object[] args)
  string Format(string resourceFormat, object p1)
  string Format(string resourceFormat, object p1, object p2)
  string Format(CultureInfo ci, string resourceFormat, object p1, object p2)
  string Format(string resourceFormat, object p1, object p2, object p3)
  string GetResourceString(string str)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FriendAccessAllowedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.BrotliStream
Наследуется от: Stream
Поля:
  int DefaultInternalBufferSize
  Stream _stream
  Byte[] _buffer
  bool _leaveOpen
  CompressionMode _mode
  int _activeAsyncOperation
  BrotliDecoder _decoder
  int _bufferOffset
  int _bufferCount
  BrotliEncoder _encoder
Свойства:
  Stream BaseStream
  bool CanRead
  bool CanWrite
  bool CanSeek
  long Length
  long Position
  bool AsyncOperationIsActive
Методы:
  void .ctor(Stream stream, CompressionMode mode)
  void .ctor(Stream stream, CompressionMode mode, bool leaveOpen)
  void EnsureNotDisposed()
  void Dispose(bool disposing)
  void ValidateParameters(Byte[] array, int offset, int count)
  Stream get_BaseStream()
  bool get_CanRead()
  bool get_CanWrite()
  bool get_CanSeek()
  long Seek(long offset, SeekOrigin origin)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void SetLength(long value)
  bool get_AsyncOperationIsActive()
  void EnsureNoActiveAsyncOperation()
  void AsyncOperationStarting()
  void AsyncOperationCompleting()
  void ThrowInvalidBeginCall()
  int Read(Byte[] buffer, int offset, int count)
  int Read(Span`1<byte> buffer)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  int EndRead(IAsyncResult asyncResult)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  ValueTask`1<int> FinishReadAsyncMemory(Memory`1<byte> buffer, CancellationToken cancellationToken)
  void .ctor(Stream stream, CompressionLevel compressionLevel)
  void .ctor(Stream stream, CompressionLevel compressionLevel, bool leaveOpen)
  void Write(Byte[] buffer, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  void WriteCore(ReadOnlySpan`1<byte> buffer, bool isFinalBlock)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  void EndWrite(IAsyncResult asyncResult)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  Task WriteAsyncMemoryCore(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  Task FlushAsyncCore(CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.IO.Compression.BrotliUtils
Наследуется от: object
Поля:
  int WindowBits_Min
  int WindowBits_Default
  int WindowBits_Max
  int Quality_Min
  int Quality_Default
  int Quality_Max
  int MaxInputSize
Свойства:
Методы:
  int GetQualityFromCompressionLevel(CompressionLevel level)
--------------------------------------------------
Класс: System.IO.Compression.BrotliDecoder
Наследуется от: ValueType
Поля:
  SafeBrotliDecoderHandle _state
  bool _disposed
Свойства:
Методы:
  void InitializeDecoder()
  void EnsureInitialized()
  void Dispose()
  void EnsureNotDisposed()
  OperationStatus Decompress(ReadOnlySpan`1<byte> source, Span`1<byte> destination, Int32& bytesConsumed, Int32& bytesWritten)
  bool TryDecompress(ReadOnlySpan`1<byte> source, Span`1<byte> destination, Int32& bytesWritten)
--------------------------------------------------
Класс: System.IO.Compression.BrotliEncoder
Наследуется от: ValueType
Поля:
  SafeBrotliEncoderHandle _state
  bool _disposed
Свойства:
Методы:
  void .ctor(int quality, int window)
  void InitializeEncoder()
  void EnsureInitialized()
  void Dispose()
  void EnsureNotDisposed()
  void SetQuality(int quality)
  void SetWindow(int window)
  int GetMaxCompressedLength(int length)
  OperationStatus Flush(Memory`1<byte> destination, Int32& bytesWritten)
  OperationStatus Flush(Span`1<byte> destination, Int32& bytesWritten)
  OperationStatus Compress(ReadOnlyMemory`1<byte> source, Memory`1<byte> destination, Int32& bytesConsumed, Int32& bytesWritten, bool isFinalBlock)
  OperationStatus Compress(ReadOnlySpan`1<byte> source, Span`1<byte> destination, Int32& bytesConsumed, Int32& bytesWritten, bool isFinalBlock)
  OperationStatus Compress(ReadOnlySpan`1<byte> source, Span`1<byte> destination, Int32& bytesConsumed, Int32& bytesWritten, BrotliEncoderOperation operation)
  bool TryCompress(ReadOnlySpan`1<byte> source, Span`1<byte> destination, Int32& bytesWritten)
  bool TryCompress(ReadOnlySpan`1<byte> source, Span`1<byte> destination, Int32& bytesWritten, int quality, int window)
--------------------------------------------------
Класс: System.IO.Compression.BrotliEncoderOperation
Наследуется от: Enum
Поля:
  int value__
  BrotliEncoderOperation Process
  BrotliEncoderOperation Flush
  BrotliEncoderOperation Finish
  BrotliEncoderOperation EmitMetadata
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.BrotliEncoderParameter
Наследуется от: Enum
Поля:
  int value__
  BrotliEncoderParameter Mode
  BrotliEncoderParameter Quality
  BrotliEncoderParameter LGWin
  BrotliEncoderParameter LGBlock
  BrotliEncoderParameter LCModeling
  BrotliEncoderParameter SizeHint
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.BlockType
Наследуется от: Enum
Поля:
  int value__
  BlockType Uncompressed
  BlockType Static
  BlockType Dynamic
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.CopyEncoder
Наследуется от: object
Поля:
  int PaddingSize
  int MaxUncompressedBlockSize
Свойства:
Методы:
  void GetBlock(DeflateInput input, OutputBuffer output, bool isFinal)
  void WriteLenNLen(ushort len, OutputBuffer output)
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.DeflateInput
Наследуется от: object
Поля:
  Byte[] <Buffer>k__BackingField
  int <Count>k__BackingField
  int <StartIndex>k__BackingField
Свойства:
  Byte[] Buffer
  int Count
  int StartIndex
Методы:
  Byte[] get_Buffer()
  void set_Buffer(Byte[] value)
  int get_Count()
  void set_Count(int value)
  int get_StartIndex()
  void set_StartIndex(int value)
  void ConsumeBytes(int n)
  InputState DumpState()
  void RestoreState(InputState state)
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.DeflateManagedStream
Наследуется от: Stream
Поля:
  int DefaultBufferSize
  Stream _stream
  CompressionMode _mode
  bool _leaveOpen
  InflaterManaged _inflater
  DeflaterManaged _deflater
  Byte[] _buffer
  int _asyncOperations
  IFileFormatWriter _formatWriter
  bool _wroteHeader
  bool _wroteBytes
Свойства:
  bool CanRead
  bool CanWrite
  bool CanSeek
  long Length
  long Position
Методы:
  void .ctor(Stream stream, CompressionMethodValues method)
  void InitializeInflater(Stream stream, bool leaveOpen, IFileFormatReader reader, CompressionMethodValues method)
  void SetFileFormatWriter(IFileFormatWriter writer)
  bool get_CanRead()
  bool get_CanWrite()
  bool get_CanSeek()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int Read(Byte[] array, int offset, int count)
  void ValidateParameters(Byte[] array, int offset, int count)
  void EnsureNotDisposed()
  void ThrowStreamClosedException()
  void EnsureDecompressionMode()
  void ThrowCannotReadFromDeflateManagedStreamException()
  void EnsureCompressionMode()
  void ThrowCannotWriteToDeflateManagedStreamException()
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  int EndRead(IAsyncResult asyncResult)
  Task`1<int> ReadAsync(Byte[] array, int offset, int count, CancellationToken cancellationToken)
  Task`1<int> ReadAsyncCore(Task`1<int> readTask, Byte[] array, int offset, int count, CancellationToken cancellationToken)
  void Write(Byte[] array, int offset, int count)
  void WriteDeflaterOutput()
  void DoMaintenance(Byte[] array, int offset, int count)
  void PurgeBuffers(bool disposing)
  void Dispose(bool disposing)
  Task WriteAsync(Byte[] array, int offset, int count, CancellationToken cancellationToken)
  Task WriteAsyncCore(Byte[] array, int offset, int count, CancellationToken cancellationToken)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  void EndWrite(IAsyncResult asyncResult)
  Task <>n__0(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.IO.Compression.DeflaterManaged
Наследуется от: object
Поля:
  int MinBlockSize
  int MaxHeaderFooterGoo
  int CleanCopySize
  double BadCompressionThreshold
  FastEncoder _deflateEncoder
  CopyEncoder _copyEncoder
  DeflateInput _input
  OutputBuffer _output
  DeflaterState _processingState
  DeflateInput _inputFromHistory
Свойства:
Методы:
  void .ctor()
  bool NeedsInput()
  void SetInput(Byte[] inputBuffer, int startIndex, int count)
  int GetDeflateOutput(Byte[] outputBuffer)
  bool Finish(Byte[] outputBuffer, Int32& bytesRead)
  bool UseCompressed(double ratio)
  void FlushInputWindows()
  void WriteFinal()
  void Dispose()
--------------------------------------------------
Класс: System.IO.Compression.FastEncoder
Наследуется от: object
Поля:
  FastEncoderWindow _inputWindow
  Match _currentMatch
  double _lastCompressionRatio
Свойства:
  int BytesInHistory
  DeflateInput UnprocessedInput
  double LastCompressionRatio
Методы:
  void .ctor()
  int get_BytesInHistory()
  DeflateInput get_UnprocessedInput()
  void FlushInput()
  double get_LastCompressionRatio()
  void GetBlock(DeflateInput input, OutputBuffer output, int maxBytesToCopy)
  void GetCompressedData(DeflateInput input, OutputBuffer output)
  void GetBlockHeader(OutputBuffer output)
  void GetBlockFooter(OutputBuffer output)
  void GetCompressedOutput(DeflateInput input, OutputBuffer output, int maxBytesToCopy)
  void GetCompressedOutput(OutputBuffer output)
  bool InputAvailable(DeflateInput input)
  bool SafeToWriteTo(OutputBuffer output)
  void WriteEndOfBlock(OutputBuffer output)
  void WriteMatch(int matchLen, int matchPos, OutputBuffer output)
  void WriteChar(byte b, OutputBuffer output)
  void WriteDeflatePreamble(OutputBuffer output)
--------------------------------------------------
Класс: System.IO.Compression.FastEncoderStatics
Наследуется от: object
Поля:
  Byte[] FastEncoderTreeStructureData
  Byte[] BFinalFastEncoderTreeStructureData
  UInt32[] FastEncoderLiteralCodeInfo
  UInt32[] FastEncoderDistanceCodeInfo
  UInt32[] BitMask
  Byte[] ExtraLengthBits
  Byte[] ExtraDistanceBits
  int NumChars
  int NumLengthBaseCodes
  int NumDistBaseCodes
  UInt32 FastEncoderPostTreeBitBuf
  int FastEncoderPostTreeBitCount
  UInt32 NoCompressionHeader
  int NoCompressionHeaderBitCount
  UInt32 BFinalNoCompressionHeader
  int BFinalNoCompressionHeaderBitCount
  int MaxCodeLen
  Byte[] s_distLookup
Свойства:
Методы:
  Byte[] CreateDistanceLookup()
  int GetSlot(int pos)
  UInt32 BitReverse(UInt32 code, int length)
  void .cctor()
--------------------------------------------------
Класс: System.IO.Compression.FastEncoderWindow
Наследуется от: object
Поля:
  Byte[] _window
  int _bufPos
  int _bufEnd
  int FastEncoderHashShift
  int FastEncoderHashtableSize
  int FastEncoderHashMask
  int FastEncoderWindowSize
  int FastEncoderWindowMask
  int FastEncoderMatch3DistThreshold
  int MaxMatch
  int MinMatch
  int SearchDepth
  int GoodLength
  int NiceLength
  int LazyMatchThreshold
  UInt16[] _prev
  UInt16[] _lookup
Свойства:
  int BytesAvailable
  DeflateInput UnprocessedInput
  int FreeWindowSpace
Методы:
  void .ctor()
  int get_BytesAvailable()
  DeflateInput get_UnprocessedInput()
  void FlushWindow()
  void ResetWindow()
  int get_FreeWindowSpace()
  void CopyBytes(Byte[] inputBuffer, int startIndex, int count)
  void MoveWindows()
  UInt32 HashValue(UInt32 hash, byte b)
  UInt32 InsertString(UInt32& hash)
  void InsertStrings(UInt32& hash, int matchLen)
  bool GetNextSymbolOrMatch(Match match)
  int FindMatch(int search, Int32& matchPos, int searchDepth, int niceLength)
  void DebugAssertVerifyHashes()
  void DebugAssertRecalculatedHashesAreEqual(int position1, int position2, string message)
--------------------------------------------------
Класс: System.IO.Compression.IFileFormatWriter
Поля:
Свойства:
Методы:
  Byte[] GetHeader()
  void UpdateWithBytesRead(Byte[] buffer, int offset, int bytesToCopy)
  Byte[] GetFooter()
--------------------------------------------------
Класс: System.IO.Compression.IFileFormatReader
Поля:
Свойства:
Методы:
  bool ReadHeader(InputBuffer input)
  bool ReadFooter(InputBuffer input)
  void UpdateWithBytesRead(Byte[] buffer, int offset, int bytesToCopy)
  void Validate()
--------------------------------------------------
Класс: System.IO.Compression.HuffmanTree
Наследуется от: object
Поля:
  int MaxLiteralTreeElements
  int MaxDistTreeElements
  int EndOfBlockCode
  int NumberOfCodeLengthTreeElements
  int _tableBits
  Int16[] _table
  Int16[] _left
  Int16[] _right
  Byte[] _codeLengthArray
  int _tableMask
  HuffmanTree <StaticLiteralLengthTree>k__BackingField
  HuffmanTree <StaticDistanceTree>k__BackingField
Свойства:
  HuffmanTree StaticLiteralLengthTree
  HuffmanTree StaticDistanceTree
Методы:
  HuffmanTree get_StaticLiteralLengthTree()
  HuffmanTree get_StaticDistanceTree()
  void .ctor(Byte[] codeLengths)
  Byte[] GetStaticLiteralTreeLength()
  Byte[] GetStaticDistanceTreeLength()
  UInt32[] CalculateHuffmanCode()
  void CreateTable()
  int GetNextSymbol(InputBuffer input)
  void .cctor()
--------------------------------------------------
Класс: System.IO.Compression.InflaterManaged
Наследуется от: object
Поля:
  Byte[] s_extraLengthBits
  Int32[] s_lengthBase
  Int32[] s_distanceBasePosition
  Byte[] s_codeOrder
  Byte[] s_staticDistanceTreeTable
  OutputWindow _output
  InputBuffer _input
  HuffmanTree _literalLengthTree
  HuffmanTree _distanceTree
  InflaterState _state
  bool _hasFormatReader
  int _bfinal
  BlockType _blockType
  Byte[] _blockLengthBuffer
  int _blockLength
  int _length
  int _distanceCode
  int _extraBits
  int _loopCounter
  int _literalLengthCodeCount
  int _distanceCodeCount
  int _codeLengthCodeCount
  int _codeArraySize
  int _lengthCode
  Byte[] _codeList
  Byte[] _codeLengthTreeCodeLength
  bool _deflate64
  HuffmanTree _codeLengthTree
  IFileFormatReader _formatReader
Свойства:
  int AvailableOutput
Методы:
  void .ctor(IFileFormatReader reader, bool deflate64)
  void Reset()
  void SetInput(Byte[] inputBytes, int offset, int length)
  bool Finished()
  int get_AvailableOutput()
  int Inflate(Byte[] bytes, int offset, int length)
  bool Decode()
  bool DecodeUncompressedBlock(Boolean& end_of_block)
  bool DecodeBlock(Boolean& end_of_block_code_seen)
  bool DecodeDynamicBlockHeader()
  void Dispose()
  void .cctor()
--------------------------------------------------
Класс: System.IO.Compression.InflaterState
Наследуется от: Enum
Поля:
  int value__
  InflaterState ReadingHeader
  InflaterState ReadingBFinal
  InflaterState ReadingBType
  InflaterState ReadingNumLitCodes
  InflaterState ReadingNumDistCodes
  InflaterState ReadingNumCodeLengthCodes
  InflaterState ReadingCodeLengthCodes
  InflaterState ReadingTreeCodesBefore
  InflaterState ReadingTreeCodesAfter
  InflaterState DecodeTop
  InflaterState HaveInitialLength
  InflaterState HaveFullLength
  InflaterState HaveDistCode
  InflaterState UncompressedAligning
  InflaterState UncompressedByte1
  InflaterState UncompressedByte2
  InflaterState UncompressedByte3
  InflaterState UncompressedByte4
  InflaterState DecodingUncompressed
  InflaterState StartReadingFooter
  InflaterState ReadingFooter
  InflaterState VerifyingFooter
  InflaterState Done
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.InputBuffer
Наследуется от: object
Поля:
  Byte[] _buffer
  int _start
  int _end
  UInt32 _bitBuffer
  int _bitsInBuffer
Свойства:
  int AvailableBits
  int AvailableBytes
Методы:
  int get_AvailableBits()
  int get_AvailableBytes()
  bool EnsureBitsAvailable(int count)
  UInt32 TryLoad16Bits()
  UInt32 GetBitMask(int count)
  int GetBits(int count)
  int CopyTo(Byte[] output, int offset, int length)
  bool NeedsInput()
  void SetInput(Byte[] buffer, int offset, int length)
  void SkipBits(int n)
  void SkipToByteBoundary()
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.Match
Наследуется от: object
Поля:
  MatchState <State>k__BackingField
  int <Position>k__BackingField
  int <Length>k__BackingField
  byte <Symbol>k__BackingField
Свойства:
  MatchState State
  int Position
  int Length
  byte Symbol
Методы:
  MatchState get_State()
  void set_State(MatchState value)
  int get_Position()
  void set_Position(int value)
  int get_Length()
  void set_Length(int value)
  byte get_Symbol()
  void set_Symbol(byte value)
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.MatchState
Наследуется от: Enum
Поля:
  int value__
  MatchState HasSymbol
  MatchState HasMatch
  MatchState HasSymbolAndMatch
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.OutputBuffer
Наследуется от: object
Поля:
  Byte[] _byteBuffer
  int _pos
  UInt32 _bitBuf
  int _bitCount
Свойства:
  int BytesWritten
  int FreeBytes
  int BitsInBuffer
Методы:
  void UpdateBuffer(Byte[] output)
  int get_BytesWritten()
  int get_FreeBytes()
  void WriteUInt16(ushort value)
  void WriteBits(int n, UInt32 bits)
  void FlushBits()
  void WriteBytes(Byte[] byteArray, int offset, int count)
  void WriteBytesUnaligned(Byte[] byteArray, int offset, int count)
  void WriteByteUnaligned(byte b)
  int get_BitsInBuffer()
  BufferState DumpState()
  void RestoreState(BufferState state)
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.OutputWindow
Наследуется от: object
Поля:
  int WindowSize
  int WindowMask
  Byte[] _window
  int _end
  int _bytesUsed
Свойства:
  int FreeBytes
  int AvailableBytes
Методы:
  void Write(byte b)
  void WriteLengthDistance(int length, int distance)
  int CopyFrom(InputBuffer input, int length)
  int get_FreeBytes()
  int get_AvailableBytes()
  int CopyTo(Byte[] output, int offset, int length)
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper
Наследуется от: Stream
Поля:
  Stream _stream
  long _position
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Position
  bool CanTimeout
  int ReadTimeout
  int WriteTimeout
  long Length
Методы:
  void .ctor(Stream stream)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Position()
  void set_Position(long value)
  void Write(Byte[] buffer, int offset, int count)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  void WriteByte(byte value)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  bool get_CanTimeout()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  void Close()
  void Dispose(bool disposing)
  long get_Length()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int Read(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: System.IO.Compression.ZipArchive
Наследуется от: object
Поля:
  Stream _archiveStream
  ZipArchiveEntry _archiveStreamOwner
  BinaryReader _archiveReader
  ZipArchiveMode _mode
  List`1<ZipArchiveEntry> _entries
  ReadOnlyCollection`1<ZipArchiveEntry> _entriesCollection
  Dictionary`2<string, ZipArchiveEntry> _entriesDictionary
  bool _readEntries
  bool _leaveOpen
  long _centralDirectoryStart
  bool _isDisposed
  UInt32 _numberOfThisDisk
  long _expectedNumberOfEntries
  Stream _backingStream
  Byte[] _archiveComment
  Encoding _entryNameEncoding
Свойства:
  ReadOnlyCollection`1<ZipArchiveEntry> Entries
  ZipArchiveMode Mode
  BinaryReader ArchiveReader
  Stream ArchiveStream
  UInt32 NumberOfThisDisk
  Encoding EntryNameEncoding
Методы:
  void .ctor(Stream stream)
  void .ctor(Stream stream, ZipArchiveMode mode)
  void .ctor(Stream stream, ZipArchiveMode mode, bool leaveOpen)
  void .ctor(Stream stream, ZipArchiveMode mode, bool leaveOpen, Encoding entryNameEncoding)
  ReadOnlyCollection`1<ZipArchiveEntry> get_Entries()
  ZipArchiveMode get_Mode()
  ZipArchiveEntry CreateEntry(string entryName)
  ZipArchiveEntry CreateEntry(string entryName, CompressionLevel compressionLevel)
  void Dispose(bool disposing)
  void Dispose()
  ZipArchiveEntry GetEntry(string entryName)
  BinaryReader get_ArchiveReader()
  Stream get_ArchiveStream()
  UInt32 get_NumberOfThisDisk()
  Encoding get_EntryNameEncoding()
  void set_EntryNameEncoding(Encoding value)
  ZipArchiveEntry DoCreateEntry(string entryName, Nullable`1<CompressionLevel> compressionLevel)
  void AcquireArchiveStream(ZipArchiveEntry entry)
  void AddEntry(ZipArchiveEntry entry)
  void DebugAssertIsStillArchiveStreamOwner(ZipArchiveEntry entry)
  void ReleaseArchiveStream(ZipArchiveEntry entry)
  void RemoveEntry(ZipArchiveEntry entry)
  void ThrowIfDisposed()
  void CloseStreams()
  void EnsureCentralDirectoryRead()
  void Init(Stream stream, ZipArchiveMode mode, bool leaveOpen)
  void ReadCentralDirectory()
  void ReadEndOfCentralDirectory()
  void WriteFile()
  void WriteArchiveEpilogue(long startOfCentralDirectory, long sizeOfCentralDirectory)
--------------------------------------------------
Класс: System.IO.Compression.ZipArchiveEntry
Наследуется от: object
Поля:
  ushort DefaultVersionToExtract
  int MaxSingleBufferSize
  ZipArchive _archive
  bool _originallyInArchive
  int _diskNumberStart
  ZipVersionMadeByPlatform _versionMadeByPlatform
  ZipVersionNeededValues _versionMadeBySpecification
  ZipVersionNeededValues _versionToExtract
  BitFlagValues _generalPurposeBitFlag
  CompressionMethodValues _storedCompressionMethod
  DateTimeOffset _lastModified
  long _compressedSize
  long _uncompressedSize
  long _offsetOfLocalHeader
  Nullable`1<long> _storedOffsetOfCompressedData
  UInt32 _crc32
  Byte[][] _compressedBytes
  MemoryStream _storedUncompressedData
  bool _currentlyOpenForWrite
  bool _everOpenedForWrite
  Stream _outstandingWriteStream
  UInt32 _externalFileAttr
  string _storedEntryName
  Byte[] _storedEntryNameBytes
  List`1<ZipGenericExtraField> _cdUnknownExtraFields
  List`1<ZipGenericExtraField> _lhUnknownExtraFields
  Byte[] _fileComment
  Nullable`1<CompressionLevel> _compressionLevel
  bool s_allowLargeZipArchiveEntriesInUpdateMode
  ZipVersionMadeByPlatform CurrentZipPlatform
Свойства:
  ZipArchive Archive
  UInt32 Crc32
  long CompressedLength
  int ExternalAttributes
  string FullName
  DateTimeOffset LastWriteTime
  long Length
  string Name
  bool EverOpenedForWrite
  long OffsetOfCompressedData
  MemoryStream UncompressedData
  CompressionMethodValues CompressionMethod
Методы:
  void .ctor(ZipArchive archive, ZipCentralDirectoryFileHeader cd)
  void .ctor(ZipArchive archive, string entryName, CompressionLevel compressionLevel)
  void .ctor(ZipArchive archive, string entryName)
  ZipArchive get_Archive()
  UInt32 get_Crc32()
  long get_CompressedLength()
  int get_ExternalAttributes()
  void set_ExternalAttributes(int value)
  string get_FullName()
  void set_FullName(string value)
  DateTimeOffset get_LastWriteTime()
  void set_LastWriteTime(DateTimeOffset value)
  long get_Length()
  string get_Name()
  void Delete()
  Stream Open()
  string ToString()
  bool get_EverOpenedForWrite()
  long get_OffsetOfCompressedData()
  MemoryStream get_UncompressedData()
  CompressionMethodValues get_CompressionMethod()
  void set_CompressionMethod(CompressionMethodValues value)
  string DecodeEntryName(Byte[] entryNameBytes)
  Byte[] EncodeEntryName(string entryName, Boolean& isUTF8)
  void WriteAndFinishLocalEntry()
  void WriteCentralDirectoryFileHeader()
  bool LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded()
  void ThrowIfNotOpenable(bool needToUncompress, bool needToLoadIntoMemory)
  CheckSumAndSizeWriteStream GetDataCompressor(Stream backingStream, bool leaveBackingStreamOpen, EventHandler onClose)
  Stream GetDataDecompressor(Stream compressedStreamToRead)
  Stream OpenInReadMode(bool checkOpenable)
  Stream OpenInWriteMode()
  Stream OpenInUpdateMode()
  bool IsOpenable(bool needToUncompress, bool needToLoadIntoMemory, String& message)
  bool SizesTooLarge()
  bool WriteLocalFileHeader(bool isEmptyFile)
  void WriteLocalFileHeaderAndDataIfNeeded()
  void WriteCrcAndSizesInLocalHeader(bool zip64HeaderUsed)
  void WriteDataDescriptor()
  void UnloadStreams()
  void CloseStreams()
  void VersionToExtractAtLeast(ZipVersionNeededValues value)
  void ThrowIfInvalidArchive()
  string GetFileName_Windows(string path)
  string GetFileName_Unix(string path)
  string ParseFileName(string path, ZipVersionMadeByPlatform madeByPlatform)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.IO.Compression.ZipArchiveMode
Наследуется от: Enum
Поля:
  int value__
  ZipArchiveMode Read
  ZipArchiveMode Create
  ZipArchiveMode Update
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.ZipGenericExtraField
Наследуется от: ValueType
Поля:
  int SizeOfHeader
  ushort _tag
  ushort _size
  Byte[] _data
Свойства:
  ushort Tag
  ushort Size
  Byte[] Data
Методы:
  ushort get_Tag()
  ushort get_Size()
  Byte[] get_Data()
  void WriteBlock(Stream stream)
  bool TryReadBlock(BinaryReader reader, long endExtraField, ZipGenericExtraField& field)
  List`1<ZipGenericExtraField> ParseExtraField(Stream extraFieldData)
  int TotalSize(List`1<ZipGenericExtraField> fields)
  void WriteAllBlocks(List`1<ZipGenericExtraField> fields, Stream stream)
--------------------------------------------------
Класс: System.IO.Compression.Zip64ExtraField
Наследуется от: ValueType
Поля:
  int OffsetToFirstField
  ushort TagConstant
  ushort _size
  Nullable`1<long> _uncompressedSize
  Nullable`1<long> _compressedSize
  Nullable`1<long> _localHeaderOffset
  Nullable`1<int> _startDiskNumber
Свойства:
  ushort TotalSize
  Nullable`1<long> UncompressedSize
  Nullable`1<long> CompressedSize
  Nullable`1<long> LocalHeaderOffset
  Nullable`1<int> StartDiskNumber
Методы:
  ushort get_TotalSize()
  Nullable`1<long> get_UncompressedSize()
  void set_UncompressedSize(Nullable`1<long> value)
  Nullable`1<long> get_CompressedSize()
  void set_CompressedSize(Nullable`1<long> value)
  Nullable`1<long> get_LocalHeaderOffset()
  void set_LocalHeaderOffset(Nullable`1<long> value)
  Nullable`1<int> get_StartDiskNumber()
  void UpdateSize()
  Zip64ExtraField GetJustZip64Block(Stream extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber)
  bool TryGetZip64BlockFromGenericExtraField(ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, Zip64ExtraField& zip64Block)
  Zip64ExtraField GetAndRemoveZip64Block(List`1<ZipGenericExtraField> extraFields, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber)
  void RemoveZip64Blocks(List`1<ZipGenericExtraField> extraFields)
  void WriteBlock(Stream stream)
--------------------------------------------------
Класс: System.IO.Compression.Zip64EndOfCentralDirectoryLocator
Наследуется от: ValueType
Поля:
  UInt32 SignatureConstant
  int SizeOfBlockWithoutSignature
  UInt32 NumberOfDiskWithZip64EOCD
  ulong OffsetOfZip64EOCD
  UInt32 TotalNumberOfDisks
Свойства:
Методы:
  bool TryReadBlock(BinaryReader reader, Zip64EndOfCentralDirectoryLocator& zip64EOCDLocator)
  void WriteBlock(Stream stream, long zip64EOCDRecordStart)
--------------------------------------------------
Класс: System.IO.Compression.Zip64EndOfCentralDirectoryRecord
Наследуется от: ValueType
Поля:
  UInt32 SignatureConstant
  ulong NormalSize
  ulong SizeOfThisRecord
  ushort VersionMadeBy
  ushort VersionNeededToExtract
  UInt32 NumberOfThisDisk
  UInt32 NumberOfDiskWithStartOfCD
  ulong NumberOfEntriesOnThisDisk
  ulong NumberOfEntriesTotal
  ulong SizeOfCentralDirectory
  ulong OffsetOfCentralDirectory
Свойства:
Методы:
  bool TryReadBlock(BinaryReader reader, Zip64EndOfCentralDirectoryRecord& zip64EOCDRecord)
  void WriteBlock(Stream stream, long numberOfEntries, long startOfCentralDirectory, long sizeOfCentralDirectory)
--------------------------------------------------
Класс: System.IO.Compression.ZipLocalFileHeader
Наследуется от: ValueType
Поля:
  UInt32 DataDescriptorSignature
  UInt32 SignatureConstant
  int OffsetToCrcFromHeaderStart
  int OffsetToBitFlagFromHeaderStart
  int SizeOfLocalHeader
Свойства:
Методы:
  List`1<ZipGenericExtraField> GetExtraFields(BinaryReader reader)
  bool TrySkipBlock(BinaryReader reader)
--------------------------------------------------
Класс: System.IO.Compression.ZipCentralDirectoryFileHeader
Наследуется от: ValueType
Поля:
  UInt32 SignatureConstant
  byte VersionMadeByCompatibility
  byte VersionMadeBySpecification
  ushort VersionNeededToExtract
  ushort GeneralPurposeBitFlag
  ushort CompressionMethod
  UInt32 LastModified
  UInt32 Crc32
  long CompressedSize
  long UncompressedSize
  ushort FilenameLength
  ushort ExtraFieldLength
  ushort FileCommentLength
  int DiskNumberStart
  ushort InternalFileAttributes
  UInt32 ExternalFileAttributes
  long RelativeOffsetOfLocalHeader
  Byte[] Filename
  Byte[] FileComment
  List`1<ZipGenericExtraField> ExtraFields
Свойства:
Методы:
  bool TryReadBlock(BinaryReader reader, bool saveExtraFieldsAndComments, ZipCentralDirectoryFileHeader& header)
--------------------------------------------------
Класс: System.IO.Compression.ZipEndOfCentralDirectoryBlock
Наследуется от: ValueType
Поля:
  UInt32 SignatureConstant
  int SizeOfBlockWithoutSignature
  UInt32 Signature
  ushort NumberOfThisDisk
  ushort NumberOfTheDiskWithTheStartOfTheCentralDirectory
  ushort NumberOfEntriesInTheCentralDirectoryOnThisDisk
  ushort NumberOfEntriesInTheCentralDirectory
  UInt32 SizeOfCentralDirectory
  UInt32 OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber
  Byte[] ArchiveComment
Свойства:
Методы:
  void WriteBlock(Stream stream, long numberOfEntries, long startOfCentralDirectory, long sizeOfCentralDirectory, Byte[] archiveComment)
  bool TryReadBlock(BinaryReader reader, ZipEndOfCentralDirectoryBlock& eocdBlock)
--------------------------------------------------
Класс: System.IO.Compression.WrappedStream
Наследуется от: Stream
Поля:
  Stream _baseStream
  bool _closeBaseStream
  Action`1<ZipArchiveEntry> _onClosed
  ZipArchiveEntry _zipArchiveEntry
  bool _isDisposed
Свойства:
  long Length
  long Position
  bool CanRead
  bool CanSeek
  bool CanWrite
Методы:
  void .ctor(Stream baseStream, bool closeBaseStream)
  void .ctor(Stream baseStream, bool closeBaseStream, ZipArchiveEntry entry, Action`1<ZipArchiveEntry> onClosed)
  void .ctor(Stream baseStream, ZipArchiveEntry entry, Action`1<ZipArchiveEntry> onClosed)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  void ThrowIfDisposed()
  void ThrowIfCantRead()
  void ThrowIfCantWrite()
  void ThrowIfCantSeek()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void Flush()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.IO.Compression.SubReadStream
Наследуется от: Stream
Поля:
  long _startInSuperStream
  long _positionInSuperStream
  long _endInSuperStream
  Stream _superStream
  bool _canRead
  bool _isDisposed
Свойства:
  long Length
  long Position
  bool CanRead
  bool CanSeek
  bool CanWrite
Методы:
  void .ctor(Stream superStream, long startPosition, long maxLength)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  void ThrowIfDisposed()
  void ThrowIfCantRead()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void Flush()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.IO.Compression.CheckSumAndSizeWriteStream
Наследуется от: Stream
Поля:
  Stream _baseStream
  Stream _baseBaseStream
  long _position
  UInt32 _checksum
  bool _leaveOpenOnClose
  bool _canWrite
  bool _isDisposed
  bool _everWritten
  long _initialPosition
  ZipArchiveEntry _zipArchiveEntry
  EventHandler _onClose
  Action`6<long, long, UInt32, Stream, ZipArchiveEntry, EventHandler> _saveCrcAndSizes
Свойства:
  long Length
  long Position
  bool CanRead
  bool CanSeek
  bool CanWrite
Методы:
  void .ctor(Stream baseStream, Stream baseBaseStream, bool leaveOpenOnClose, ZipArchiveEntry entry, EventHandler onClose, Action`6<long, long, UInt32, Stream, ZipArchiveEntry, EventHandler> saveCrcAndSizes)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  void ThrowIfDisposed()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void Flush()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.IO.Compression.ZipHelper
Наследуется от: object
Поля:
  UInt32 Mask32Bit
  ushort Mask16Bit
  int BackwardsSeekingBufferSize
  int ValidZipDate_YearMin
  int ValidZipDate_YearMax
  DateTime s_invalidDateIndicator
Свойства:
Методы:
  bool RequiresUnicode(string test)
  void ReadBytes(Stream stream, Byte[] buffer, int bytesToRead)
  DateTime DosTimeToDateTime(UInt32 dateTime)
  UInt32 DateTimeToDosTime(DateTime dateTime)
  bool SeekBackwardsToSignature(Stream stream, UInt32 signatureToFind)
  void AdvanceToPosition(Stream stream, long position)
  bool SeekBackwardsAndRead(Stream stream, Byte[] buffer, Int32& bufferPointer)
  void .cctor()
--------------------------------------------------
Класс: System.IO.Compression.ZipVersionNeededValues
Наследуется от: Enum
Поля:
  ushort value__
  ZipVersionNeededValues Default
  ZipVersionNeededValues ExplicitDirectory
  ZipVersionNeededValues Deflate
  ZipVersionNeededValues Deflate64
  ZipVersionNeededValues Zip64
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.ZipVersionMadeByPlatform
Наследуется от: Enum
Поля:
  byte value__
  ZipVersionMadeByPlatform Windows
  ZipVersionMadeByPlatform Unix
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.Crc32Helper
Наследуется от: object
Поля:
  UInt32[] s_crcTable_0
  UInt32[] s_crcTable_1
  UInt32[] s_crcTable_2
  UInt32[] s_crcTable_3
  UInt32[] s_crcTable_4
  UInt32[] s_crcTable_5
  UInt32[] s_crcTable_6
  UInt32[] s_crcTable_7
Свойства:
Методы:
  UInt32 UpdateCrc32(UInt32 crc32, Byte[] buffer, int offset, int length)
  UInt32 ManagedCrc32(UInt32 crc32, Byte[] buffer, int offset, int length)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskToApm
Наследуется от: object
Поля:
Свойства:
Методы:
  IAsyncResult Begin(Task task, AsyncCallback callback, object state)
  void End(IAsyncResult asyncResult)
  TResult End(IAsyncResult asyncResult)
  void InvokeCallbackWhenTaskCompletes(Task antecedent, AsyncCallback callback, IAsyncResult asyncResult)
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeBrotliEncoderHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .ctor()
  bool ReleaseHandle()
  bool get_IsInvalid()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeBrotliDecoderHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .ctor()
  bool ReleaseHandle()
  bool get_IsInvalid()
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=19 111B15B20E0428A22EEAA1E54B0D3B008A7A3E79C8F7F4E783710F569E9CEF15
  __StaticArrayInitTypeSize=1024 12F3E0576D447EB37B36D82BA0C1C5481B8F0D12FDC70347CE4A076B229D4C86
  __StaticArrayInitTypeSize=1024 173FC2842CC37C43473B27D45B59B1A45DB9526EBDE9E2200921BCF7DD0C10EB
  __StaticArrayInitTypeSize=64 27C36B8C06C0271A973E583417426E79BA840E2D887711B48754EECCA5504698
  __StaticArrayInitTypeSize=1024 3BA5013CDA6EDD541CADB772A5A98D00834C8FADF0CB30FBCA395ADB8381D8FF
  __StaticArrayInitTypeSize=32 6E1812F3F28F9664C814D9F31417576204DC332FB8F6AF2BB74B53D5568F1ABF
  __StaticArrayInitTypeSize=29 73AA5A9F081C8049AA00AE8CEF554E85A334986D1E0AF7AF996F0F17F7AA0BAD
  __StaticArrayInitTypeSize=128 85F902FC25B01D62E00C2B48C0246DC27425600C06C44D60365C5BF9C566F2BF
  __StaticArrayInitTypeSize=1024 959A3233BA53857D0FC9F6DC22C4A0762F7523990B7A329849041B16C4020926
  __StaticArrayInitTypeSize=116 9904D3EECE4D6804EE8E8FB77D26027A711E53D12137176433B94661389DE511
  __StaticArrayInitTypeSize=29 B672541D472D0DF45EA7ADFD9CBBEEF9C1EBA5995647FEBC9C983D5B4190B36B
  __StaticArrayInitTypeSize=32 B8E85B9CF5A7912BB02F1CF93F5F7FEBAC206CF473FC768F8D541FF3F4D0C00E
  __StaticArrayInitTypeSize=98 BA5DDECCF08DCED93F4CD2E949DD3C677C1B0ED36A5E7CE4617B187669D1504B
  __StaticArrayInitTypeSize=1024 BCC6DA7033D7BD35C3C4A0B79A4BDE6673F6700D4F1F8D85072F87907C4FDADF
  __StaticArrayInitTypeSize=128 C267D4987FDC6B820E3DE539450A37A4F2017D977A06EAB159939CF971F538C5
  __StaticArrayInitTypeSize=98 C2E5E05EAC0B7DBBD623008DDE67325395F5F4E2B275201B59B409DE0E22CC66
  __StaticArrayInitTypeSize=1024 DA23A731F5CB6C49DED3DC9980961955E5EA5BB52B7D0D1E4D0A6A0EAE73F494
  __StaticArrayInitTypeSize=1024 DFE0020BB6F2D7F230A4E0FB7849C8AAD0B36BC326ACD36FEEC967E86D016F3E
  __StaticArrayInitTypeSize=2052 E4B61E8996D29E5E5CA72544AF61F6FA97A3FD90F3A722451D54A08C6933C76E
  __StaticArrayInitTypeSize=1024 FBFA46A6E618F71C0581E682B63B80024BCCF54FD38C7349749BCE1291188BD1
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.ThrowStub
Наследуется от: ObjectDisposedException
Поля:
Свойства:
Методы:
  void ThrowNotSupportedException()
--------------------------------------------------
