[
  "OnFireworkStarted(BaseFirework)",
  "OnFireworkExhausted(BaseFirework)",
  "OnFireworkDamage(BaseFirework,HitInfo)",
  "OnFireworkDesignChange(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)",
  "OnFireworkDesignChanged(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)",
  "CanDesignFirework(BasePlayer,PatternFirework)",
  "OnCargoShipSpawnCrate(CargoShip)",
  "OnCargoShipEgress(CargoShip)",
  "OnAdventGiftAward(AdventCalendar,BasePlayer)",
  "OnAdventGiftAwarded(AdventCalendar,BasePlayer)",
  "CanBeAwardedAdventGift(AdventCalendar,BasePlayer)",
  "OnEntityControl(AutoTurret,ulong)",
  "OnTurretToggle(AutoTurret)",
  "OnTurretShutdown(AutoTurret)",
  "OnTurretStartup(AutoTurret)",
  "OnTurretModeToggle(AutoTurret)",
  "OnTurretRotate(AutoTurret,BasePlayer)",
  "OnTurretAuthorize(AutoTurret,BasePlayer)",
  "OnTurretDeauthorize(AutoTurret,BasePlayer)",
  "OnTurretClearList(AutoTurret,BasePlayer)",
  "OnTurretAssign(AutoTurret,ulong,BasePlayer)",
  "OnTurretAssigned(AutoTurret,ulong,BasePlayer)",
  "OnTurretTarget(AutoTurret,BaseCombatEntity)",
  "CanBeTargeted(BaseCombatEntity,AutoTurret)",
  "OnInterferenceUpdate(AutoTurret)",
  "OnInterferenceOthersUpdate(AutoTurret)",
  "CanPickupEntity(BasePlayer,BaseCombatEntity)",
  "OnEntityPickedUp(BaseCombatEntity,Item,BasePlayer)",
  "OnStructureRepair(BaseCombatEntity,BasePlayer)",
  "IOnBaseCombatEntityHurt(BaseCombatEntity,HitInfo)",
  "CanEntityBeHostile(BaseCombatEntity)",
  "OnEntityMarkHostile(BaseCombatEntity,float)",
  "OnEntityDeath(BaseCombatEntity,HitInfo)",
  "OnEntityDistanceCheck(BaseEntity,BasePlayer,uint,string,float,bool)",
  "OnEntityVisibilityCheck(BaseEntity,BasePlayer,uint,string,float)",
  "OnEntityFromOwnerCheck(BaseEntity,BasePlayer,uint,string)",
  "OnEntityActiveCheck(BaseEntity,BasePlayer,uint,string)",
  "OnEntityFlagsNetworkUpdate(BaseEntity)",
  "OnBuildingPrivilege(BaseEntity,OBB)",
  "CanNetworkTo(BaseEntity,BasePlayer)",
  "OnSignalBroadcast(BaseEntity)",
  "CanCastFishingRod(BasePlayer,BaseFishingRod,Item,UnityEngine.Vector3)",
  "OnFishingRodCast(BaseFishingRod,BasePlayer,Item)",
  "CanCatchFish(BasePlayer,BaseFishingRod,Item)",
  "OnFishCatch(Item,BaseFishingRod,BasePlayer)",
  "OnFishCaught(ItemDefinition,BaseFishingRod,BasePlayer)",
  "OnFishingStopped(BaseFishingRod,BaseFishingRod.FailReason)",
  "OnRocketLaunched(BasePlayer,BaseEntity)",
  "OnLiquidVesselFill(BaseLiquidVessel,BasePlayer,LiquidContainer)",
  "CanPickupLock(BasePlayer,BaseLock)",
  "OnPlayerAttack(BasePlayer,HitInfo)",
  "OnMeleeAttack(BasePlayer,HitInfo)",
  "OnMeleeThrown(BasePlayer,Item)",
  "CanSwapToSeat(BasePlayer,BaseMountable)",
  "OnPlayerWantsMount(BaseVehicle,BaseMountable)",
  "OnPlayerDismountFailed(BasePlayer,BaseMountable)",
  "OnPlayerWantsDismount(BasePlayer,BaseMountable)",
  "CanMountEntity(BasePlayer,BaseMountable)",
  "OnEntityMounted(BaseMountable,BasePlayer)",
  "CanDismountEntity(BasePlayer,BaseMountable)",
  "OnEntityDismounted(BaseMountable,BasePlayer)",
  "CanNpcEat(BaseNpc,BaseEntity)",
  "OnNpcAttack(BaseNpc,BaseEntity)",
  "IOnNpcTarget(BaseNpc,BaseEntity)",
  "OnOvenCook(BaseOven,Item)",
  "OnOvenCooked(BaseOven,Item,BaseEntity)",
  "OnFuelConsume(BaseOven,Item,ItemModBurnable)",
  "OnFuelConsumed(BaseOven,Item,ItemModBurnable)",
  "OnOvenToggle(BaseOven,BasePlayer)",
  "OnOvenTemperature(BaseOven,int)",
  "OnOvenStart(BaseOven)",
  "OnOvenStarted(BaseOven)",
  "OnFindBurnable(BaseOven)",
  "CanLootPlayer(BasePlayer,BasePlayer)",
  "OnLootPlayer(BasePlayer,BasePlayer)",
  "OnPlayerAssist(BasePlayer,BasePlayer)",
  "OnPlayerKeepAlive(BasePlayer,BasePlayer)",
  "OnEntitySnapshot(BaseNetworkable,Network.Connection)",
  "OnTeamUpdated(ulong,ProtoBuf.PlayerTeam,BasePlayer)",
  "OnTeamUpdate(ulong,ulong,BasePlayer)",
  "OnMapMarkerAdd(BasePlayer,ProtoBuf.MapNote)",
  "OnMapMarkerAdded(BasePlayer,ProtoBuf.MapNote)",
  "OnMapMarkerRemove(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>,int)",
  "OnMapMarkersClear(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>)",
  "OnMapMarkersCleared(BasePlayer)",
  "OnSendModelState(BasePlayer)",
  "OnProjectileRicochet(BasePlayer,ProtoBuf.PlayerProjectileRicochet)",
  "CanCreateWorldProjectile(HitInfo,ItemDefinition)",
  "OnWorldProjectileCreate(HitInfo,Item)",
  "IOnPlayerConnected(BasePlayer)",
  "OnRespawnInformationGiven(BasePlayer,System.Collections.Generic.List<ProtoBuf.RespawnInformation.SpawnOptions>)",
  "OnPlayerSleep(BasePlayer)",
  "OnPlayerSleepEnd(BasePlayer)",
  "OnPlayerSleepEnded(BasePlayer)",
  "OnPlayerLand(BasePlayer,float)",
  "OnPlayerLanded(BasePlayer,float)",
  "OnPlayerCorpseSpawn(BasePlayer)",
  "OnPlayerCorpseSpawned(BasePlayer,PlayerCorpse)",
  "OnPlayerRespawned(BasePlayer)",
  "OnPlayerRespawn(BasePlayer,BasePlayer.SpawnPoint)",
  "IOnBasePlayerHurt(BasePlayer,HitInfo)",
  "OnPlayerHealthChange(BasePlayer,float,float)",
  "CanDropActiveItem(BasePlayer)",
  "OnPlayerDeath(BasePlayer,HitInfo)",
  "OnPlayerKicked(BasePlayer,string)",
  "OnPlayerSetInfo(Network.Connection,string,string)",
  "CanNetworkTo(BasePlayer,BasePlayer)",
  "OnPlayerReported(BasePlayer,string,string,string,string,string)",
  "OnFeedbackReported(BasePlayer,string,string,Facepunch.Models.ReportType)",
  "OnDemoRecordingStart(string,BasePlayer)",
  "OnDemoRecordingStarted(string,BasePlayer)",
  "OnDemoRecordingStop(string,BasePlayer)",
  "OnDemoRecordingStopped(string,BasePlayer)",
  "CanSpectateTarget(BasePlayer,string)",
  "OnPlayerSpectate(BasePlayer,string)",
  "OnPlayerSpectateEnd(BasePlayer,string)",
  "OnThreatLevelUpdate(BasePlayer)",
  "CanEntityBeHostile(BasePlayer)",
  "OnEntityMarkHostile(BasePlayer,float)",
  "OnPlayerVoice(BasePlayer,byte[])",
  "OnPlayerTick(BasePlayer,PlayerTick,bool)",
  "OnPlayerInput(BasePlayer,InputState)",
  "OnActiveItemChange(BasePlayer,Item,ItemId)",
  "OnActiveItemChanged(BasePlayer,Item,Item)",
  "CanBeWounded(BasePlayer,HitInfo)",
  "OnPlayerWound(BasePlayer,HitInfo)",
  "OnPlayerRecover(BasePlayer)",
  "OnPlayerRecovered(BasePlayer)",
  "IOnBasePlayerAttacked(BasePlayer,HitInfo)",
  "OnPlayerColliderEnable(BasePlayer,UnityEngine.CapsuleCollider)",
  "OnMessagePlayer(string,BasePlayer)",
  "OnPortalUse(BasePlayer,BasePortal)",
  "OnPortalUsed(BasePlayer,BasePortal)",
  "OnWeaponModChange(BaseProjectile,BasePlayer)",
  "OnAmmoUnload(BaseProjectile,Item,BasePlayer)",
  "OnMagazineReload(BaseProjectile,IAmmoContainer,BasePlayer)",
  "OnAmmoSwitch(BaseProjectile,BasePlayer,ItemDefinition)",
  "OnWeaponReload(BaseProjectile,BasePlayer)",
  "OnWeaponFired(BaseProjectile,BasePlayer,ItemModProjectile,ProtoBuf.ProjectileShoot)",
  "OnClientProjectileEffectCreate(Network.Connection,BaseProjectile,string)",
  "CanLootEntity(BasePlayer,BaseRidableAnimal)",
  "OnRidableAnimalClaim(BaseRidableAnimal,BasePlayer,Item)",
  "OnRidableAnimalClaimed(BaseRidableAnimal,BasePlayer)",
  "OnHorseLead(BaseRidableAnimal,BasePlayer)",
  "OnVehiclePush(BaseVehicle,BasePlayer)",
  "OnTrapTrigger(BearTrap,UnityEngine.GameObject)",
  "OnTrapArm(BearTrap,BasePlayer)",
  "OnBradleyApcInitialize(BradleyAPC)",
  "OnBradleyApcPatrol(BradleyAPC)",
  "OnBradleyApcHunt(BradleyAPC)",
  "OnBradleyApcThink(BradleyAPC)",
  "OnEntityDestroy(BradleyAPC)",
  "CanBradleyApcTarget(BradleyAPC,BaseEntity)",
  "CanDemolish(BasePlayer,BuildingBlock)",
  "OnStructureDemolish(BuildingBlock,BasePlayer,bool)",
  "CanChangeGrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)",
  "CanAffordUpgrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)",
  "OnStructureUpgrade(BuildingBlock,BasePlayer,BuildingGrade.Enum,ulong)",
  "OnPayForUpgrade(BasePlayer,BuildingBlock,ConstructionGrade)",
  "OnStructureRotate(BuildingBlock,BasePlayer)",
  "OnCupboardAuthorize(BuildingPrivlidge,BasePlayer)",
  "OnCupboardDeauthorize(BuildingPrivlidge,BasePlayer)",
  "OnCupboardClearList(BuildingPrivlidge,BasePlayer)",
  "OnCupboardProtectionCalculated(BuildingPrivlidge,float)",
  "OnCardSwipe(CardReader,Keycard,BasePlayer)",
  "CanUpdateSign(BasePlayer,CarvablePumpkin)",
  "OnSignUpdated(CarvablePumpkin,BasePlayer)",
  "OnCCTVDirectionChange(CCTV_RC,BasePlayer)",
  "OnInventoryAmmoItemFind(PlayerInventory,ItemDefinition)",
  "CanUseLockedEntity(BasePlayer,CodeLock)",
  "CanChangeCode(BasePlayer,CodeLock,string,bool)",
  "OnCodeChanged(BasePlayer,CodeLock,string,bool)",
  "CanUnlock(BasePlayer,CodeLock)",
  "CanLock(BasePlayer,CodeLock)",
  "OnCodeEntered(CodeLock,BasePlayer,string)",
  "OnEventCollectablePickup(BasePlayer,CollectableEasterEgg)",
  "OnCollectiblePickup(CollectibleEntity,BasePlayer,bool)",
  "OnBookmarkControlEnd(ComputerStation,BasePlayer,BaseEntity)",
  "OnBookmarkControlEnded(ComputerStation,BasePlayer,BaseEntity)",
  "OnBookmarkDelete(ComputerStation,BasePlayer,string)",
  "OnBookmarkControl(ComputerStation,BasePlayer,string,IRemoteControllable)",
  "OnBookmarkControlEnded(ComputerStation,BasePlayer,IRemoteControllable)",
  "OnBookmarkControlStarted(ComputerStation,BasePlayer,string,IRemoteControllable)",
  "OnBookmarkAdd(ComputerStation,BasePlayer,string)",
  "OnBookmarksSendControl(ComputerStation,BasePlayer,string)",
  "OnBookmarkInput(ComputerStation,BasePlayer,InputState)",
  "CanLootEntity(BasePlayer,ContainerIOEntity)",
  "OnLootEntityEnd(BasePlayer,ContainerIOEntity)",
  "CanDeployItem(BasePlayer,Deployer,NetworkableId)",
  "OnItemDeployed(Deployer,BaseEntity,BaseEntity)",
  "OnItemDeployed(Deployer,ItemModDeployable,BaseEntity)",
  "OnRfFrequencyChange(Detonator,int,BasePlayer)",
  "OnRfFrequencyChanged(Detonator,int,BasePlayer)",
  "OnDieselEngineToggle(DieselEngine,BasePlayer)",
  "OnDieselEngineToggled(DieselEngine)",
  "OnDoorOpened(Door,BasePlayer)",
  "OnDoorClosed(Door,BasePlayer)",
  "OnDoorKnocked(Door,BasePlayer)",
  "ICanPickupEntity(BasePlayer,DoorCloser)",
  "OnDoorKnocked(DoorKnocker,BasePlayer)",
  "CanLootEntity(BasePlayer,DroppedItemContainer)",
  "OnLootEntityEnd(BasePlayer,DroppedItemContainer)",
  "OnExplosiveDud(DudTimedExplosive)",
  "OnSwitchToggle(ElectricSwitch,BasePlayer)",
  "OnSwitchToggled(ElectricSwitch,BasePlayer)",
  "OnElevatorButtonPress(ElevatorLift,BasePlayer,Elevator.Direction,bool)",
  "CanElevatorLiftMove(ElevatorLift)",
  "OnQuarryToggled(MiningQuarry,BasePlayer)",
  "OnExcavatorMiningToggled(ExcavatorArm)",
  "OnExcavatorGather(ExcavatorArm,Item)",
  "OnExcavatorResourceSet(ExcavatorArm,string,BasePlayer)",
  "OnExcavatorSuppliesRequest(ExcavatorSignalComputer,BasePlayer)",
  "OnExcavatorSuppliesRequested(ExcavatorSignalComputer,BasePlayer,BaseEntity)",
  "OnFlameThrowerBurn(FlameThrower,BaseEntity)",
  "CanBeTargeted(BasePlayer,FlameTurret)",
  "OnCorpsePopulate(FrankensteinPet,NPCPlayerCorpse)",
  "OnSwitchToggle(FuelGenerator,BasePlayer)",
  "OnSwitchToggled(FuelGenerator,BasePlayer)",
  "OnGrowableStateChange(GrowableEntity,PlantProperties.State)",
  "CanTakeCutting(BasePlayer,GrowableEntity)",
  "OnGrowableGather(GrowableEntity,BasePlayer,bool)",
  "OnGrowableGathered(GrowableEntity,Item,BasePlayer)",
  "OnRemoveDying(GrowableEntity,BasePlayer)",
  "CanBeTargeted(BasePlayer,GunTrap)",
  "OnCrateDropped(HackableLockedCrate)",
  "OnCrateLanded(HackableLockedCrate)",
  "CanHackCrate(BasePlayer,HackableLockedCrate)",
  "OnCrateHack(HackableLockedCrate)",
  "OnCrateHackEnd(HackableLockedCrate)",
  "OnSensorDetect(HBHFSensor,BasePlayer)",
  "OnHotAirBalloonToggle(HotAirBalloon,BasePlayer)",
  "OnHotAirBalloonToggled(HotAirBalloon,BasePlayer)",
  "OnConveyorFiltersChange(IndustrialConveyor,BasePlayer,ProtoBuf.IndustrialConveyor.ItemFilterList)",
  "OnSwitchToggle(IndustrialConveyor,BasePlayer)",
  "OnSwitchToggled(IndustrialConveyor,BasePlayer)",
  "CanLootEntity(BasePlayer,IndustrialCrafter)",
  "OnItemCraft(IndustrialCrafter,ItemBlueprint)",
  "OnPhotoCapture(PhotoEntity,Item,BasePlayer,byte[])",
  "OnPhotoCaptured(PhotoEntity,Item,BasePlayer,byte[])",
  "OnIORefCleared(IOEntity.IORef,IOEntity)",
  "OnInputUpdate(IOEntity,int,int)",
  "OnOutputUpdate(IOEntity)",
  "OnLootEntityEnd(BasePlayer,ItemBasedFlowRestrictor)",
  "CanUseLockedEntity(BasePlayer,KeyLock)",
  "CanUnlock(BasePlayer,KeyLock)",
  "CanLock(BasePlayer,KeyLock)",
  "OnTrapTrigger(Landmine,UnityEngine.GameObject)",
  "OnTrapDisarm(Landmine,BasePlayer)",
  "OnLiftUse(Lift,BasePlayer)",
  "OnPlayerDrink(BasePlayer,LiquidContainer)",
  "OnLiquidWeaponFired(LiquidWeapon,BasePlayer)",
  "OnLiquidWeaponFiringStopped(LiquidWeapon)",
  "CanFireLiquidWeapon(BasePlayer,LiquidWeapon)",
  "OnLockerSwap(Locker,int,BasePlayer)",
  "CanLootEntity(BasePlayer,LootableCorpse)",
  "OnLootEntityEnd(BasePlayer,LootableCorpse)",
  "CanUseMailbox(BasePlayer,Mailbox)",
  "OnItemSubmit(Item,Mailbox,BasePlayer)",
  "OnMapImageUpdated()",
  "CanAccessVendingMachine(DeliveryDroneConfig,VendingMachine)",
  "OnHealingItemUse(MedicalTool,BasePlayer)",
  "OnPlayerRevive(BasePlayer,BasePlayer)",
  "OnMixingTableToggle(MixingTable,BasePlayer)",
  "OnMlrsTarget(MLRS,UnityEngine.Vector3,BasePlayer)",
  "OnMlrsTargetSet(MLRS,UnityEngine.Vector3,BasePlayer)",
  "OnMlrsFire(MLRS,BasePlayer)",
  "OnMlrsFired(MLRS,BasePlayer)",
  "OnMlrsFiringEnded(MLRS)",
  "OnMlrsRocketFired(MLRS,ServerProjectile)",
  "OnVehicleModulesAssign(ModularCar,Rust.Modular.ItemModVehicleModule[])",
  "OnVehicleModulesAssigned(ModularCar,Rust.Modular.ItemModVehicleModule[])",
  "OnVehicleModuleSelect(Item,ModularCarGarage,BasePlayer)",
  "OnVehicleModuleSelected(Item,ModularCarGarage,BasePlayer)",
  "OnVehicleModuleDeselected(ModularCarGarage,BasePlayer)",
  "OnVehicleLockRequest(ModularCarGarage,BasePlayer,string)",
  "OnEngineStart(MotorRowboat,BasePlayer)",
  "OnEngineStarted(MotorRowboat,BasePlayer)",
  "OnNpcConversationEnded(NPCTalking,BasePlayer)",
  "OnNpcConversationStart(NPCTalking,BasePlayer,ConversationData)",
  "OnNpcConversationRespond(NPCTalking,BasePlayer,ConversationData,ConversationData.ResponseNode)",
  "OnNpcConversationResponded(NPCTalking,BasePlayer,ConversationData,ConversationData.ResponseNode)",
  "OnVendingShopOpen(InvisibleVendingMachine,BasePlayer)",
  "OnVendingShopOpened(InvisibleVendingMachine,BasePlayer)",
  "OnRfFrequencyChange(PagerEntity,int,BasePlayer)",
  "OnRfFrequencyChanged(PagerEntity,int,BasePlayer)",
  "OnItemPainted(PaintedItemStorageEntity,Item,BasePlayer,byte[])",
  "CanBeHomingTargeted(PatrolHelicopter)",
  "OnPatrolHelicopterTakeDamage(PatrolHelicopter,HitInfo)",
  "CanUpdateSign(BasePlayer,PhotoFrame)",
  "OnSignUpdated(PhotoFrame,BasePlayer)",
  "OnSignLocked(PhotoFrame,BasePlayer)",
  "CanBuild(Planner,Construction,Construction.Target)",
  "OnEntityBuilt(Planner,UnityEngine.GameObject)",
  "OnConstructionPlace(BaseEntity,Construction,Construction.Target,BasePlayer)",
  "OnPayForPlacement(BasePlayer,Planner,Construction)",
  "CanAffordToPlace(BasePlayer,Planner,Construction)",
  "CanBeHomingTargeted(PlayerHelicopter)",
  "OnItemAction(Item,string,BasePlayer)",
  "CanMoveItem(Item,PlayerInventory,ItemContainerId,int,int,bool)",
  "OnClothingItemChanged(PlayerInventory,Item,bool)",
  "CanEquipItem(PlayerInventory,Item,int)",
  "CanWearItem(PlayerInventory,Item,int)",
  "OnInventoryNetworkUpdate(PlayerInventory,ItemContainer,ProtoBuf.UpdateItemContainer,PlayerInventory.Type,bool)",
  "OnInventoryItemsFind(PlayerInventory,int)",
  "OnDefaultItemsReceive(PlayerInventory)",
  "OnDefaultItemsReceived(PlayerInventory)",
  "OnInventoryItemsTake(PlayerInventory,System.Collections.Generic.List<Item>,int,int)",
  "OnInventoryItemsCount(PlayerInventory,int)",
  "OnInventoryAmmoFind(PlayerInventory,System.Collections.Generic.List<Item>,Rust.AmmoTypes)",
  "OnPlayerLootEnd(PlayerLoot)",
  "OnLootNetworkUpdate(PlayerLoot)",
  "OnLootEntity(BasePlayer,BaseEntity)",
  "OnLootItem(BasePlayer,Item)",
  "OnPlayerMetabolize(PlayerMetabolism,BaseCombatEntity,float)",
  "OnRunPlayerMetabolism(PlayerMetabolism,BaseCombatEntity,float)",
  "OnCounterTargetChange(PowerCounter,BasePlayer,int)",
  "OnCounterModeToggle(PowerCounter,BasePlayer,bool)",
  "OnEntityControl(PoweredRemoteControlEntity,ulong)",
  "OnRemoteIdentifierUpdate(PoweredRemoteControlEntity,string)",
  "OnButtonPress(PressButton,BasePlayer)",
  "OnLiftUse(ProceduralLift,BasePlayer)",
  "OnReactiveTargetReset(ReactiveTarget)",
  "CanBeRecycled(Item,Recycler)",
  "OnRecyclerToggle(Recycler,BasePlayer)",
  "CanRecycle(Recycler,Item)",
  "OnItemRecycle(Item,Recycler)",
  "OnItemRecycleAmount(Item,int,Recycler)",
  "CanSetRelationship(BasePlayer,BasePlayer,RelationshipManager.RelationshipType,int)",
  "OnTeamDisband(RelationshipManager.PlayerTeam)",
  "OnTeamDisbanded(RelationshipManager.PlayerTeam)",
  "OnTeamCreate(BasePlayer)",
  "OnTeamCreated(BasePlayer,RelationshipManager.PlayerTeam)",
  "OnTeamPromote(RelationshipManager.PlayerTeam,BasePlayer)",
  "OnTeamLeave(RelationshipManager.PlayerTeam,BasePlayer)",
  "OnTeamAcceptInvite(RelationshipManager.PlayerTeam,BasePlayer)",
  "OnTeamRejectInvite(BasePlayer,RelationshipManager.PlayerTeam)",
  "OnTeamKick(RelationshipManager.PlayerTeam,BasePlayer,ulong)",
  "OnTeamInvite(BasePlayer,BasePlayer)",
  "OnEntityControl(RemoteControlEntity,ulong)",
  "OnItemSkinChange(int,Item,RepairBench,BasePlayer)",
  "OnItemRepair(BasePlayer,Item)",
  "OnResearchCostDetermine(Item)",
  "OnResearchCostDetermine(ItemDefinition)",
  "CanResearchItem(BasePlayer,Item)",
  "OnItemResearch(ResearchTable,Item,BasePlayer)",
  "OnItemResearched(ResearchTable,int)",
  "CanLootEntity(BasePlayer,ResourceContainer)",
  "OnRfFrequencyChange(RFBroadcaster,int,BasePlayer)",
  "OnRfFrequencyChanged(RFBroadcaster,int,BasePlayer)",
  "OnRfFrequencyChange(RFReceiver,int,BasePlayer)",
  "OnRfFrequencyChanged(RFReceiver,int,BasePlayer)",
  "OnSamSiteTargetScan(SamSite,System.Collections.Generic.List<SamSite.ISamSiteTarget>)",
  "OnSamSiteTarget(SamSite,SamSite.ISamSiteTarget)",
  "CanSamSiteShoot(SamSite)",
  "OnSamSiteModeToggle(SamSite,BasePlayer,bool)",
  "OnShopCompleteTrade(ShopFront)",
  "OnShopAcceptClick(ShopFront,BasePlayer)",
  "OnShopCancelClick(ShopFront,BasePlayer)",
  "CanUpdateSign(BasePlayer,Signage)",
  "OnSignLocked(Signage,BasePlayer)",
  "OnSignUpdated(Signage,BasePlayer,int)",
  "OnSleepingBagValidCheck(SleepingBag,ulong,bool)",
  "OnPlayerRespawn(BasePlayer,SleepingBag)",
  "OnSleepingBagDestroy(SleepingBag,ulong)",
  "OnSleepingBagDestroyed(SleepingBag,ulong)",
  "CanRenameBed(BasePlayer,SleepingBag,string)",
  "CanAssignBed(BasePlayer,SleepingBag,ulong)",
  "CanSetBedPublic(BasePlayer,SleepingBag)",
  "OnBedMade(SleepingBag,BasePlayer)",
  "OnSpinWheel(BasePlayer,SpinnerWheel)",
  "OnEntityReskin(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)",
  "OnEntityReskinned(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)",
  "OnSprayCreate(SprayCan,UnityEngine.Vector3,UnityEngine.Quaternion)",
  "OnSprayRemove(SprayCanSpray,BasePlayer)",
  "OnStashOcclude(StashContainer)",
  "CanHideStash(BasePlayer,StashContainer)",
  "OnStashHidden(StashContainer,BasePlayer)",
  "CanSeeStash(BasePlayer,StashContainer)",
  "OnStashExposed(StashContainer,BasePlayer)",
  "CanLootEntity(BasePlayer,StorageContainer)",
  "OnLootEntityEnd(BasePlayer,StorageContainer)",
  "OnAnalysisComplete(SurveyCrater,BasePlayer)",
  "OnExplosiveThrown(BasePlayer,BaseEntity,ThrownWeapon)",
  "OnExplosiveDropped(BasePlayer,BaseEntity,ThrownWeapon)",
  "OnTrainCarUncouple(TrainCar,BasePlayer)",
  "OnTreeMarkerHit(TreeEntity,HitInfo)",
  "OnVehicleHornPressed(VehicleModuleSeating,BasePlayer)",
  "OnCupboardAuthorize(VehiclePrivilege,BasePlayer)",
  "OnCupboardDeauthorize(VehiclePrivilege,BasePlayer)",
  "OnCupboardClearList(VehiclePrivilege,BasePlayer)",
  "OnRefreshVendingStock(VendingMachine,ItemDefinition)",
  "OnBuyVendingItem(VendingMachine,BasePlayer,int,int)",
  "OnVendingTransaction(VendingMachine,BasePlayer,int,int,ItemContainer)",
  "CanPurchaseItem(BasePlayer,Item,System.Action<BasePlayer, Item>,VendingMachine,ItemContainer)",
  "OnTakeCurrencyItem(VendingMachine,Item)",
  "OnGiveSoldItem(VendingMachine,Item,BasePlayer)",
  "OnToggleVendingBroadcast(VendingMachine,BasePlayer)",
  "OnVendingShopRename(VendingMachine,string,BasePlayer)",
  "OnVendingShopOpen(VendingMachine,BasePlayer)",
  "OnVendingShopOpened(VendingMachine,BasePlayer)",
  "OnOpenVendingAdmin(VendingMachine,BasePlayer)",
  "CanVendingAcceptItem(VendingMachine,Item,int)",
  "CanUseVending(BasePlayer,VendingMachine)",
  "OnDeleteVendingOffer(VendingMachine,int)",
  "OnRotateVendingMachine(VendingMachine,BasePlayer)",
  "OnAddVendingOffer(VendingMachine,ProtoBuf.VendingMachine.SellOrder)",
  "CanAdministerVending(BasePlayer,VendingMachine)",
  "OnRackedWeaponSwap(Item,WeaponRackSlot,BasePlayer,WeaponRack)",
  "OnRackedWeaponSwapped(Item,WeaponRackSlot,BasePlayer,WeaponRack)",
  "OnRackedWeaponTake(Item,BasePlayer,WeaponRack)",
  "OnRackedWeaponTaken(Item,BasePlayer,WeaponRack)",
  "OnRackedWeaponUnload(Item,BasePlayer,WeaponRack)",
  "OnRackedWeaponUnloaded(Item,BasePlayer,WeaponRack)",
  "OnRackedWeaponMount(Item,BasePlayer,WeaponRack)",
  "OnRackedWeaponMounted(Item,BasePlayer,WeaponRack)",
  "OnRackedWeaponLoad(Item,ItemDefinition,BasePlayer,WeaponRack)",
  "OnRackedWeaponLoaded(Item,ItemDefinition,BasePlayer,WeaponRack)",
  "CanUseWires(BasePlayer)",
  "OnWireConnect(BasePlayer,BaseNetworkable,int,BaseNetworkable,int,System.Collections.Generic.List<UnityEngine.Vector3>)",
  "OnWireClear(BasePlayer,IOEntity,int,IOEntity,bool)",
  "OnTechTreeNodeUnlock(Workbench,TechTreeData.NodeInstance,BasePlayer)",
  "OnTechTreeNodeUnlocked(Workbench,TechTreeData.NodeInstance,BasePlayer)",
  "OnExperimentStart(Workbench,BasePlayer)",
  "OnExperimentStarted(Workbench,BasePlayer)",
  "OnExperimentEnd(Workbench)",
  "OnExperimentEnded(Workbench)",
  "OnItemPickup(Item,BasePlayer)",
  "OnXmasLootDistribute(XMasRefill)",
  "OnXmasGiftsDistribute(XMasRefill,BasePlayer)",
  "OnComposterUpdate(Composter)",
  "OnElevatorCall(Elevator,Elevator)",
  "OnElevatorMove(Elevator,int)",
  "OnHorseUnhitch(RidableHorse,HitchTrough.HitchSpot)",
  "OnHorseHitch(RidableHorse,HitchTrough.HitchSpot)",
  "OnSolarPanelSunUpdate(SolarPanel,int)",
  "OnSprinklerSplashed(Sprinkler)",
  "OnTakeCurrencyItem(NPCVendingMachine,Item)",
  "OnNpcGiveSoldItem(NPCVendingMachine,Item,BasePlayer)",
  "CanAdministerVending(BasePlayer,NPCVendingMachine)",
  "OnWindmillUpdate(ElectricWindmill)",
  "OnWindmillUpdated(ElectricWindmill)",
  "OnBigWheelWin(BigWheelGame,Item,BigWheelBettingTerminal,int)",
  "OnBigWheelLoss(BigWheelGame,Item,BigWheelBettingTerminal)",
  "OnHuntEventStart(EggHuntEvent)",
  "OnHuntEventEnd(EggHuntEvent)",
  "OnItemUnwrap(Item,BasePlayer,ItemModUnwrap)",
  "OnXmasStockingFill(Stocking)",
  "OnCorpsePopulate(GingerbreadNPC,NPCPlayerCorpse)",
  "OnNpcDuck(HumanNPC)",
  "OnCorpsePopulate(HumanNPC,NPCPlayerCorpse)",
  "OnNpcTarget(HumanNPC,BaseEntity)",
  "OnNpcAlert(ScientistNPC)",
  "OnNpcRadioChatter(ScientistNPC)",
  "OnNpcEquipWeapon(ScientistNPC,Item)",
  "OnNpcEquipWeapon(NPCPlayer,Item)",
  "OnCorpsePopulate(ScarecrowNPC,NPCPlayerCorpse)",
  "OnImpactEffectCreate(HitInfo)",
  "OnClientCommand(Network.Connection,string)",
  "OnSendCommand(Network.Connection,string,object[])",
  "OnSendCommand(System.Collections.Generic.List<Network.Connection>,string,object[])",
  "OnBroadcastCommand(string,object[])",
  "OnNpcTarget(BaseEntity,BaseEntity)",
  "OnPhoneDial(PhoneController,PhoneController,BasePlayer)",
  "CanReceiveCall(PhoneController)",
  "OnPhoneAnswer(PhoneController,PhoneController)",
  "OnPhoneAnswered(PhoneController,PhoneController)",
  "OnPhoneDialTimeout(PhoneController,PhoneController,BasePlayer)",
  "OnPhoneDialTimedOut(PhoneController,PhoneController,BasePlayer)",
  "OnPhoneDialFail(PhoneController,Telephone.DialFailReason,BasePlayer)",
  "OnPhoneDialFailed(PhoneController,Telephone.DialFailReason,BasePlayer)",
  "OnPhoneCallStart(PhoneController,PhoneController,BasePlayer)",
  "OnPhoneCallStarted(PhoneController,PhoneController,BasePlayer)",
  "OnPhoneNameUpdate(PhoneController,string,BasePlayer)",
  "OnPhoneNameUpdated(PhoneController,string,BasePlayer)",
  "OnEyePosValidate(AttackEntity,BasePlayer,UnityEngine.Vector3,bool)",
  "OnHammerHit(BasePlayer,HitInfo)",
  "OnNetworkGroupEntered(BaseNetworkable,Network.Visibility.Group)",
  "OnNetworkGroupLeft(BaseNetworkable,Network.Visibility.Group)",
  "OnEntityLoaded(BaseNetworkable,BaseNetworkable.LoadInfo)",
  "OnEntitySpawned(BaseNetworkable)",
  "OnEntityKill(BaseNetworkable)",
  "CanNetworkTo(BaseNetworkable,BasePlayer)",
  "IOnEntitySaved(BaseNetworkable,BaseNetworkable.SaveInfo)",
  "OnDispenserBonus(ResourceDispenser,BasePlayer,Item)",
  "OnDispenserGather(ResourceDispenser,BasePlayer,Item)",
  "OnWaterCollect(WaterCatcher)",
  "OnWaterCollect(WaterPump,ItemDefinition)",
  "OnWaterPurify(WaterPurifier,float)",
  "OnWaterPurified(WaterPurifier,float)",
  "OnDecayHeal(DecayEntity)",
  "OnDecayDamage(DecayEntity)",
  "CanCheckFuel(EntityFuelSystem,StorageContainer,BasePlayer)",
  "OnFuelItemCheck(EntityFuelSystem,StorageContainer)",
  "OnFuelAmountCheck(EntityFuelSystem,Item)",
  "OnFuelCheck(EntityFuelSystem)",
  "CanUseFuel(EntityFuelSystem,StorageContainer,float,float)",
  "OnFireBallSpread(FireBall,BaseEntity)",
  "OnFireBallDamage(FireBall,BaseCombatEntity,HitInfo)",
  "OnFlameExplosion(FlameExplosive,UnityEngine.Collider)",
  "OnQuarryGather(MiningQuarry,Item)",
  "OnQuarryConsumeFuel(MiningQuarry,Item)",
  "OnResourceDepositCreated(ResourceDepositManager.ResourceDeposit)",
  "OnSurveyGather(SurveyCharge,Item)",
  "OnContainerDropItems(ItemContainer)",
  "OnLootSpawn(LootContainer)",
  "OnBonusItemDrop(Item,BasePlayer)",
  "OnBonusItemDropped(Item,BasePlayer)",
  "OnHelicopterTarget(HelicopterTurret,BaseCombatEntity)",
  "CanBeTargeted(BaseCombatEntity,HelicopterTurret)",
  "OnHelicopterRetire(PatrolHelicopterAI)",
  "CanHelicopterTarget(PatrolHelicopterAI,BasePlayer)",
  "CanHelicopterStrafe(PatrolHelicopterAI)",
  "CanHelicopterUseNapalm(PatrolHelicopterAI)",
  "OnHelicopterStrafeEnter(PatrolHelicopterAI,UnityEngine.Vector3)",
  "CanHelicopterStrafeTarget(PatrolHelicopterAI,BasePlayer)",
  "OnSupplyDropLanded(SupplyDrop)",
  "OnCargoPlaneSignaled(BaseEntity,SupplySignal)",
  "CanWaterBallSplash(ItemDefinition,UnityEngine.Vector3,float,int)",
  "OnPlayerDropActiveItem(BasePlayer,Item)",
  "CanCraft(PlayerBlueprints,ItemDefinition,int)",
  "OnRandomItemAward(RandomItemDispenser,RandomItemDispenser.RandomItemChance,BasePlayer,UnityEngine.Vector3)",
  "OnEntityTakeDamage(ResourceEntity,HitInfo)",
  "OnEntityDeath(ResourceEntity,HitInfo)",
  "CanBeHomingTargeted(RoadFlare)",
  "OnEntityStabilityCheck(StabilityEntity)",
  "OnExplosiveFuseSet(TimedExplosive,float)",
  "OnTimedExplosiveExplode(TimedExplosive,UnityEngine.Vector3)",
  "CanExplosiveStick(TimedExplosive,BaseEntity)",
  "OnTrapSnapped(BaseTrapTrigger,UnityEngine.GameObject,UnityEngine.Collider)",
  "OnWildlifeTrap(WildlifeTrap,TrappableWildlife)",
  "OnBoatPathGenerate()",
  "CanBeHomingTargeted(AttackHeliPilotFlare)",
  "CanBeHomingTargeted(BaseHelicopter)",
  "CanBeHomingTargeted(CH47Helicopter)",
  "OnHelicopterDropCrate(CH47HelicopterAIController)",
  "OnHelicopterOutOfCrates(CH47HelicopterAIController)",
  "CanHelicopterDropCrate(CH47HelicopterAIController)",
  "OnHelicopterDropDoorOpen(CH47HelicopterAIController)",
  "CanUseHelicopter(BasePlayer,CH47HelicopterAIController)",
  "OnEntityDestroy(CH47HelicopterAIController)",
  "OnHelicopterAttack(CH47HelicopterAIController,HitInfo)",
  "OnVehicleModuleMove(BaseVehicleModule,BaseModularVehicle,BasePlayer)",
  "OnVehicleLockableCheck(ModularCarCodeLock)",
  "CanUnlock(BasePlayer,ModularCarCodeLock,string)",
  "CanSwapToSeat(BasePlayer,ModularCarSeat)",
  "OnEngineStatsRefresh(VehicleModuleEngine,Rust.Modular.EngineStorage)",
  "OnEngineStatsRefreshed(VehicleModuleEngine,Rust.Modular.EngineStorage)",
  "CanTrainCarCouple(TrainCar,TrainCar)",
  "OnEngineStart(TOwner,BasePlayer)",
  "OnEngineStarted(TOwner,BasePlayer)",
  "OnEngineStartFinished(TOwner)",
  "OnEngineStop(TOwner)",
  "OnEngineStopped(TOwner)",
  "OnItemDespawn(Item)",
  "CanCombineDroppedItem(DroppedItem,DroppedItem)",
  "OnDroppedItemCombined(DroppedItem)",
  "OnRfListenerAdd(IRFObject,int)",
  "OnRfListenerAdded(IRFObject,int)",
  "OnRfListenerRemove(IRFObject,int)",
  "OnRfListenerRemoved(IRFObject,int)",
  "OnRfBroadcasterAdd(IRFObject,int)",
  "OnRfBroadcasterAdded(IRFObject,int)",
  "OnRfBroadcasterRemove(IRFObject,int)",
  "OnRfBroadcasterRemoved(IRFObject,int)",
  "OnAirdrop(CargoPlane,UnityEngine.Vector3)",
  "OnSupplyDropDropped(BaseEntity,CargoPlane)",
  "OnEventTrigger(TriggeredEventPrefab)",
  "InitLogging()",
  "OnBuildingSplit(BuildingManager.Building,uint)",
  "OnBuildingMerge(ServerBuildingManager,BuildingManager.Building,BuildingManager.Building)",
  "OnEntityGroundMissing(BaseEntity)",
  "OnServerSave()",
  "OnNewSave(string)",
  "OnSaveLoad(System.Collections.Generic.Dictionary<BaseEntity, ProtoBuf.Entity>)",
  "CanUnlockTechTreeNodePath(BasePlayer,TechTreeData.NodeInstance,TechTreeData)",
  "CanUnlockTechTreeNode(BasePlayer,TechTreeData.NodeInstance,TechTreeData)",
  "OnEntityEnter(TriggerBase,BaseEntity)",
  "OnEntityLeave(TriggerBase,BaseEntity)",
  "OnEntityEnter(TriggerComfort,BaseEntity)",
  "OnEntityLeave(TriggerComfort,BaseEntity)",
  "CanUseGesture(BasePlayer,GestureConfig)",
  "OnIngredientsCollect(ItemCrafter,ItemBlueprint,ItemCraftTask,int,BasePlayer)",
  "OnItemCraft(ItemCraftTask,BasePlayer,Item)",
  "OnItemCraftFinished(ItemCraftTask,Item,ItemCrafter)",
  "OnItemCraftCancelled(ItemCraftTask,ItemCrafter)",
  "CanCraft(ItemCrafter,ItemBlueprint,int,bool)",
  "CanFastTrackCraftTask(ItemCrafter,ItemCraftTask,int)",
  "IOnLoseCondition(Item,float)",
  "OnItemStacked(Item,Item,ItemContainer,int)",
  "OnItemStacked(Item,Item,ItemContainer)",
  "OnItemDropped(Item,BaseEntity)",
  "OnItemRemove(Item)",
  "OnItemLock(Item)",
  "OnItemUnlock(Item)",
  "OnItemSplit(Item,int)",
  "CanStackItem(Item,Item)",
  "OnItemUse(Item,int)",
  "OnMaxStackable(Item)",
  "OnItemAddedToContainer(ItemContainer,Item)",
  "OnItemRemovedFromContainer(ItemContainer,Item)",
  "CanAcceptItem(ItemContainer,Item,int)",
  "OnPlayerAddModifiers(BasePlayer,Item,ItemModConsumable)",
  "OnItemRefill(Item,BasePlayer)",
  "OnPlayerStudyBlueprint(BasePlayer,Item)",
  "OnItemUpgrade(Item,Item,BasePlayer)",
  "OnMissionStart(BaseMission,BaseMission.MissionInstance,BasePlayer)",
  "OnMissionStarted(BaseMission,BaseMission.MissionInstance,BasePlayer)",
  "OnMissionSucceeded(BaseMission,BaseMission.MissionInstance,BasePlayer)",
  "OnMissionFailed(BaseMission,BaseMission.MissionInstance,BasePlayer,BaseMission.MissionFailReason)",
  "CanAssignMission(BasePlayer,BaseMission,IMissionProvider)",
  "OnMissionAssigned(BaseMission,IMissionProvider,BasePlayer)",
  "OnNetworkSubscriptionsGather(NetworkVisibilityGrid,Network.Visibility.Group,System.Collections.Generic.List<Network.Visibility.Group>,int)",
  "OnWorldPrefabSpawned(UnityEngine.GameObject,string)",
  "OnTerrainInitialized()",
  "OnTerrainCreate(TerrainGenerator)",
  "OnPlayerViolation(BasePlayer,AntiHackType,float)",
  "OnCentralizedBanCheck(Network.Connection)",
  "IOnUserApprove(Network.Connection)",
  "OnConnectionQueue(Network.Connection)",
  "OnQueueCycle(int)",
  "OnQueueMessage(Network.Connection,int)",
  "OnConnectionDequeue(Network.Connection)",
  "CanBypassQueue(Network.Connection)",
  "OnPlayerKicked(Network.Connection,string)",
  "OnPlayerBanned(Network.Connection,string)",
  "OnServerInitialize()",
  "IOnServerInitialized()",
  "IOnPlayerBanned(Network.Connection,AuthResponse)",
  "OnTick()",
  "OnServerInformationUpdated()",
  "OnPlayerDisconnected(BasePlayer,string)",
  "OnFindSpawnPoint(BasePlayer)",
  "IOnServerShutdown()",
  "OnServerRestartInterrupt()",
  "OnServerRestart(string,int)",
  "OnClientDisconnect(Network.Connection,string)",
  "OnPlayerSpawn(BasePlayer,Network.Connection)",
  "OnClientAuth(Network.Connection)",
  "OnServerUserRemove(ulong)",
  "OnServerUserSet(ulong,ServerUsers.UserGroup,string,string,long)",
  "OnServerMessage(string,string,string,ulong)",
  "IOnPlayerCommand(BasePlayer,string)",
  "IOnPlayerChat(ulong,string,string,ConVar.Chat.ChatChannel,BasePlayer)",
  "OnRconConnection(System.Net.IPAddress)",
  "IOnRconInitialize()",
  "OnEngineLoadoutRefresh(Rust.Modular.EngineStorage)",
  "OnNpcTargetSense(BaseEntity,BaseEntity,AIBrainSenses)",
  "OnServerInitialized(bool)",
  "OnServerShutdown()",
  "OnEntityTakeDamage(BaseCombatEntity,HitInfo)",
  "OnNpcTarget(BaseNpc,BaseEntity)",
  "OnEntitySaved(BaseNetworkable,BaseNetworkable.SaveInfo)",
  "OnLoseCondition(object[])",
  "CanPickupEntity(BasePlayer,DoorCloser)",
  "OnEntityTakeDamage(BasePlayer,HitInfo)",
  "OnPlayerBanned(string,ulong,string,string,long)",
  "OnUserBanned(string,string,string,string,long)",
  "OnPlayerUnbanned(string,ulong,string)",
  "OnUserUnbanned(string,string,string)",
  "CanClientLogin(Network.Connection)",
  "CanUserLogin(string,string,string)",
  "OnUserApprove(Network.Connection)",
  "OnUserApproved(string,string,string)",
  "OnPlayerOfflineChat(ulong,string,string,ConVar.Chat.ChatChannel)",
  "OnPlayerChat(BasePlayer,string,ConVar.Chat.ChatChannel)",
  "OnUserChat(Oxide.Core.Libraries.Covalence.IPlayer,string)",
  "OnApplicationCommand(BasePlayer,string,string[])",
  "OnApplicationCommand(Oxide.Core.Libraries.Covalence.IPlayer,string,string[])",
  "OnPlayerCommand(BasePlayer,string,string[])",
  "OnUserCommand(Oxide.Core.Libraries.Covalence.IPlayer,string,string[])",
  "OnUserConnected(Oxide.Core.Libraries.Covalence.IPlayer)",
  "OnPlayerConnected(BasePlayer)",
  "OnUserDisconnected(Oxide.Core.Libraries.Covalence.IPlayer,string)",
  "OnPlayerLanguageChanged(BasePlayer,string)",
  "OnPlayerLanguageChanged(Oxide.Core.Libraries.Covalence.IPlayer,string)",
  "OnUserKicked(Oxide.Core.Libraries.Covalence.IPlayer,string)",
  "OnUserRespawn(Oxide.Core.Libraries.Covalence.IPlayer)",
  "OnUserRespawned(Oxide.Core.Libraries.Covalence.IPlayer)",
  "OnRconMessage(System.Net.IPAddress,Oxide.Core.RemoteConsole.RemoteMessage)",
  "OnRconCommand(System.Net.IPAddress,string,string[])",
  "OnServerCommand(ConsoleSystem.Arg)",
  "OnServerCommand(string,string[])",
  "CanUseUI(BasePlayer,string)",
  "OnDestroyUI(BasePlayer,string)",
  "OnMessagePlayer(string,BasePlayer,ulong)"
]
  "OnUserDisconnected",
  "OnPlayerLanguageChanged",
  "OnUserKicked",
  "OnUserRespawn",
  "OnUserRespawned",
  "OnRconMessage",
  "OnRconCommand",
  "OnServerCommand",
  "CanUseUI",
  "OnDestroyUI"
]